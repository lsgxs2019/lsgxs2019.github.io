{"pages":[{"title":"404","text":"","link":"/404/index.html"},{"title":"about","text":"AboutAbout me","link":"/about/index.html"},{"title":"categories","text":"","link":"/categories/index.html"},{"title":"data","text":"","link":"/data/index.html"},{"title":"tags","text":"","link":"/tags/index.html"},{"title":"timeline","text":"","link":"/timeline/index.html"}],"posts":[{"title":"120周线的支撑","text":"在三线开花的周线系统中，可以再加上120周线，大多牛股的调整极限会在120周线处","link":"/2021/08/04/120%E5%91%A8%E7%BA%BF%E7%9A%84%E6%94%AF%E6%92%91/"},{"title":"CMD autocomplete","text":"[Command line crash course](Command line crash course - Learn web development | MDN (mozilla.org) by MDN contributors is licensed under CC-BY-SA 2.5 A very useful terminal shortcut A very useful terminal shortcut is using the tab key to autocomplete names that you know are present, rather than having to type out the whole thing. For example, after typing the above two commands, try typing cd D and pressing tab — it should autocomplete the directory name Desktop for you, provided it is present in the current directory. 12345cd Desktop/project/srcNote that including a leading slash on your path makes the path absolute, for example /Users/your-user-name/Desktop. Omitting the leading slash like we've done above makes the path relative to your present working directory. This is exactly the same as you would see with URLs in your web browser. A leading slash means &quot;at the root of the web site&quot;, whereas omitting the slash means &quot;the URL is relative to my current page&quot;.","link":"/2022/09/11/CMD-autocomplete/"},{"title":"TestHexoWrite","text":"Hexo文档头模板_Slling’s Hello World-CSDN博客 https://www.imooc.com/article/304251","link":"/2021/05/20/HexoFrontMatter/"},{"title":"把Hexo生成的静态网页部署到coding上","text":"把Hexo生成的静态网页部署到coding上因为github的网速问题，可以尝试把hexo生成的静态博客文件发布到coding上。 首先注册coding账号(CODING - 一站式软件研发管理平台)，并绑定腾讯云（需要实名认证） 新建5人以下团队的项目 新建代码仓库(选择devops)，可以选择添加readme文件 点击代码仓库中，在左下角显示项目设置，再选择功能开关，如果不熟悉，可以打开所有功能开关，持续集成和持续部署要选择。 在本地的git bash 命令窗口下，使用clip &lt; id_ed25519.pub ，把公钥的内容输出到剪贴板，在coding的个人账户设置里，添加公钥内容并保存。使用ssh -T git@coding.net 测试ssh协议链接。 编辑hexo博客项目根目录下的_config.yml文件，把deployer段的内容修改下面的内容： 12345deploy: type: git repo: git@e.coding.net:username/myblog/hexoblog.git branch: master hexo g -d 发布到coding腾讯云空间 部署成功后，设置自定义以域名 部署在coding的静态网站的收费标准 有6个月的免费试用期，后期应该是要收取费用的，具体可以查看coding 官方的资费明细 自动部署也可以实现自动部署博客到coding","link":"/2021/06/08/Hexo%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99%E9%83%A8%E7%BD%B2%E5%88%B0coding/"},{"title":"HowtoUseHexo","text":"install node.js 和git install hexo （ git bash） hexo init 123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install Configuration _config.yml write post 1hexo new &lt;title&gt; generate 1hexo generat or hexo g server 1hexo server deploy 123本地浏览 localhost:4000部署到github.com :hexo deploy or hexo d 重新修改post之后 123456hexo clean （删除db.json数据库和由generate生成的保存html文件的public目录）hexo generate （重新把source目录下的md文档生成每个文件夹下的index.html文件，这些文件夹都是以年月日建立的目录树，所有要发布的内容保存在public目录下）hexo server localhost:4000 hexo deploy （一般要执行hexo deploy 或者hexo d,hexo deploye时， 是先清空.deploy_git目录，然后从public目录所有内容复制到到.deploy_git目录，按照_config.yml里设置的deploye参数push到远程仓库。如果自己手动在git bash 命令窗口下使用git 命令push到远程的仓库，需要推送的是public目录，而不是项目目录。如果没有完整的项目文件，可以直接使用git clone把远程仓库的所有内容clone到本地，修改之后在再直接push到远程，不过一不推荐这个方式，容易出错，只是通过这种方式熟悉hexo的工作流程。hexo必须把markdown文件在本地转换成html再上传到github，而github对jekyll的支持，可以直接push本地的markdown文件到github仓库，由github提供的服务把markdown转换为html。 这里的图片引用使用域名+站点目录的形式 12![img](https://customedns\\images\\xxx.jpg)想在markdown文档中引用图片，可以把图片保存在站点根目录的images目录下。需要在运行hexo generate命令之后，把图片复制到生成的public\\images目录下，然后由hexo deply把public目录复制到.deploy_git目录，git上传到到username.github.io站点根目录下 Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2021/05/18/HowtoUseHexo/"},{"title":"Javascript对象之location","text":"javascript 对象之locationDOM对象中的location可以解析URL","link":"/2022/08/26/Javascript%E5%AF%B9%E8%B1%A1%E4%B9%8Blocation/"},{"title":"MDN licensed","text":"About MDN documents licensed12[doc....](url) by MDN contributors is licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/) For example: CSS basics - Learn web development | MDN (mozilla.org) by MDN contributors is licensed under CC-BY-SA 2.5","link":"/2022/08/23/MDN-licensed/"},{"title":"UEFIandGPT电脑主机安装windows10","text":"UEFI +GPT电脑主机安装Windows10 好久没有安装windows系统了，有点生疏。一台UEFI启动的机器，使用ventory多合一的winpe启动后，在winpe下格式化分区，使用dism++恢复自己封装的win10系统(wim格式的镜像)，重启后不能进入win10。后来使用别的方法恢复镜像，同样不能正常启动windows10系统。 后来仔细想了一下，会不是是硬盘的分区表格式不对。当时没在意原来的硬盘分区情况。第二天又上门去安装系统，特意看了一下硬盘的情况，是一个支持NVME协议的SSD硬盘，另外一个应该是sata协议的机械硬盘。在更改UEFI启动顺序，记得有个windows boot manager intel ssd 选项，这个就是那个固态硬盘。豁然开朗，问题就在这个上。 对于这种配置的双硬盘系统，一般把操作系统安装在这SSD固态硬盘上，可以提高系统的运行速度，机械硬盘可以用保存用户数据。 重新安装的方法如下： 在UEFI启动参数表里更改启动顺序。设置U盘为第一驱动顺序 使用U盘的winpe启动，在winpe下使用分区工具把单独的那个固态硬盘重新分区，记得使用gpt格式的，不能使用mbr格式，否则系统安装上，UEFI也无法识别硬盘。分区时，如果不太熟悉，可以直接使用快速分区，建立一个分区即可，另外记得把esp分区勾选中。 直接使用ventory的多合一winpe，可以直接显示安装版的windows10镜像，选择即可进入常规的windows安装界面，剩下的就很简单了。完成安装后重启系统，第一有点慢，一直在转圈圈，耐心等，正常就是如此。给别人装机就有点忐忑^_^。所以我轻易不给别人装机，谁叫他是自己的亲戚呢。一点点的问题，最后都是你装的问题，哈哈，这是人性，扯远了。正在疑惑时，熟悉的windows10界面终于出现了，我就说，没有我搞不定问题，其实，这个也可以收获满满的成就感，给自己鼓励一下。 最后记得把UEFI里的启动设备顺序还原为SSD第一顺序启动。 最后总结要点如下： 12341. 在UEFI界面里设置启动顺序为自带winpe的U盘2. 在windows管理工具下查看硬盘的情况（如果已经不能登陆windows系统，就在winpe的分区工具里可以看到几个硬盘）：是一块普通的硬盘，还是带有固态硬盘的双硬盘配置。如果有固态硬盘，就可以把操作系统单独安装在这个固态硬盘上。3. UEFI系统就一定要使用GPT的硬盘分区；如果是传统那个的bios，那就可以使用MBR硬盘分区。直接在这固态硬盘上新建分区，另外一个硬盘的数据不会丢失。保险起见，也可以先用一个大容量的移动硬盘把用户的数据复制出来，这样你可以很踏实。4. 如果没有靠谱的winpe分区工具，就只能在进入原版window界面后按下快捷键，进入cmd界面，使用命令行来完成分区，这个有点小门槛，不过熟悉了不过如此，实在记不住，就把它保存在你的笔记里，在需要的时候可以查询。 扩展知识：清除驱动器并将其转换为 GPT的两种方法（数据很宝贵，操作需谨慎。如果搞不懂，就不要使用下面的方法，否则数据会没有的） 详细可参照微软公司官方文档 使用 Windows 安装程序擦除和转换驱动器关闭电脑，然后放入 Windows 安装 DVD 或 USB 密钥。在 UEFI 模式下将电脑启动到 DVD 或 USB 密钥。 有关详细信息，请参阅 启动到 UEFI 模式或传统 BIOS 模式。选择安装类型时，请选择“自定义” 。在“你想将 Windows 安装在哪里？”屏幕上，选择驱动器上的每个分区，并选择“删除” 。 驱动器将显示单个未分配空间区域。选择未分配的空间，然后单击“下一步” 。 Windows 检测到电脑已启动到 UEFI 模式，并使用 GPT 驱动器格式重格式化驱动器，然后开始安装。 手动擦除驱动器并将其转换为 GPT：关闭电脑，然后放入 Windows 安装 DVD 或 USB 密钥。在UEFI 模式下将电脑启动到 DVD 或 USB 密钥。 有关详细信息，请参阅 启动到UEFI模式或传统 BIOS 模式。在 Windows 安装程序中，按“Shift+F10”打开命令提示符窗口 。打开 diskpart 工具： 1diskpart 1list disk 1234select disk &lt;disk number&gt;cleanconvert gptexit 关闭命令提示符窗口。继续 Windows 安装程序安装。选择安装类型时，请选择“自定义” 。 驱动器将显示为单个未分配空间区域。选择未分配的空间，然后单击“下一步” 。 Windows 开始安装。","link":"/2021/08/20/UEFIandGPT%E7%94%B5%E8%84%91%E4%B8%BB%E6%9C%BA%E5%AE%89%E8%A3%85windows10/"},{"title":"a quick primer on urls and paths","text":"A quick primer on URLs and Paths by MDN contributors is licensed under CC-BY-SA 2.5 A quick primer on URLs and Paths To fully understand link targets, you need to understand URLs and file paths. This section gives you the information you need to achieve this. A URL, or Uniform Resource Locator is a string of text that defines where something is located on the Web. For example, Mozilla’s English homepage is located at https://www.mozilla.org/en-US/. URLs use paths to find files. Paths specify where the file you’re interested in is located in the filesystem. Let’s look at an example of a directory structure, see the creating-hyperlinks directory. The root of this directory structure is called creating-hyperlinks. When working locally with a website, you’ll have one directory that contains the entire site. Inside the root, we have an index.html file and a contacts.html. In a real website, index.html would be our home page or landing page (a web page that serves as the entry point for a website or a particular section of a website.). There are also two directories inside our root — pdfs and projects. These each have a single file inside them — a PDF (project-brief.pdf) and an index.html file, respectively. Note that you can have two index.html files in one project, as long as they’re in different filesystem locations. The second index.html would perhaps be the main landing page for project-related information. Same directory : If you wanted to include a hyperlink inside index.html (the top levelindex.html ) pointing to contacts.html , you would specify the filename that you want to link to, because it’s in the same directory as the current file. The URL you would use iscontacts.html :1234&lt;p&gt; Want to contact a specific staff member? Find details on our &lt;a href=&quot;contacts.html&quot;&gt;contacts page&lt;/a&gt;.&lt;/p&gt; Moving down into subdirectories: If you wanted to include a hyperlink inside index.html(the top level index.html) pointing to projects/index.html, you would need to go down into the projects directory before indicating the file you want to link to. This is done by specifying the directory’s name, then a forward slash, then the name of the file. The URL you would use is projects/index.html: 1&lt;p&gt;Visit my &lt;a href=&quot;projects/index.html&quot;&gt;project homepage&lt;/a&gt;.&lt;/p&gt; Moving back up into parent directories: If you wanted to include a hyperlink inside projects/index.html pointing to pdfs/project-brief.pdf, you’d have to go up a directory level, then back down into the pdf directory. To go up a directory, use two dots —.. — so the URL you would use is ../pdfs/project-rief.pdf: 12&lt;p&gt;A link to my &lt;a href=&quot;../pdfs/project-brief.pdf&quot;&gt;project brief&lt;/a&gt;. &lt;/p&gt; Note: You can combine multiple instances of these features into complex URLs, if needed, for example: ../../../complex/path/to/my/file.html.","link":"/2022/09/18/a-quick-primer-on-urls-and-paths/"},{"title":"about MDN web docs","text":"About MDN Web Docs by MDN contributors is licensed under CC-BY-SA 2.5 About MDN Web DocsMDN Web Docs (previously known as MDN — the Mozilla Developer Network) is an evolving learning platform for Web technologies and the software that powers the Web, including CSS, HTML, and JavaScript. We also have a detailed set of beginner’s learning material — see Learn Web development. Using MDN Web Docs contentMDN’s content is available free of charge, and under open source licenses. Copyrights and licensesMDN’s content is entirely available under various open source licenses. This section covers the types of content we provide and what licenses are in effect for each. Documentation and articlesNote: MDN content has been prepared with the contributions of authors from both inside and outside Mozilla. Unless otherwise indicated, the content is available under the terms of the Creative Commons Attribution-ShareAlike license (CC-BY-SA), v2.5 or any later version. When reusing MDN content, you need to ensure two things: Attribution is given to the original content. Please attribute “Mozilla Contributors” and include a hyperlink (online) or URL (in print) to the specific wiki page for the content being sourced. For example, to provide attribution for this article, you can write: About MDN by Mozilla Contributors is licensed under CC-BY-SA 2.5. Note that in the example, “Mozilla Contributors” links to the history of the cited page. See Best practices for attribution for further explanation. Your reuse is published under the same license as the original content—CC-BY-SA v2.5 or any later version. Code samples and snippetsCode samples added on or after August 20, 2010 are in the public domain (CC0). No licensing notice is necessary, but if you need one, you can use: “Any copyright is dedicated to the Public Domain. http://creativecommons.org/publicdomain/zero/1.0/“. Code samples added before August 20, 2010 are available under the MIT license; you should insert the following attribution information into the MIT template: “© “. Since the launch of the new Yari MDN platform on December 14 2020, there is currently no way to determine which one you need. We are working on this and will update this content soon. ContributionsIf you wish to contribute to this wiki, you must make your documentation available under the Attribution-ShareAlike license (or occasionally an alternative license already specified by the page you are editing), and your code samples available under Creative Commons CC-0 (a Public Domain dedication). Adding to this wiki means you agree that your contributions will be made available under those licenses. Some older content was made available under a license other than those described above; these are indicated at the bottom of each page by way of an Alternate License Block. Warning: No new pages may be created using alternate licenses. Copyright for contributed materials remains with the author unless the author assigns it to someone else. If you have any questions or concerns about anything discussed here, please contact [the MDN administrators](mailto:mdn-admins@mozilla.org?subject=MDN licensing question). Logos, trademarks, service marks and wordmarksThe rights in the trademarks, logos, and service marks of the Mozilla Foundation, as well as the look and feel of this website, are not licensed under the Creative Commons license, and to the extent they are works of authorship (like logos and graphic design), they are not included in the work that is licensed under those terms. If you use the text of documents, and wish to also use any of these rights, or if you have any other questions about complying with our licensing terms for this collection, you should contact the Mozilla Foundation here: licensing@mozilla.org. Linking to MDNWe regularly get users asking us questions about how to link to MDN, or even if doing so is allowed. The short answer is: yes, you can link to MDN! Not only is the hypertext link the essence of the Web, it is both a way to point your users to valuable resources and a show of trust toward the work our community does. Found a problem with this page? Edit on GitHub Source on GitHub [Report a problem with this content on **GitHub**](https://github.com/mdn/content/issues/new?template=page-report.yml&amp;mdn-url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FMDN%2FAbout&amp;metadata= Page+report+details&lt;%2Fsummary&gt; *+Folder%3A+en-us%2Fmdn%2Fabout *+MDN+URL%3A+https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FMDN%2FAbout *+GitHub+URL%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fblob%2Fmain%2Ffiles%2Fen-us%2Fmdn%2Fabout%2Findex.md *+Last+commit%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fcommit%2F4e3348a13544c736991dd78111b7d5e4d40d1d74 *+Document+last+modified%3A+2022-07-02T04%3A59%3A45.000Z &lt;%2Fdetails&gt;) Want to fix the problem yourself? See our Contribution guide. Last modified: Jul 2, 2022, by MDN contributors","link":"/2022/07/24/about-MDN-web-docs/"},{"title":"allblackscreen","text":"桌面全屏小工具 一个网页小工具，点击一下，可以将屏幕切换成全屏的纯色，比如全黑、全白、全绿等等。用处不大，但是挺有意思。","link":"/2022/01/14/allblackscreen/"},{"title":"assets-folders","text":"Global Asset FolderAssets are non-post files in the source folder, such as images, CSS or JavaScript files. For instance, If you are only going to have a few images in the Hexo project, then the easiest way is to keep them in a source/images directory. Then, you can access them using something like ![](/images/image.jpg) post asset folderFor users who expect to regularly serve images and/or other assets, and for those who prefer to separate their assets on a post-per-post basis, Hexo also provides a more organized way to manage assets. This slightly more involved, but very convenient approach to asset management can be turned on by setting the post_asset_folder setting in _config.yml to true. 12_config.ymlpost_asset_folder: true With asset folder management enabled, Hexo will create a folder every time you make a new post with the hexo new [layout] &lt;title&gt; command. This asset folder will have the same name as the markdown file associated with the post. Place all assets related to your post into the associated folder, and you will be able to reference them using a relative path, making for an easier and more convenient workflow. Tag Plugins For Relative Path ReferencingReferencing images or other assets using normal markdown syntax and relative paths may lead to incorrect display on archive or index pages. Plugins have been created by the community to address this issue in Hexo 2. However, with the release of Hexo 3, several new tag plugins were added to core. These enable you to reference your assets more easily in posts: 123{% asset_path slug %}{% asset_img slug [title] %}{% asset_link slug [title] %} For example, with post asset folders enabled, if you place an image example.jpg into your asset folder, it will not appear on the index page if you reference it using a relative path with regular ![](example.jpg) markdown syntax (however, it will work as expected in the post itself). The correct way to reference the image will thus be using tag plugin syntax rather than markdown: 12{% asset_img example.jpg This is an example image %}{% asset_img &quot;spaced asset.jpg&quot; &quot;spaced title&quot; %} This way, the image will appear both inside the post and on index and archive pages. Embedding an image using markdownhexo-renderer-marked 3.1.0 introduced a new option that allows you to embed an image in markdown without using asset_img tag plugin. To enable: 12345_config.ymlpost_asset_folder: truemarked: prependRoot: true postAsset: true Once enabled, an asset image will be automatically resolved to its corresponding post’s path. For example, “image.jpg” is located at “/2020/01/02/foo/image.jpg”, meaning it is an asset image of “/2020/01/02/foo/“ post, ![](image.jpg) will be rendered as &lt;img src=&quot;/2020/01/02/foo/image.jpg&quot;&gt; from : [hexo-docments](Asset Folders | Hexo)","link":"/2021/06/17/assets-folders/"},{"title":"有趣的技术文档链接","text":"有趣的技术文档链接 如何通过bash快速导航目录 文章链接：How to navigate directories faster with bash (mhoffman.github.io) 介绍了很炫酷的命令，在Bash shell中方便快速的切换目录 Html boilerplate 文章链接：My current HTML boilerplate 作者介绍了自己目前使用的 HTML 页面模板，解释了每一行的用途 微软公司的Rust教程：Take your first steps with Rust - Learn | Microsoft Docs 最小的 Docker 镜像文件: Building a 6kB Containerized HTTP Server! 作者介绍如何做出一个最小的 Docker 镜像文件，包含一个简单的 HTTP 服务器，大小只有 6KB","link":"/2021/05/17/bash-change-directory/"},{"title":"basics of URL","text":"What is a URL by MDN contributors is licensed under CC-BY-SA 2.5 What is a URL?This article discusses Uniform Resource Locators (URLs), explaining what they are and how they’re structured. Prerequisites: You need to first know how the Internet works, what a Web server is and the concepts behind links on the web. Objective: You will learn what a URL is and how it works on the Web. SummaryWith Hypertext and HTTP, *URL* is one of the key concepts of the Web. It is the mechanism used by browsers to retrieve any published resource on the web. URL stands for Uniform Resource Locator. A URL is nothing more than the address of a given unique resource on the Web. In theory, each valid URL points to a unique resource. Such resources can be an HTML page, a CSS document, an image, etc. In practice, there are some exceptions, the most common being a URL pointing to a resource that no longer exists or that has moved. As the resource represented by the URL and the URL itself are handled by the Web server, it is up to the owner of the web server to carefully manage that resource and its associated URL. Basics: anatomy of a URLHere are some examples of URLs: 123https://developer.mozilla.orghttps://developer.mozilla.org/en-US/docs/Learn/https://developer.mozilla.org/en-US/search?q=URL Any of those URLs can be typed into your browser’s address bar to tell it to load the associated page (resource). A URL is composed of different parts, some mandatory and others optional. The most important parts are highlighted on the URL below (details are provided in the following sections): Note: You might think of a URL like a regular postal mail address: the scheme represents the postal service you want to use, the domain name is the city or town, and the port is like the zip code; the path represents the building where your mail should be delivered; the parameters represent extra information such as the number of the apartment in the building; and, finally, the anchor represents the actual person to whom you’ve addressed your mail. Note: There are some extra parts and some extra rules regarding URLs, but they are not relevant for regular users or Web developers. Don’t worry about this, you don’t need to know them to build and use fully functional URLs. Scheme The first part of the URL is the scheme, which indicates the protocol that the browser must use to request the resource (a protocol is a set method for exchanging or transferring data around a computer network). Usually for websites the protocol is HTTPS or HTTP (its unsecured version). Addressing web pages requires one of these two, but browsers also know how to handle other schemes such as mailto: (to open a mail client), so don’t be surprised if you see other protocols. Authority Next follows the authority, which is separated from the scheme by the character pattern ://. If present the authority includes both the domain (e.g. www.example.com) and the port (80), separated by a colon: The domain indicates which Web server is being requested. Usually this is a domain name, but an IP address may also be used (but this is rare as it is much less convenient). The port indicates the technical “gate” used to access the resources on the web server. It is usually omitted if the web server uses the standard ports of the HTTP protocol (80 for HTTP and 443 for HTTPS) to grant access to its resources. Otherwise it is mandatory. Note: The separator between the scheme and authority is ://. The colon separates the scheme from the next part of the URL, while // indicates that the next part of the URL is the authority. One example of a URL that doesn’t use an authority is the mail client (mailto:foobar). It contains a scheme but doesn’t use an authority component. Therefore, the colon is not followed by two slashes and only acts as a delimiter between the scheme and mail address. Path to resource /path/to/myfile.html is the path to the resource on the Web server. In the early days of the Web, a path like this represented a physical file location on the Web server. Nowadays, it is mostly an abstraction handled by Web servers without any physical reality. Parameters ?key1=value1&amp;key2=value2 are extra parameters provided to the Web server. Those parameters are a list of key/value pairs separated with the &amp; symbol. The Web server can use those parameters to do extra stuff before returning the resource. Each Web server has its own rules regarding parameters, and the only reliable way to know if a specific Web server is handling parameters is by asking the Web server owner. Anchor #SomewhereInTheDocument is an anchor to another part of the resource itself. An anchor represents a sort of “bookmark” inside the resource, giving the browser the directions to show the content located at that “bookmarked” spot. On an HTML document, for example, the browser will scroll to the point where the anchor is defined; on a video or audio document, the browser will try to go to the time the anchor represents. It is worth noting that the part after the #, also known as the fragment identifier, is never sent to the server with the request. How to use URLsAny URL can be typed right inside the browser’s address bar to get to the resource behind it. But this is only the tip of the iceberg! The HTML language — which will be discussed later on — makes extensive use of URLs: to create links to other documents with the `` element; to link a document with its related resources through various elements such as `` or ``; to display media such as images (with the `` element), videos (with the `` element), sounds and music (with the `` element), etc.; to display other HTML documents with the `` element. Note: When specifying URLs to load resources as part of a page (such as when using the &lt;script&gt;, &lt;audio&gt;, &lt;img&gt;, &lt;video&gt;, and the like), you should generally only use HTTP and HTTPS URLs, with few exceptions (one notable one being data:; see Data URLs). Using FTP, for example, is not secure and is no longer supported by modern browsers. Other technologies, such as CSS or JavaScript, use URLs extensively, and these are really the heart of the Web. Absolute URLs vs relative URLsWhat we saw above is called an absolute URL, but there is also something called a relative URL. The URL standard defines both — though it uses the terms absolute URL string and relative URL string, to distinguish them from URL objects (which are in-memory representations of URLs). Let’s examine what the distinction between absolute and relative means in the context of URLs. The required parts of a URL depend to a great extent on the context in which the URL is used. In your browser’s address bar, a URL doesn’t have any context, so you must provide a full (or absolute) URL, like the ones we saw above. You don’t need to include the protocol (the browser uses HTTP by default) or the port (which is only required when the targeted Web server is using some unusual port), but all the other parts of the URL are necessary. When a URL is used within a document, such as in an HTML page, things are a bit different. Because the browser already has the document’s own URL, it can use this information to fill in the missing parts of any URL available inside that document. We can differentiate between an absolute URL and a relative URL by looking only at the path part of the URL. If the path part of the URL starts with the “/“ character, the browser will fetch that resource from the top root of the server, without reference to the context given by the current document. Let’s look at some examples to make this clearer. Examples of absolute URLs Full URL (the same as the one we used before) https://developer.mozilla.org/en-US/docs/Learn Implicit protocol //developer.mozilla.org/en-US/docs/LearnIn this case, the browser will call that URL with the same protocol as the one used to load the document hosting that URL. Implicit domain name /en-US/docs/LearnThis is the most common use case for an absolute URL within an HTML document. The browser will use the same protocol and the same domain name as the one used to load the document hosting that URL. Note: it isn’t possible to omit the domain name without omitting the protocol as well. Examples of relative URLsTo better understand the following examples, let’s assume that the URLs are called from within the document located at the following URL: https://developer.mozilla.org/en-US/docs/Learn Sub-resources Skills/Infrastructure/Understanding_URLsBecause that URL does not start with /, the browser will attempt to find the document in a sub-directory of the one containing the current resource. So in this example, we really want to reach this URL: https://developer.mozilla.org/en-US/docs/Learn/Skills/Infrastructure/Understanding_URLs. Going back in the directory tree ../CSS/displayIn this case, we use the ../ writing convention — inherited from the UNIX file system world — to tell the browser we want to go up from one directory. Here we want to reach this URL: https://developer.mozilla.org/en-US/docs/Learn/../CSS/display, which can be simplified to: https://developer.mozilla.org/en-US/docs/CSS/display. Semantic URLsDespite their very technical flavor, URLs represent a human-readable entry point for a Web site. They can be memorized, and anyone can enter them into a browser’s address bar. People are at the core of the Web, and so it is considered best practice to build what is called semantic URLs. Semantic URLs use words with inherent meaning that can be understood by anyone, regardless of their technical know-how. Linguistic semantics are of course irrelevant to computers. You’ve probably often seen URLs that look like mashups of random characters. But there are many advantages to creating human-readable URLs: It is easier for you to manipulate them. It clarifies things for users in terms of where they are, what they’re doing, what they’re reading or interacting with on the Web. Some search engines can use those semantics to improve the classification of the associated pages.","link":"/2022/07/24/basics-of-URL/"},{"title":"Markdown语法简介","text":"本中文版Markdown语法简介来自博客 https://blog.shengbin.me/posts/markdown-syntax Markdown语法的完整介绍在这里：http://daringfireball.net/projects/markdown/syntax。下面整理的这些为了方便写博客时参考。 分段与分行以一个或多个空行来隔开段落；以两个或多个空格来段内换行。 标题123456789101112This is an H1=============This is an H2-------------# This is an H1## This is an H2###### This is an H6 引用在每一行前面写一个&gt;： 1234567&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&gt;&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse&gt; id sem consectetuer libero luctus adipiscing. 效果： This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing. 或者在每一段前面写一个&gt;： 1234567&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing. 多重引用123456&gt; This is the first level of quoting.&gt;&gt; &gt; This is nested blockquote.&gt;&gt; Back to the first level. 效果： This is the first level of quoting. This is nested blockquote. Back to the first level. 列表列表项占一行，以*、+、-开头即可： 1234* Red* Green* Blue 效果： Red Green Blue 有序列表只需要将上述标记符换成数字加句点。而且顺序由书写顺序决定，与数字无关，但数字需要从1开始。例如： 12341\\. Bird3. McHale2. Parish 效果： Bird McHale Parish 每一个列表项可以多行： 123456* Lorem ipsum dolor sit amet, consectetuer adipiscing elit.Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,viverra nec, fringilla in, laoreet vitae, risus.* Donec sit amet nisl. Aliquam semper ipsum sit amet velit.Suspendisse id sem consectetuer libero luctus adipiscing. 效果： Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing. 代码块每一行前面缩进四个或以上个空格，就认为是开始了一段代码块。代码块内原样输出。 1234This is a normal paragraph: This is a code block. 效果： This is a normal paragraph: 12This is a code block. 横线三个或更多个*、-（它们之间可以有空格）会产生横线： 12* * * 效果： 链接内嵌链接： 1234I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or[MSN](http://search.msn.com/ &quot;MSN Search&quot;). 或参考文献式链接（缺省的链接标记认为与文本一致）： 1234567891011121314I get 10 times more traffic from [Google] [1] than from[Yahoo] [2] or [MSN] [3]. [1]: http://google.com/ &quot;Google&quot; [2]: http://search.yahoo.com/ &quot;Yahoo Search&quot; [3]: http://search.msn.com/ &quot;MSN Search&quot;I get 10 times more traffic from [Google][] than from[Yahoo][] or [MSN][]. [google]: http://google.com/ &quot;Google&quot; [yahoo]: http://search.yahoo.com/ &quot;Yahoo Search&quot; [msn]: http://search.msn.com/ &quot;MSN Search&quot; 效果： I get 10 times more traffic from Google than from Yahoo or MSN. 如果直接以链接地址作为链接文本，可以用如下快捷写法： 12&lt;http://www.shengbin.me&gt; 效果： http://www.shengbin.me 强调单个*或_产生斜体，两个（**、__）则产生粗体。例如： 1234*like* _this_**like** **this** 效果： like this like this 内嵌代码12code: `echo hello` 效果： code: echo hello 图片图片与链接类似，只需在文本前面加上感叹号!即可。图片位置和大小无法通过Markdown来指定。 转义字符以下特殊字符需要用\\转义得到。 123456789101112\\ backslash` backtick* asterisk_ underscore{} curly braces[] square brackets() parentheses# hash mark+ plus sign- minus sign (hyphen). dot! exclamation mark","link":"/2021/05/19/chinese-markdown-cheatsheet/"},{"title":"colgroup and col","text":"HTML table basics by MDN contributors is licensed under CC-BY-SA 2.5 Active learning: colgroup and colNow it’s time to have a go yourself. Below you can see the timetable of a languages teacher. On Friday she has a new class teaching Dutch all day, but she also teaches German for a few periods on Tuesday and Thursdays. She wants to highlight the columns containing the days she is teaching. Recreate the table by following the steps below. First, make a local copy of our timetable.html file in a new directory on your local machine. The HTML contains the same table you saw above, minus the column styling information. Add a &lt;colgroup&gt; element at the top of the table, just underneath the &lt;table&gt; tag, in which you can add your &lt;col&gt; elements (see the remaining steps below). The first two columns need to be left unstyled. Add a background color to the third column. The value for your style attribute is background-color:#97DB9A; Set a separate width on the fourth column. The value for your style attribute is width: 42px; Add a background color to the fifth column. The value for your style attribute is background-color: #97DB9A; Add a different background color plus a border to the sixth column, to signify that this is a special day and she’s teaching a new class. The values for your style attribute are background-color:#DCC48E; border:4px solid #C1437A; The last two days are free days, so just set them to no background color but a set width; the value for the style attribute is width: 42px; See how you get on with the example. If you get stuck, or want to check your work, you can find our version on GitHub as timetable-fixed.html (see it live also). 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;School timetable&lt;/title&gt; &lt;style&gt; html { font-family: sans-serif; } table { border-collapse: collapse; border: 2px solid rgb(200,200,200); letter-spacing: 1px; font-size: 0.8rem; } td, th { border: 1px solid rgb(190,190,190); padding: 10px 20px; } td { text-align: center; } caption { padding: 10px; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;School timetable&lt;/h1&gt; &lt;table&gt; &lt;colgroup&gt; &lt;col span=&quot;2&quot;&gt; &lt;col style=&quot;background-color:#97DB9A;&quot;&gt; &lt;col style=&quot;width:42px;&quot;&gt; &lt;col style=&quot;background-color:#97DB9A;&quot;&gt; &lt;col style=&quot;background-color:#DCC48E; border:4px solid #C1437A;&quot;&gt; &lt;col span=&quot;2&quot; style=&quot;width:42px;&quot;&gt; &lt;/colgroup&gt; &lt;tr&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;th&gt;Mon&lt;/th&gt; &lt;th&gt;Tues&lt;/th&gt; &lt;th&gt;Wed&lt;/th&gt; &lt;th&gt;Thurs&lt;/th&gt; &lt;th&gt;Fri&lt;/th&gt; &lt;th&gt;Sat&lt;/th&gt; &lt;th&gt;Sun&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;1st period&lt;/th&gt; &lt;td&gt;English&lt;/td&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt;German&lt;/td&gt; &lt;td&gt;Dutch&lt;/td&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;2nd period&lt;/th&gt; &lt;td&gt;English&lt;/td&gt; &lt;td&gt;English&lt;/td&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt;German&lt;/td&gt; &lt;td&gt;Dutch&lt;/td&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;3rd period&lt;/th&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt;German&lt;/td&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt;German&lt;/td&gt; &lt;td&gt;Dutch&lt;/td&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;4th period&lt;/th&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt;English&lt;/td&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt;English&lt;/td&gt; &lt;td&gt;Dutch&lt;/td&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/body&gt;&lt;/html&gt;","link":"/2022/08/02/colgroup-and-col/"},{"title":"do you really need a media query?","text":"[do you really need a media query](Beginner’s guide to media queries - Learn web development | MDN (mozilla.org)) is licensed under CC-BY-SA 2.5 Do you really need a media query?Do you really need a media query?Flexbox, Grid, and multi-column layout all give you ways to create flexible and even responsive components without the need for a media query. It’s always worth considering whether these layout methods can achieve what you want without adding media queries. For example, you might want a set of cards that are at least 200 pixels wide, with as many of these 200 pixels as will fit into the main article. This can be achieved with grid layout, using no media queries at all. This could be achieved using the following: 12345678910111213141516171819202122&lt;ul class=&quot;grid&quot;&gt; &lt;li&gt; &lt;h2&gt;Card 1&lt;/h2&gt; &lt;p&gt;…&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;h2&gt;Card 2&lt;/h2&gt; &lt;p&gt;…&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;h2&gt;Card 3&lt;/h2&gt; &lt;p&gt;…&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;h2&gt;Card 4&lt;/h2&gt; &lt;p&gt;…&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;h2&gt;Card 5&lt;/h2&gt; &lt;p&gt;…&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; Copy to Clipboard 12345678910111213.grid { list-style: none; margin: 0; padding: 0; display: grid; gap: 20px; grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));}.grid li { border: 1px solid #666; padding: 10px;} Open the grid layout example in the browser, or view the source. With the example open in your browser, make the screen wider and narrower to see the number of column tracks change. The nice thing about this method is that grid is not looking at the viewport width, but the width it has available for this component. It might seem strange to wrap up a section about media queries with a suggestion that you might not need one at all! However, in practice you will find that good use of modern layout methods, enhanced with media queries, will give the best results. You could use the starting point that we have created to test out more media queries. For example, perhaps you could change the size of the navigation if you detect that the visitor has a coarse pointer, using the pointer media feature. You could also experiment with adding different components and seeing whether the addition of a media query, or using a layout method like flexbox or grid is the most appropriate way to make the components responsive. Very often there is no right or wrong way — you should experiment and see which works best for your design and content.","link":"/2022/08/23/do-you-really-need-a-media-query/"},{"title":"使用Jekyll在GitHub上写博客","text":"使用Jekyll 在GitHub上写博客 注册一个163.com的免费邮箱（其他邮箱可自己实验，也许github对邮箱没有要求)，用来接受github发送的验证信息。 在Github上注册一个账户。 使用注册的邮箱完成github账户的认证 在Github上新建一个仓库，仓库名称为username.github.io 注意留心一下仓库建立完毕后，github显示的关于操作github的git命令帮助文档。 下载并安装Windows版本的Git 了解git 打开git bash 命令窗口 在git bash 下设置与github通讯的用户名和邮箱： 在git bash 下新建一个ssh协议的密钥： ssh-keygen -et25519 xxxxx 登陆到github上，在setting 下把新产生的ssh密钥复制并保存。 可以使用git 命令测试一下与github的链接是否成功。 此时就可以按照github提供的git命令帮助文档实现和github仓库的通讯。 因github网络的问题，可以下载个专门的设置hosts文件的工具，有现成的很简单，在一定程度上解决网络访问问题。当然，有空的话了解一下为什么后更好。 熟悉了git 命令操作github仓库后，就可以开始学习github推荐的jekyll博客工具 jekyll的安装 参考官方文档的安装帮助:Jekyll on Windows | Jekyll • Simple, blog-aware, static sites (jekyllrb.com) 大致流程就是下载Windows版本的ruby安装包，安装ruby 安装jekyll 安装gem ，gem相当于是ruby的包管理器，而jekyll就是ruby的一个应用包。关于gem ：RubyGems is a package management framework for Ruby.这是官方的描述。 1234567891011121314151617181920212223Jekyll requires the following:Ruby version 2.4.0 or higherRubyGemsGCC and MakeSee Requirements for guides and details.---------------------------------------------------------------Instructions1、Install all prerequisites.2、Install the jekyll and bundler gems. `gem install jekyll bundler`3、Create a new Jekyll site at ./myblog. `jekyll new myblog`4、Change into your new directory. `cd myblog`5、Build the site and make it available on a local server. `bundle exec jekyll serve`6、Browse to http://localhost:4000` 使用Markdown文本编辑器Typora在本地仓库_posts目录下编辑你博客文档，记得在markdown文档的最前边填写Jekyll出路文档的元数据，格式如下： ```markdownlayout: posttitle: 使用Jekyll在GitHub上写博客date: 2021-05-13Author: xian shancategories:tags: [github, blog] comments: true 如果每次书写这些数据对不方便，可保存成一个单独的markdow文件，切换到markdown源代码视图下(Ctrl+/)，复制粘贴到文档的最顶部即可。","link":"/2021/05/19/first-jekyll-blog/"},{"title":"gitshub仓库分支重命名","text":"gitshub仓库分支重命名在github仓库的分支操作界面改名之后，会提示在本地仓库运行下面的命令 1234git branch -m hexo-source sourcegit fetch origingit branch -u origin/source sourcegit remote set-head origin -a","link":"/2021/05/27/gitshub%E4%BB%93%E5%BA%93%E5%88%86%E6%94%AF%E9%87%8D%E5%91%BD%E5%90%8D/"},{"title":"关于git与github通讯的Https协议和SSH协议","text":"git与github通讯的Https协议和SSH协议在安装Git后，需要使用git命令与github仓库通讯，一般由两种协议实现与git与github仓库的通讯 https如果刚刚接触git和github，使用https协议与github通讯比较容易上手，顺利实现各种git命令的操作。一般复制仓库的本地的git命令如下 12git clone https://github.com/username.gitbub.io.git git clone 命令是多个git命令的封装，相当在本地新建立的username.github.io目录，再执行git init 纳入.git管理,自动建立一个master分支（git checkout -b master），自动添加远程连接git remote add origin https://github.com/username.gitbub.io.git，再 git fetch下载数据 通过https协议和github通讯，认证方式一般有用户名+密码、github-token两种方式。比较推荐token方式，比用户名+密码钥安全。那么怎么使用token方式通过验证呢？ 首先在github的settings-develpper -&gt;personal access token下生成新的token,然后直接复制token内容，保存在文本文件。 使用git clone https://github.com/username/repoistory-name.git 把项目下载到本地 首次使用需要配置用户名和邮箱，配置完成后，会在windows用户目录下的.gitconfig文件中添加数据项，可以打开查看，.gitcofig是文本文件，可以用记事本直接打开查看或者编辑。 git config --global user.name “github-username” git config --global user.email “xxxx@126.com“ 在修改了本地的项目文件后，执行git commit -m “update”提交时会查询.gitconfig中的用户名和密封数据项，如果没有配置这两项信息，会提示没有认证信息，并给出操作建议，如下图： 在 git push origin main 时，正常会弹出github认证对话框，复制粘贴前边生成的token，确定后就可以通过认证，git push 就可以把数据推送到github仓库。如果没有弹出github登录的认证对话框，我的做法时把.gitconfig里的邮箱和用户名数据删除，重新执行git config --global user.name “username”和git config --global user.email “user.email”,然后再git commit -m “update”、最后git push origin main就可以弹出github登录认证对话框，填写token，确定后就可以正常执行git push 。可以试试不加--global的配置方式。不弹出github认证对话框，可能是以内.gitconfig中已经有了用户名和邮箱，以前做过登录认证（具体原因不知道，自己猜的）。 SSHSSH的全称时Secure Shell,通过一对加密的密钥来实现客户端和服务器的通讯。在 Git Bash 命令行窗口下，使用以下命令来生成SSH密钥 1234567891011121314151617181.ssh-keygen -t rsa -C &quot;username.com--这里是密钥的注释，一般使用邮箱可说明它的用途&quot;这里的-t rsa 参数知名密钥类型为rsa，-C 为注释。也可以再加上-f filename来指定密钥的文件名称。在安装git之后，使用这个命令可在默认的路径下生成id_rsa.pub和id_rsa这两个公钥和私钥文件，一般要查询他的路劲，可在git bash 命令行下输入下面的命令：cd ~/.sshls -al 2.如果已经生成过密钥的话，就会显示这两个文件，在ssh-keygen命令中不带-f filename 参数的话，默认的文件名是id_rsa 和id_rsa.pub。3.在git bash命令窗口下使用clip &lt; id_rsa.pub，可以把文件的内容复制到剪贴板上，登录到github，在网站的setting下打开SSH及GPG Keys选项，titile随便自己一个，把剪贴板的内容粘贴在ssh-key里，保存即可，以后使用git 操作github仓库时就可以使用git@github.com:username/username.github.io.git的格式了，这个据说时传输数据的效率比https更高一些。4.如果后来又重新生成了一对密钥文件，并且把公钥的内容添加在github上之后，就要把这对密钥对应的私钥覆盖到~/.ssh目录下，这个是安装git时默认的路径，如果想修改git 使用的密钥文件的话，就要修改环境变量，不想麻烦的话，就把新生成的密钥文件改名覆盖原来的密钥对文件即可。5. 可以使用git remote -v 来查询当前连接的与github.com的连接是使用https:// 协议还是git协议。例如：git clone https://github.com/username/username.github.io //git remote -v 显示的是http协议连接github，git push origin也是。git clone git@github.com:username/username.github.io //git remote -v 显示的是git协议连接github，git push origin也是。总结一下： 1、生成密钥对 2、在github上添加公钥 3、使用 eval $(ssh-agent -s ) ssh-add id_ed25519 向ssh代理注册私钥 4、 ssh -T git@github.com 测试链接 目前推荐使用 ssh-keygen -t ed25519 -C “xxxx@126.com“的 方法生成秘钥对。 两种方法，推荐使用ssh协议和github通讯，也就是使用ed25519加密的秘钥对。使用https协议+token的方法，在git push时网络不稳定，而使用秘钥对方式效率很高，也许这只是自己的感受吧，暂时不知道具体的原理 ssh在github的两个常见使用场景： git 与github通讯，把公钥保存在github上,settings-&gt;ssh,这个settings是用户的github账号级别 把私钥保存在仓库的secret里，用来自动化发布的actions脚本里作为变量来引用，settings-&gt;secrets-&gt;actions，这个settings是仓库级别的。公钥保存在username.github.io的deploy kes。 这两个场景可以只生成一对密钥就可以，也就是说一对密钥应用在两个场景。可以试试生成两队密钥文件，分别用到不同的场景里。","link":"/2021/05/30/git%E4%B8%8Egithub%E9%80%9A%E8%AE%AF%E7%9A%84Https%E5%8D%8F%E8%AE%AE%E5%92%8CSSH%E5%8D%8F%E8%AE%AE/"},{"title":"git操作git仓库命令入门","text":"新建一个目录 branch_demo cd branch_demo git init git status git checkout -b branch-name echo “git branch start” &gt;&gt; readme.md git add . git commit -m “git branch start” git remote add origin https://github.com/usermame.github.io.git or git remote add origin git@github.com:username.github.io.git git push -u origin —-新建分支第一次推送到远程时，需要-u参数指明上游，或者使用–set-upstream,以后再推送就不需要-u参数了 长时间不玩git了,居然忘记了如何与github.com端的仓库通讯，这里做个简单的备忘： git remote -v","link":"/2021/05/28/git%E5%91%BD%E4%BB%A4%E5%85%A5%E9%97%A8/"},{"title":"git对github仓库分支的操作","text":"分支的查询12git branch ----查询当前分支git branch -a ----查询所有分支 新建分支12git branch branch-name ----新建一个名称为branch-name的分支git checkout --orphan branch-name ----新建一个名称为branch-name的无父节点的分支，并自动切换到该分支 分支的删除123在删除分支时，先要确认一下要删除的分支不是当前分支，如果时当前分支的话是不能被删除的，可以使用git checkout branch-name来切换为非当前分支，然后再删除。git branch -d branch-name ----删除本地的分支git push origin --delete branch-name ----删除远程仓库分支 分支重命名1git branch -m old-name new-name 分支的切换1git checkout branch-name","link":"/2021/05/26/git%E5%AF%B9github%E4%BB%93%E5%BA%93%E5%88%86%E6%94%AF%E7%9A%84%E6%93%8D%E4%BD%9C/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2023/02/16/hello-world/"},{"title":"hexo actions","text":"actions-1 123456789101112131415161718192021222324252627282930313233343536373839404142name: Main workflowon: push: branches: - rawjobs: build: runs-on: ubuntu-18.04 steps: - uses: actions/checkout@v2 - name: Use Node.js lts uses: actions/setup-node@v2-beta with: node-version: '12.x' - name: prepare build env env: GH_ACTION_DEPLOY_KEY: ${{ secrets.GH_ACTION_DEPLOY_KEY }} NEXT_VERSION: v8.0.0-rc.2 run: | mkdir -p ~/.ssh/ echo &quot;$GH_ACTION_DEPLOY_KEY&quot; &gt; ~/.ssh/id_rsa chmod 600 ~/.ssh/id_rsa ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts git config --global user.name 'gythialy' git config --global user.email 'gythialy@users.noreply.github.com' npm i -g hexo-cli npm i git clone --branch ${NEXT_VERSION} --depth=10 git@github.com:next-theme/hexo-theme-next.git themes/next git checkout -b ${NEXT_VERSION} git clone git@github.com:next-theme/theme-next-three --depth=1 themes/next/source/lib/three git clone git@github.com:next-theme/theme-next-fancybox3 --depth=1 themes/next/source/lib/fancybox git clone git@github.com:next-theme/theme-next-pace --depth=1 themes/next/source/lib/pace - name: deploy to github env: HEXO_ALGOLIA_INDEXING_KEY: ${{ secrets.HEXO_ALGOLIA_INDEXING_KEY }} run: | hexo generate &amp;&amp; hexo algolia &amp;&amp; hexo deploy atcion-2 12345678910111213141516171819202122232425262728293031323334name: CIon:push:branches:- hexojobs:build:runs-on: ubuntu-lateststeps:- name: Checkout sourceuses: actions/checkout@v1with:ref: hexo- name: Use Node.js ${{ matrix.node_version }}uses: actions/setup-node@v1with:version: ${{ matrix.node_version }}- name: Setup hexoenv:ACTION_DEPLOY_KEY: ${{ secrets.HEXO_DEPLOY_PRI }}run: |mkdir -p ~/.ssh/echo &quot;$ACTION_DEPLOY_KEY&quot; &gt; ~/.ssh/id_rsachmod 600 ~/.ssh/id_rsassh-keyscan github.com &gt;&gt; ~/.ssh/known_hostsgit config --global user.email &quot;lujiahao0708@gmail.com&quot;git config --global user.name &quot;lujiahao0708&quot;npm install hexo-cli -gnpm install- name: Hexo deployrun: |hexo cleanhexo d","link":"/2021/05/28/hexo-actions/"},{"title":"hexo博客项目的备份和重建","text":"hexo博客项目的备份和重建之本地备份 如果需要重建hexo博客项目，只需要保存你的文档目录source、你的博客主题目录themes、scaffolds目录、配置文件_config.yml。 最好把远程仓库重新clone到本地的备份目录，可能里面会有你自定义的目录，比如images保存的各种展示图片(如果使用第三方图床就不必保存)。 开始重建hexo博客项目 hexo init npm install 把前面备份的source、themes目录和_config.yml复制到新建立的hexo项目目录下。 hexo g hexo server localhost:4000在本地查看 正常显示后发布到远程的github仓库: hexo d 如果发布时出现ERROR Deployer not found: git 的错误提示信息，就再把hexo 一键发布包安装一下：npm install hexo-deployer-git –save,然后再执行hexo d即可成功发布到github远程仓库，记得在仓库的根目录下新建CANME文件。","link":"/2021/05/24/hexo%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%A4%87%E4%BB%BD%E5%92%8C%E9%87%8D%E5%BB%BA/"},{"title":"hexo博客项目的备份和重建之远程备份","text":"认识hexo项目的目录结构使用hexo init之后，hexo会在你指定的目录下创建项目所需的目录和文件,如下图所示 12345678910.github ----node_modules----项目依赖的包文件scaffolds ----模版文件soruce ----保存用户文档themes ----主题包目录.gitignore ---- 指定的不纳入git管理的内容_config.landscape.yml----_config.yml ----项目配置文件package.json----package-lock.json 在初始化hexo项目目录之后，基本的博客框架建立，就可以开始使用markdown编辑器书写文档，保存在source_posts目录下。 文档编辑完成后，就可以使用hexo generate 来生成静态的网页文件，所有生成的文件都保存在public目录下。这段英文来自hexo官方文档的描述: All generated files are saved in the public folder. You can copy them to wherever you like。 此时hexo博客项目的目录下又多了public目录和db.json。db.json是以json格式的文件来保存你的博客文档的元数据。 123456789101112.github ----node_modules----项目依赖的包文件public ----hexo generate 生成的所有静态网页文件及资源文件scaffolds ----模版文件soruce ----保存用户文档themes ----主题包目录.gitignore ---- 指定的不纳入git管理的内容_config.landscape.yml----_config.yml ----项目配置文件package.json----package-lock.jsondb.json 在本地使用发布静态网页和备份项目文件的命令第一步、发布文档 123hexo clean hexo ghexo d 第二步、备份项目文件到github仓库的指定分支 1234使用gi命令上传到github单独的仓库或者分支，这个可以作为hexo博客项目的备份方法。git add .git commit-m &quot;push hexo project fiels&quot;git push origin main:hexo 通过git命令把hexo项目保存在github的username.github.io仓库在本地把hexo项目纳入git管理 1234在本地新建一个目录hexo-source，用来保存hexo项目cd hexo-sourcegit init git checkout --orphan source 把博客项目复制到hexo-source目录下 123456把hexo博客项目根目录下的所有内容复制到hexo-source目录在.gitignore文件中仅保留下面三项内容（从hexo init 、hexo generate、hexo deploy这三个步骤来看，只有这三项是通过项目框架动态生成的，可以删除).从自己的实践来看，.gitignore文件是为git命令而设定的。比如，如果按照该文件默认的设置，是包含node_moudles项目的，也就是在git add &amp; git commit -m &quot;xx&quot; &amp;git push 时，不会上传node_moudles的，好处是节省带宽，但是如果上传node_moudles的话，再次git clone博客项目时，不必再次运行 npm install(也许你已经忘记了)，就可以直接开始写markdown文档，然后hexo g -d 就可以完成所有流程。 public/ .deploy*/ db.json 把博客项目推送到github仓库 12345git add .git commit -m &quot;add hexo blog project source to githut repo branch &quot;git remote add origin https://github.com/lsgxs2019/lsgxs2019.github.iogit push origin source:source ---- 推送hexo项目到username.github.io的source分支设定username.github.io仓库的默认分支为source（我这里的名称为source） 在本地恢复博客项目 1如果项目文件出错的话，就可以直接在本地使用git clone 来下载username.github.io仓库到本地，实现快速恢复，提高工作效率。 具体执行过程见下面的图片","link":"/2021/05/24/hexo%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%A4%87%E4%BB%BD%E5%92%8C%E9%87%8D%E5%BB%BA%E4%B9%8B%E8%BF%9C%E7%A8%8B%E5%A4%87%E4%BB%BD/"},{"title":"如何成为数据工程师","text":"如何成为数据工程师(How To Become a Data Engineer)文章链接：How To Become a Data Engineer (khashtamov.com)","link":"/2021/05/16/how-to-become-data-engineer/"},{"title":"html-css-javascript","text":"html 、css、javascript的相互关系 html是用来结构化web文档的标记语言，比如定义一个段落、文章头部、数据表、嵌入网页的图片或者视频。 CSS是一套语言规则，用来美化HTML文档内容。比如设置背景色、字体、把网页内容布局为多列等。 可以阅读MDN中关于css是如何工作的：How CSS works。 javascript是一种动态程序设计语言，可为网站提供动态交互特性。比如用来动态更新网页内容，控制多媒体、动态图片、美化网页上的任何内容。 javascript常见的用法是通过Document Object Model(DOM) API来动态修改html和css，以达到更新用户界面的效果。Web文档中的代码通常是按照在网页中出现的顺序加载和运行，如果javascript代码在要修改的html、css内容出现之前加载和运行，就会出现错误。可以参考MDN中关于脚本加载的策略（ Script loading strategies ) 下面是一个包含css、javascipt的完整html文件结构： 1234567891011121314151617&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot; /&gt; &lt;title&gt;Media Queries: a simple mobile first design, step 1&lt;/title&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt; &lt;link href=&quot;styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt; &lt;/link&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;Player 1: Chris&lt;/p&gt; &lt;script src=&quot;main.js&quot; defer&gt; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 在html文件中引用css和javascript有两种方式: 123456789内部引用 (1)引用Css。直接在html的head区域通过&lt;style&gt; css rules &lt;/style&gt;标签引用css (2)引用Javascript。在html的&lt;head&gt;或者&lt;body&gt;区域通过&lt;script&gt; javascript code&lt;/script&gt;引用。也就是说，把css和javascript的内容直接写在html文件中。适合小规模的html、css、JavaScript代码。 外部引用（1）引用CSS。 把Css代码放在一个单独的.css文件中，在html文件的&lt;head&gt;区域通过&lt;link&gt;标签引用css文件：&lt;link href=&quot;xxx.css&quot; rel=&quot;stylesheet&quot;&gt;（2）在&lt;body&gt;区域的适当位置通过&lt;script&gt;标签引用javascript文件： &lt;script src=&quot;filename.js&quot; defer&gt;&lt;/script&gt;（3)css和javascript代码是放在单独的.css和.js文件中，可以实现代码的复用性，不用让大块的css、javascript代码堆积在html文件中，提高html文件的可读性提高。 总结，对于引用javascript而言，无论是内部引用还是外部引用，都是使用&lt;script&gt;..&lt;/script&gt;标签。对于Css而言，内部应用使用&lt;style&gt;..&lt;/style&gt;标签，而外部引用则要使用&lt;link href=&quot;filename.css&quot; rel=&quot;stylesheet&quot;&gt;。 JavaScript basics by MDN contributors is licensed under CC-BY-SA 2.5 下面是来自MDN官方文档的另外一个例子： 1234567891011121314151617181920212223242526272829&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;My test page&lt;/title&gt; &lt;link href=&quot;http://fonts.googleapis.com/css?family=Open+Sans&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt; &lt;link href=&quot;styles/style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Mozilla is cool&lt;/h1&gt; &lt;img src=&quot;images/firefox-icon.png&quot; alt=&quot;The Firefox logo: a flaming fox surrounding the Earth.&quot;&gt; &lt;p&gt;At Mozilla, we’re a global community of&lt;/p&gt; &lt;ul&gt; &lt;!-- changed to list in the tutorial --&gt; &lt;li&gt;technologists&lt;/li&gt; &lt;li&gt;thinkers&lt;/li&gt; &lt;li&gt;builders&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;working together to keep the Internet alive and accessible, so people worldwide can be informed contributors and creators of the Web. We believe this act of human collaboration across an open platform is essential to individual growth and our collective future.&lt;/p&gt; &lt;p&gt;Read the &lt;a href=&quot;https://www.mozilla.org/en-US/about/manifesto/&quot;&gt;Mozilla Manifesto&lt;/a&gt; to learn even more about the values and principles that guide the pursuit of our mission.&lt;/p&gt; &lt;button&gt;Change user&lt;/button&gt; &lt;script src=&quot;scripts/main.js&quot;&gt;&lt;/script&gt; &lt;/body&gt;&lt;/html&gt; 所有涉及到的文件资源目录结构如下：","link":"/2022/08/25/html-css-javascript/"},{"title":"html-tips","text":"HTML TipsIn this article, I will share with you some very useful HTML tips. Enjoy! Post will be updated regularly with new tips! But first, what is HTML?Hypertext Markup Language (HTML) is the standard markup language for documents designed to be displayed in a web browser. It can be assisted by technologies such as Cascading Style Sheets (CSS) and scripting languages such as JavaScript. Let’s start! 1. The loading=lazy attributePerformance tip. You can use the loading=lazy attribute to defer the loading of the image until the user scrolls to them. 1&lt;img src='image.jpg' loading='lazy' alt='Alternative Text'&gt; 2. Email, call, and SMS links:123456789101112&lt;a href=&quot;mailto:{email}?subject={subject}&amp;body={content}&quot;&gt; Send us an email&lt;/a&gt;&lt;a href=&quot;tel:{phone}&quot;&gt; Call us&lt;/a&gt;&lt;a href=&quot;sms:{phone}?body={content}&quot;&gt; Send us a message&lt;/a&gt; 3. Ordered lists start attribute.Use the start attribute to change the starting point for your ordered lists. 4. The meter elementYou can use the &lt;meter&gt; element to display quantities. No JavaScript/CSS needed. 5. HTML Native Search 6. Fieldset ElementYou can use the &lt;fieldset&gt; element to group several controls as well as labels (&lt;label&gt;) within a web form. 7. Window.openerPages opened with target=&quot;_blank&quot; allow the new page to access the original’s window.opener. This can have security and performance implications. Include rel=&quot;noopener&quot; or rel=&quot;noreferrer&quot; to prevent this. 1234&lt;a href=&quot;https://markodenic.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt; Marko's website&lt;/a&gt; 8. Base ElementIf you want to open all links in the document in a new tab, you can use &lt;base&gt; element: 9. Favicon cache bustingTo refresh your website’s favicon you can force browsers to download a new version by adding ?v=2 to the filename. This is especially helpful in production to make sure the users get the new version. 12&lt;link rel=&quot;icon&quot; href=&quot;/favicon.ico?v=2&quot; /&gt; 10. The spellcheck attributeUse the spellcheck attribute to define whether the element may be checked for spelling errors. from:https://markodenic.com/html-tips/","link":"/2021/06/24/html-tips/"},{"title":"html学习笔记之html文件结构","text":"HTML语言简介html语言是网页内容的基础，以标签式的结构和内容书写Html文件，由浏览器解释这些格式标签后，将html文件的内容渲染后在浏览器呈现。现在的网页技术涉及到html、css、javascript。html负责html文件的格式和内容，css渲染网页的样式，javascript用来在html中引入编程逻辑，生成更加丰富的交互式网页。 最简单的html文件结构123456789101112131415161718192021222324&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot; &gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;hello html&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt; 这是html文件最基础的结构。最外层的是`&lt;html&gt;`标签对，下面是`&lt;head&gt;`对和'&lt;p&gt;'标签对，是'&lt;html&gt;'的子标签，这两个标签是并列关系。 通过这样的结构，形成了树状的结构，这棵树可大可小。 同时，每个标签包含多种属性值，以键值对的形式来书写。那是不是有点像C语言的结构体呢，定义一个结构体，然后以键值对的形式来描述各种属性 &lt;/p&gt; &lt;p&gt; 虽然这些书写内容以一定的格式呈现，这是为了可读性而规定的。 &lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 在浏览器中打开html文件​ 使用最简单的windows记事本来编辑上面的内容，保存为html文件，使用浏览器打开后查看效果，感受一下结构、内容的呈现。","link":"/2021/06/20/html%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bhtml%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/"},{"title":"html小结构","text":"html文件小结构手写html的时候，忽然忘记了，就复制一下吧 12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en-us&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt; &lt;title&gt;Layout Task&lt;/title&gt; &lt;link href=&quot;styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt; &lt;/head&gt;&lt;body&gt;&lt;/body 或者更懒一点，把css部分使用..放在head部分： 12345678910111213141516&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en-us&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt; &lt;title&gt;Layout Task&lt;/title&gt; /* &lt;link href=&quot;styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt; */ &lt;style&gt; /* your css code */ &lt;/style&gt; &lt;/head&gt;&lt;body&gt;&lt;/body&gt;","link":"/2022/08/23/html%E5%B0%8F%E7%BB%93%E6%9E%84/"},{"title":"html文件中引用资源的路径","text":"Dealing with files by MDN contributors is licensed under CC-BY-SA 2.5 html文件中引用图片等文件的路径File pathsTo make files talk to one another, you have to provide a file path between them — basically a route, so one file knows where another one is. To demonstrate this, we will insert a little bit of HTML into our index.html file, and make it display the image you chose in the article “What will your website look like?” Alternatively, you can choose an existing image at your disposal, on your computer or from the Web, and use it in the following steps: Copy the image you chose earlier into your images folder. Open up your 1index.html file, and insert the following code into the file exactly as shown. Don’t worry about what it all means for now — we’ll look at the structures in more detail later in the series. 12345678910&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en-US&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;My test page&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;img src=&quot;&quot; alt=&quot;My test image&quot;&gt; &lt;/body&gt;&lt;/html&gt; Copy to Clipboard The line &lt;img src=&quot;&quot; alt=&quot;My test image&quot;&gt; is the HTML code that inserts an image into the page. We need to tell the HTML where the image is. The image is inside the images directory, which is in the same directory as index.html. To walk down the file structure from index.html to our image, the file path we’d need is images/your-image-filename. For example, our image is called firefox-icon.png, so the file path is images/firefox-icon.png. Insert the file path into your HTML code between the double quote marks of the src=&quot;&quot; code. Save your HTML file, then load it in your web browser (double-click the file). You should see your new webpage displaying your image! Some general rules for file paths: To link to a target file in the same directory as the invoking HTML file, just use the filename, e.g. my-image.jpg. 同目录直接书写文件名称 To reference a file in a subdirectory, write the directory name in front of the path, plus a forward slash, e.g. subdirectory/my-image.jpg. 资源在该html文件的子目录，书写子目录及文件路径 To link to a target file in the directory above the invoking HTML file, write two dots. So for example, if index.html was inside a subfolder of test-site and my-image.jpg was inside test-site, you could reference my-image.jpg from index.html using ../my-image.jpg. 图片等资源在html文件的上一级目录，使用../filename.jpg You can combine these as much as you like, for example ../subdirectory/another-subdirectory/my-image.jpg. 可以使用../组合任意的子目录，实际上就是你在cmd窗口下使用cd命令切换目录的路线图。比如： You can combine multiple instances of these features into complex URLs, if needed, for example: ../../../complex/path/to/my/file.html For now, this is about all you need to know. Note: The Windows file system tends to use backslashes, not forward slashes, e.g. C:\\Windows. This doesn’t matter in HTML — even if you are developing your website on Windows, you should still use forward slashes in your code. Absolute versus relative URLs by MDN contributors is licensed under CC-BY-SA 2.5Two terms you’ll come across on the Web are absolute URL and relative URL: absolute URL: Points to a location defined by its absolute location on the web, including protocol and domain name. For example, if an index.html page is uploaded to a directory called projects that sits inside the root of a web server, and the website’s domain is https://www.example.com, the page would be available at https://www.example.com/projects/index.html (or even just https://www.example.com/projects/, as most web servers just look for a landing page such as index.html to load if it isn’t specified in the URL.) An absolute URL will always point to the same location, no matter where it’s used. relative URL: Points to a location that is relative to the file you are linking from, more like what we looked at in the previous section. For example, if we wanted to link from our example file at https://www.example.com/projects/index.html to a PDF file in the same directory, the URL would just be the filename — project-brief.pdf — no extra information needed. If the PDF was available in a subdirectory inside projects called pdfs, the relative link would be pdfs/project-brief.pdf (the equivalent absolute URL would be https://www.example.com/projects/pdfs/project-brief.pdf.) A relative URL will point to different places depending on the actual location of the file you refer from — for example if we moved our index.html file out of the projects directory and into the root of the website (the top level, not in any directories), the pdfs/project-brief.pdf relative URL link inside it would now point to a file located at https://www.example.com/pdfs/project-brief.pdf, not a file located at https://www.example.com/projects/pdfs/project-brief.pdf. Of course, the location of the project-brief.pdf file and pdfs folder won’t suddenly change because you moved the index.html file — this would make your link point to the wrong place, so it wouldn’t work if clicked on. You need to be careful!","link":"/2022/07/22/html%E6%96%87%E4%BB%B6%E4%B8%AD%E5%BC%95%E7%94%A8%E8%B5%84%E6%BA%90%E7%9A%84%E8%B7%AF%E5%BE%84/"},{"title":"kuandai-404","text":"Wifi可用但是电脑不能上网该文章来自网络，源文章链接如下： wifi可用，但台式电脑连不上网怎么办，用命令排查解决 台式电脑一般通过网线连接网络，问题可能出现在路由器到台式电脑之间，我们可以通过ping这条Windows命令进行准确排查，把问题缩小到具体环节，再进行针对修复，一般按顺序可分以下四种环节。 一、电脑网卡有问题 二、电脑连接不了路由器 三、电脑可以连接路由器，却连不上外网 四、电脑可以连接外网，但网页打不开 在开始排查前，我们要用到以下几样东西： 1、命令窗口：Windows自带，可通过按Win+R组合键，输入CMD调出。 2、路由器IP地址：在路由器背面信息栏可以找到，一般是192.168.0.1或者192.168.1.1，这里以后者为例。 3、本机地址：127.0.0.1 4、必要时用到windows自带的Windows PowerShell(管理员）工具 5、操作系统：windows 11 6、路由器： 接下来开始按顺序排查。 一、电脑网卡有问题 排查方法：Win+R组合键，输入CMD，弹出命令窗口，输入ping 127.0.0.1 回车，反馈信息有如下两种情况。 1、回馈正常（如下图），可以直接跳往第二步。 2、反馈请求超时（如下图） 说明电脑本身存在问题，可以尝试通过重装网卡驱动程序或重装系统解决，还是不行的话，那是硬件层面的问题了，只能拿给专业维修人员修复。 二、电脑连接不了路由器 排查方法：在如上的命令窗口输入 ping 192.168.1.1 回车，反馈信息有如下四种。 1、正常反馈（如下图），可以跳往第三步。 2、一般故障 这种是网线问题，可以通过插拔网线，或者更换网线来解决。 3、常见故障或者来自XXXX的回复，无法访问目标主机 这里的XXXX指的是路由器的地址，此两种情况大多数是网卡偶尔的故障，可以通过禁用网卡，再启用网卡进行恢复，或者直接重启电脑。 4、请求超时 此种情况大多是IP地址配置问题，有以下2种解决方案。 （1）在命令窗口输入 netsh winsock reset回车，然后重启电脑解决，如果操作不成功，一般需要管理员权限，请右键左下角Win图标，使用windows终端（管理员）或者Windows PowerShell（管理员）进行操作 （2）静态IP地址设置，右键此电脑-属性-网络和Internet-以太网-IP分配-编辑-手动，IPv4开。 地址分配如下： IP地址：192.168.1.X （X代表2-254之间整数，如果路由器IP是192.168.0.1，那要把X前的1改成0） 子网掩码：255.255.255.0 （无特殊情况，不需要更改） 网关：192.168.1.1 （如果路由器IP是192.168.0.1，那就改成这个地址） 首选DNS：192.168.1.1 （具体情况如上） 三、电脑可以连接路由器，却连不上外网 1、反馈正常（如下图），可以跳往第四步 2、反馈找不到主机，一般有以下通过下面2种方法解决。 （1）DNS服务器分配地址需要设置，这里以带路由功能的GPON天翼网关(4口单频)为例 操作步骤：浏览器网址输入192.168.1.1，访问管理界面，高级设置-网关信息-WAN IP-复制 右键此电脑-属性-网络和Internet-以太网-DNS服务器分配-编辑DNS设置，手动-IPv4开，把复制到的IP地址粘贴进首先DNS里，顺便把192.168.1.1填到备用DNS里。 2、路由器设置问题，老式路由器功能不正常，可以重启或通过IP地址和MAC地址绑定，具体以TP Link 路由器TL-WR886N为例。 操作步骤：浏览器输入tplogin.cn-应用管理-IP与MAC绑定-添加到绑定设置,找到自己电脑的MAC和IP地址，点击最右侧的“+”字图标，进行添加完成。 MAC地址获取方法：Win+R组合键-CMD-输入ipconfig /all 回车（/前要空格），显示较多往下拉，在以太网适配器 以太网里，物理地址就是电脑的MAC地址。 四、电脑可以连接外网，但网页打不开 1、端口映射问题，可以在命令窗口输入netsh winsock reset回车，进行网络文件修复解决 2、网卡驱动问题，通过第三方设备下载网卡驱动，在电脑上重新安装解决。 3、虚拟网卡问题，喜欢玩游戏的朋友大多会装些网络加速软件，这些软件基本都会自带修复功能，可以通过LSP修复或者卸载虚拟网卡解决。 该文章来自网络，源文章链接如下： wifi可用，但台式电脑连不上网怎么办，用命令排查解决","link":"/2022/09/28/kuandai-404/"},{"title":"markdown-links","text":"markdown文件中超链接和图片链接的书写格式 普通的文本超链接 12[hyperlinks](https://www.domain.com)hyperlinks: &lt;https://www.domain.com&gt; 图片的引用格式 1![picuture show](/images/xxx.png)","link":"/2021/06/24/markdown-links/"},{"title":"publish your Website via github","text":"Publishing via GitHubNow let’s examine how to easily publish your site via GitHub Pages. First of all, sign up for GitHub and verify your email address. Next, you need to create a repository to store files. On this page, in the Repository name box, enter username.github.io, where username is your username. For example, our friend Bob Smith would enter bobsmith.github.io. Check the “Initialize this repository with a README” box. Then click Create repository. Drag and drop the content of your website folder into your repository. Then click Commit changes Note: Make sure your folder has an index.html file. Navigate your browser to username .github.io to see your website online. For example, for the username chrisdavidmills , go to chrisdavidmills.github.io Note: It may take a few minutes for your website to go live. If your website does not display immediately, wait a few minutes. Try again. To learn more, see GitHub Pages Help.","link":"/2022/07/23/publish-your-Website-via-github/"},{"title":"智能批量更改证件照片背景颜色","text":"removebg 在更换证照背景颜色时，专业的技法是通过photoshop等图像处理软件手动处理，需要专业的图形处理基础知识和众多的经验，否则会事倍功半。 这里推荐一个微信公众号免费小程序：免冠照助手。另外一个是全自动的智能图片背景处理程序：removebg。这里主要介绍removebg。 一个智能的全自动更换背景软件：removebg ，网站地址：https://www.remove.bg 该软件可以通过在线上传证照处理，也可以通过注册账号之后下载windows客户端，在本地处理。 下面是自己使用removebg处理证件照片的过程，做个笔记备忘。 先在网站注册账户，然后使用API Key登陆，如下图： 下面是更换证件照片背景颜色的简单过程记录 有个技巧，软件窗口顶部有一句提示语：Drag images into the area below （注意是images，复数形式意味着可以一次处理多张图片，只需要把多张照片拖放到这里即可,一次处理多个照片，瞬间完成背景颜色更换) How to install remove.bg for Windows/Mac/Linux?Remove.bg for Windows/Mac/Linux brings bulk image background removal right to your desktop. To install it, follow these steps: Windows Installation Instructions Download and run remove.bg for Windows. After a few seconds remove.bg for Windows will be installed and automatically started. The installation also adds shortcuts to your Desktop and Start Menu. To set up your API key and use remove.bg for Windows, follow the instructions in the application. Mac Installation Instructions Download and run remove.bg for Mac. In the Installation window, drag the remove.bg icon to your Applications folder. To complete the setup, follow the instructions shown in the installation window. To set up your API key and use remove.bg for Mac, follow the instructions in the application. Install via Hombrew Install Hombrew and run brew install --cask removebg in your terminal To set up your API key and use remove.bg for Mac, follow the instructions in the application. Linux Installation Instructions Download remove.bg for Linux. Depending on your operating system you might be able to install it by double-clicking the file. You can also install it on the command-line with the command dpkg -i &lt;filename&gt;.deb After the installation has finished you can find the program in your applications list, or run it from the command-line with removebg-desktop To set up your API key and use remove.bg for Linux, follow the instructions in the application. If you have trouble installing remove.bg for Windows/Mac/Linux feel free to reach out via email. We’re happy to help!","link":"/2021/12/01/remve-bg/"},{"title":"rps设置","text":"如何设置RPS 新建一个”上市一年以上”的自定义板块，并使用选股公式将上市一年以上的股票选入该板块通达信软件，Control+F，技术指标公式—其他类型 1BARSCOUNT(C)&gt;N; N为参数，一般设为250 新建一个计算股票涨跌幅的技术指标公式，命名为EXTRS 通达信软件，Control+F，技术指标公式—其他类型 点击上图中的新建，进入下图: 123EXTRS:(C-REF(C,N))/REF(C,N);N缺省值为250。 建立扩展数据，对股票涨幅进行统计 通达信软件输入：.902，进入扩展数据管理器。 选中第1条扩展数据，如下图 点击上图中的修改，在扩展数据属性里首先设置数据1如下： 技术指标公式选择新建的“EXTRS”指标 计算参数为120（对应半年期的RPS） 计算时段为本地所有数据 计算品种为“自定义板块”下面的“上市一年以上”这个板块 勾选“精确复权”及“生成横向排名数据” 排名方法为“0-1000归一化顺序” 用同样的方法设置250、50三个时间的扩展数据 第四步，再新建一个技术指标公式：股价相对强度RPS 通达信软件，Control+F，技术指标公式—其他类型—新建 股价相对强度RPS, 出两条彩线的代码如下： 12345678910111213X:=EXTDATA_USER(1,0);{120天的}RPS120:X/10,LINETHICK2,COLORGREEN;IF(RPS120&gt;=M,RPS120,DRAWNULL),LINETHICK2,COLORRED;;Y:=EXTDATA_USER(2,0);{250天的}RPS250:Y/10,LINETHICK2,COLORWHITE;IF(RPS250&gt;=M,RPS250,DRAWNULL),LINETHICK2,COLORRED; M是参数，可以根据自己的偏好设为85-90，我个人偏好90。意思就是RPS大于90时，显示为红线。 第五步，确保下载完整的历史数据。 下载完整的历史数据！这个只需要操作一次，请自行修改下载的开始时间 需要每天存盘下载日线数据，并全部刷新两条扩展数据。这个操作每天收盘后，都需要进行一次，才能显示最新的RPS曲线。","link":"/2022/06/02/rps%E8%AE%BE%E7%BD%AE/"},{"title":"rps选股方法设置","text":"rps选股思路 对指定板块的股票，使用EXTRS技术指标，利用扩展数据的不同时间周期进行涨幅计算排序，以这些涨幅排序数据为基础输出为rps曲线，或者进行条件选股，找出强势的个股或者板块。 rps的全称：Relative Price Strength Rating 12345678910111213141516- 板块 - 上市一年以上 - 基金持股百分之三或者北向资金3000万 - 板块指数- 技术指标 - EXTRS 用来计算指定时间周期的涨幅- 扩展数据 - 120 - 250 - 50- rps曲线 - 个股的rps曲线 - 板块指数的rps曲线- 使用rps扩展数据计算结果进行条件选股- 第二阶段 - 在合适的买点买入并持有第二阶段的主升浪 rps在个股方面的应用 筛选出上市一年以上股票。在A股市场，新股一盘都是一字涨停板往上跳，没有实际的统计意义。可以通过一个条件公式来过滤出上市一年以上的股票。 新建【上市一年以上】板块。选择并打开通达信的【工具/自定义板块设置】菜单项，点击【新建板块】，输入[上市一年以上]确定即可。 新建过滤上市一年以上股票的公式。选择并打开通达信的【功能/公式系统/公式管理器】菜单项，或者使用Control+F直接打开公式管理器。选择条件选股公式—其他类型，点击新建。公式内容如下：12BARSCOUNT(C)&gt;N; N为参数，一般设为250 选股到上市一年以上板块打开通达信的【功能/选股器/条件选股】，或者使用Control+T打开条件选股，条件选股公式的下拉菜单中，选中：上市一年以上，选股范围为：沪深A股，然后点：加入条件。 1这个“上市一年以上“板块中的股票，需要手动更新，建议一个月更新一次即可 新建一个计算股票涨跌幅的技术指标 打开通达信[功能/公式系统/公式管理器]，或则使用Control+F直接打开公式管理，技术指标公式—其他类型，点击新建按钮，建立一个小公式，命名为EXTRS。公式内容如下： 12EXTRS:(C-REF(C,N))/REF(C,N);N缺省值为250 其实这个涨跌幅的数据是rps的基础数据，所有的计算都是依据这个涨跌幅进行的。比如后面的各个时间周期的rps数值扩展和个股的rps数值。 建立扩展数据，对股票涨跌幅进行排序 打开通达信软件的【功能/公式系统/扩展数据管理器】，或者直接输入【.902】打开扩展数据管理器。具体操作方法如下： 123456789101112131415161718- 选中第1条扩展数据 - 点击上图中的修改，在扩展数据属性里首先设置数据1如下： - 技术指标公式选择新建的“EXTRS”指标 - 计算参数为120（对应半年期的RPS） - 计算时段为本地所有数据 - 计算品种为“自定义板块”下面的“上市一年以上”这个板块 - 勾选“精确复权”及“生成横向排名数据” - 排名方法为“0-1000归一化顺序”- 选中第2条扩展数据 - 点击上图中的修改，在扩展数据属性里首先设置数据1如下： - 技术指标公式选择新建的“EXTRS”指标 - 计算参数为250（对应一年期的RPS） - 计算时段为本地所有数据 - 计算品种为“自定义板块”下面的“上市一年以上”这个板块 - 勾选“精确复权”及“生成横向排名数据” - 排名方法为“0-1000归一化顺序”- 可以再分别设置50、10、20、60周期的扩展数据，操作方法同上，只是时间周期不同。 建立rps幅图显示曲线 新建一个股价相对强度RPS技术指标。通达信软件，Control+F，技术指标公式—其他类型—新建。价相对强度RPS, 出两条彩线的代码如下： 1234567X:=EXTDATA_USER(1,0);{120天的}RPS120:X/10,LINETHICK2,COLORGREEN;IF(RPS120&gt;=M,RPS120,DRAWNULL),LINETHICK2,COLORRED;;Y:=EXTDATA_USER(2,0);{250天的}RPS250:Y/10,LINETHICK2,COLORWHITE;IF(RPS250&gt;=M,RPS250,DRAWNULL),LINETHICK2,COLORRED; M是参数，可以根据自己的偏好设为85-90，我个人偏好90。意思就是RPS大于90时，显示为红线。 下载财务数据 记得每天收盘后下载完整的财务数据 使用rps值进行条件选股 选出rps值大于90以上的股票 rps在板块方面的应用 新建一个【板块指数rps】的自定义板块，并导入各类板块指数。 选择通达信界面最下面的[板块指数]标签，在窗口界面中弹出鼠标右键，选择[批量/是]，选择【全选中】、【加入到板块】按钮，在打开的对话框中选择新建的板块指数rps目录即可把这些板块指数加入到新建的自定义【板块指数rps】中。 新建一个技术指标的公式。（如果前期已经设置好了个股的RPS曲线，此步骤可以不用做了！） 建立一个小公式，命名为“EXTRS”，用来计算股票涨跌幅 1234EXTRS:(C-REF(C,N))/REF(C,N);N缺省值为250 建立扩展数据 通达信软件输入：.902，进入扩展数据管理器。 选中第6条扩展数据，如下图： 鼠标左键点击“数据6”，然后点击“修改”。如下图： 技术指标公式选择新建的“EXTRS”指标 计算参数为10（对应10日的RPS） 计算时段为本地所有数据 计算品种为“自定义板块”下面的“板块指数RPS”这个板块 勾选“精确复权”及“生成横向排名数据” 排名方法为“0-1000归一化顺序” 最后点击确定。 再重复上述步骤， 在扩展数据属性里首先设置数据7，计算参数为20（对应20日的RPS）。 最后点击确定 再重复上述步骤， 在扩展数据属性里首先设置数据8，计算参数为60（对应60日的RPS）。 最后点击确定。 再新建一个技术指标公式：RPS板块。RPS板块曲线，出3条彩线的代码如下： 12345678910111213141516171819202122232425U1:=EXTDATA_USER(6,0);{10天的}RPS10:U1/10,LINETHICK2,COLORLICYAN;IF(RPS10&gt;=M,RPS10,DRAWNULL),LINETHICK2,COLORRED;W1:=EXTDATA_USER(7,0);{20天的}RPS20:W1/10,LINETHICK2,COLORBROWN;IF(RPS20&gt;=M,RPS20,DRAWNULL),LINETHICK2,COLORRED;X1:=EXTDATA_USER(8,0);{60天的}RPS60:X1/10,LINETHICK2,COLORYELLOW;IF(RPS60&gt;=M,RPS60,DRAWNULL),LINETHICK2,COLORRED;M是参数，可以根据自己的偏好设为85-90，我个人偏好90。意思就是RPS大于90时，显示为红线。 第五步，确保下载完整的历史数据 切记1：下载完整的历史数据！这个只需要操作一次。 通达信软件的菜单—系统—盘后数据下载：请自行修改下载的开始时间: 切记2：需要每天存盘下载日线数据，并全部刷新扩展数据。这个操作每天收盘后，都需要进行一次，才能显示最新的RPS曲线 最后在板块指数的K线界面输入：RPS板块。就出现三条RPS曲线了","link":"/2021/08/13/rps%E9%80%89%E8%82%A1%E6%96%B9%E6%B3%95%E8%AE%BE%E7%BD%AE/"},{"title":"running local http server","text":"How do you set up a local testing server by MDN contributors is licensed under CC-BY-SA 2.5 This article explains how to set up a simple local testing server on your machine, and the basics of how to use it. Prerequisites: You need to first know how the Internet works, and what a Web server is. Objective: You will learn how to set up a local testing server. Local files vs. remote filesThroughout most of the learning area, we tell you to just open your examples directly in a browser — this can be done by double clicking the HTML file, dragging and dropping it into the browser window, or choosing File &gt; Open… and navigating to the HTML file. There are many ways to achieve this. If the web address path starts with file:// followed by the path to the file on your local hard drive, a local file is being used. In contrast, if you view one of our examples hosted on GitHub (or an example on some other remote server), the web address will start with http:// or https://, to show that the file has been received via HTTP. The problem with testing local filesSome examples won’t run if you open them as local files. This can be due to a variety of reasons, the most likely being: They feature asynchronous requests. Some browsers (including Chrome) will not run async requests (see Fetching data from the server) if you just run the example from a local file. This is because of security restrictions (for more on web security, read Website security). They feature a server-side language. Server-side languages (such as PHP or Python) require a special server to interpret the code and deliver the results. They include other files. Browsers commonly treat requests to load resources using the file:// schema as cross-origin requests. So if you load a local file that includes other local files, this may trigger a CORS error. Running a simple local HTTP serverTo get around the problem of async requests, we need to test such examples by running them through a local web server. One of the easiest ways to do this for our purposes is to use Python’s http.server module. Note: Older versions of Python (up to version 2.7) provided a similar module named SimpleHTTPServer. If you are using Python 2.x, you can follow this guide by replacing all uses of http.server with SimpleHTTPServer. However, we recommend you use the latest version of Python. To do this: Install Python. If you are using Linux or macOS, it should be available on your system already. If you are a Windows user, you can get an installer from the Python homepage and follow the instructions to install it: Go to python.org Under the Download section, click the link for Python “3.xxx”. At the bottom of the page, click the Windows Installer link to download the installer file. When it has downloaded, run it. On the first installer page, make sure you check the “Add Python 3.xxx to PATH” checkbox. Click Install, then click Close when the installation has finished. Open your command prompt (Windows) / terminal (macOS/ Linux). To check if Python is installed, enter the following command: 12345python -V# If the above fails, try:python3 -V# Or, if the &quot;py&quot; command is available, try:py -V Copy to Clipboard This should return a version number. If this is OK, navigate to the directory that your example is inside, using the 1cd command. 1234# include the directory name to enter it, for examplecd Desktop# use two dots to jump up one directory level if you need tocd .. Copy to Clipboard Enter the command to start up the server in that directory: 12345# If Python version returned above is 3.X# On Windows, try &quot;python -m http.server&quot; or &quot;py -3 -m http.server&quot;python3 -m http.server# If Python version returned above is 2.Xpython -m SimpleHTTPServer Copy to Clipboard By default, this will run the contents of the directory on a local web server, on port 8000. You can go to this server by going to the URL localhost:8000 in your web browser. Here you’ll see the contents of the directory listed — click the HTML file you want to run. Note: If you already have something running on port 8000, you can choose another port by running the server command followed by an alternative port number, e.g. python3 -m http.server 7800 (Python 3.x) or python -m SimpleHTTPServer 7800 (Python 2.x). You can then access your content at localhost:7800. Running server-side languages locallyPython’s http.server (or SimpleHTTPServer for Python 2) module is useful, but it is merely a static file server; it doesn’t know how to run code written in languages such as Python, PHP or JavaScript. To handle them, you’ll need something more — exactly what you’ll need depends on the server-side language you are trying to run. Here are a few examples: To run Python server-side code, you’ll need to use a Python web framework. There are many popular Python web frameworks, such as Django (a guide is available), Flask, and Pyramid. To run Node.js (JavaScript) server-side code, you’ll need to use raw node or a framework built on top of it. Express is a good choice — see Express Web Framework (Node.js/JavaScript). To run PHP server-side code, launch PHP’s built-in development server : 12$ cd path/to/your/php/code$ php -S localhost:8000","link":"/2022/07/24/running-local-http-server/"},{"title":"science and technology week","text":"Science and Technology week [来自阮一峰的个人网站](阮一峰的个人网站 - Ruan YiFeng’s Personal Website) GitJournal ​ 一个手机的笔记 App，支持用 Markdown 做笔记，推送到远程 Git 仓库。它的安卓 App 是免费的，iOS App 是收费的 About this book - Learn Haskell by building a blog generator (lhbg-book.link) 可以将 Excel 表格文件导入 SQLite，使用 SQL 进行查询 GitHub - x2bool/xlite: SQLite extension for querying Excel (.xlsx, .xls, .ods) files as virtual tables 使用人工智能解释代码 ​ 作者将代码提交给人工智能模型 GPT-3，让模型说出这段代码是什么意思 Top 5 Product and Management skills: SQL, Excel, Clear Communication, Story, Prioritization - Craig Kerstiens A day in the life of a Chinese robotaxi driver | MIT Technology Review","link":"/2022/08/19/science-and-technology-week/"},{"title":"styling a biography page using css","text":"Attributions and copyright licensing by Mozilla Contributors is licensed under CC-BY-SA 2.5 Styling a biography page - Learn web development | MDN (mozilla.org With the things you have learned in the last few lessons you should find that you can format simple text documents using CSS to add your own style to them. This assessment gives you a chance to do that. Prerequisites: Before attempting this assessment you should have already worked through all the articles in this module, and also have an understanding of HTML basics (study Introduction to HTML). Objective: To have a play with some CSS and test your new-found knowledge. Starting pointYou can work in the live editor below, or you can download the starting point file to work with in your own editor. This is a single page containing both the HTML and the starting point CSS (in the head of the document). If you prefer you could move this CSS to a separate file and link to it when you create the example on your local computer. Alternatively use an online tool such as CodePen, jsFiddle, or Glitch to work on the tasks. Note: If you get stuck, then ask us for help — see the Assessment or further help section at the bottom of this page. Project briefThe following live example shows a biography, which has been styled using CSS. The CSS properties that are used are as follows — each one links to its property page on MDN, which will give you more examples of its use. font-family color border-bottom font-weight font-size font-style text-decoration In the interactive editor you will find some CSS already in place. This selects parts of the document using element selectors, classes, and pseudo-classes. Make the following changes to this CSS: Make the level one heading pink, using the CSS color keyword hotpink. Give the heading a 10px dotted border-bottom which uses the CSS color keyword purple. Make the level 2 heading italic. Give the ul used for the contact details a background-color of #eeeeee, and a 5px solid purple border. Use some padding to push the content away from the border. Make the links green on hover. Hints and tips Use the W3C CSS Validator to catch unintended mistakes in your CSS — mistakes you might have otherwise missed — so that you can fix them. Afterwards try looking up some properties not mentioned on this page in the MDN CSS reference and get adventurous! Remember that there is no wrong answer here — at this stage in your learning you can afford to have a bit of fun. example123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172&lt;!doctype html&gt;&lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;Formatting a biography&lt;/title&gt; &lt;style&gt; body { background-color: #fff; color: #333; font-family: Arial, Helvetica, sans-serif; padding: 1em; margin: 0; } h1 { color: hotpink; font-size: 2em; font-family: Georgia, 'Times New Roman', Times, serif; border-bottom: 10px dotted; } h2 { font-size: 1.5em; font-style: italic; } .job-title { color: #999999; font-weight: bold; } a:link, a:visited { color: #fb6542; } ul { background-color: #eeeeee ; border: 5px solid purple ; padding: 5em ; } a:hover { text-decoration: green; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Jane Doe&lt;/h1&gt; &lt;div class=&quot;job-title&quot;&gt;Web Developer&lt;/div&gt; &lt;p&gt;Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. Separated they live in Bookmarksgrove right at the coast of the Semantics, a large language ocean.&lt;/p&gt; &lt;p&gt;A small river named Duden flows by their place and supplies it with the necessary regelialia. It is a paradisematic country, in which roasted parts of sentences fly into your mouth. &lt;/p&gt; &lt;h2&gt;Contact information&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Email: &lt;a href=&quot;mailto:jane@example.com&quot;&gt;jane@example.com&lt;/a&gt; &lt;/li&gt; &lt;li&gt;Web: &lt;a href=&quot;http://example.com&quot;&gt;http://example.com&lt;/a&gt; &lt;/li&gt; &lt;li&gt;Tel: 123 45678&lt;/li&gt; &lt;/ul&gt; &lt;/body&gt;&lt;/html&gt;","link":"/2022/08/05/styling-a-biography-page-using-css/"},{"title":"tampermonkey去广告插件","text":"如何有效去除百度搜索时的各种广告以前使用的是AdGuard广告过滤器，但是过了一阵子似乎又不能过滤了。更好用得一款广告过滤器是tampermonkey的广告过滤插件，这里记录备忘一下： 首先在edge浏览器的扩展管理模块里搜索tampermonkey 插件，安装完成后就可以在浏览器的工具栏显示图标。 tampermonkey是一款脚本的管理器，可以在Greasy Fork - 安全、实用的用户脚本大全上搜索【百度去广告】的插件,安装脚本后启用就可以实现搜索时去广告。","link":"/2022/07/19/tampermonkey%E5%8E%BB%E5%B9%BF%E5%91%8A%E6%8F%92%E4%BB%B6/"},{"title":"todolist-2021","text":"To do list The Althttpd Webserver (sqlite.org):https://sqlite.org/althttpd/doc/trunk/althttpd.md C programming ：http://www.isthe.com/chongo/tech/comp/c/index.html Physics Notes (landgreen.github.io: https://landgreen.github.io/physics/index.html Don’t Photoshop it … MATLAB it! Image Effects with MATLAB (Part 1) » Steve on Image Processing with MATLAB - MATLAB &amp; Simulink (mathworks.com: https://blogs.mathworks.com/steve/2012/11/13/image-effects-part-1/ Data Structures in JavaScript: Arrays, HashMaps, and Lists | Adrian Mejia Blog: https://adrianmejia.com/data-structures-time-complexity-for-beginners-arrays-hashmaps-linked-lists-stacks-queues-tutorial/ Basics of the Unix Philosophy:&lt;Basics of the Unix Philosophy (catb.org):http://www.catb.org/~esr/writings/taoup/html/ch01s06.html","link":"/2021/06/25/todolist-2021/"},{"title":"todolist-getting started with the web","text":"todolist2022 https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/Publishing_your_website How the web works - Learn web development | MDN (mozilla.org) https://developer.mozilla.org/en-US/docs/Learn/Common_questions/set_up_a_local_testing_server What is a URL? - Learn web development | MDN (mozilla.org) Creating hyperlinks - Learn web development | MDN (mozilla.org) Test your skills: Links - Learn web development | MDN (mozilla.org) HTML text fundamentals - Learn web development | MDN (mozilla.org) What’s in the head? Metadata in HTML - Learn web development | MDN (mozilla.org) Document and website structure - Learn web development | MDN (mozilla.org) Debugging HTML - Learn web development | MDN (mozilla.org) Front-end web developer - Learn web development | MDN (mozilla.org) Multimedia and embedding - Learn web development | MDN (mozilla.org) Video and audio content - Learn web development | MDN (mozilla.org) Responsive images - Learn web development | MDN (mozilla.org) Getting started with CSS - Learn web development | MDN (mozilla.org) How CSS is structured - Learn web development | MDN (mozilla.org) How CSS works - Learn web development | MDN (mozilla.org) Styling a biography page - Learn web development | MDN (mozilla.org) CSS building blocks - Learn web development | MDN (mozilla.org) Cascade and inheritance - Learn web development | MDN (mozilla.org) The box model - Learn web development | MDN (mozilla.org) Introduction to CSS layout - Learn web development | MDN (mozilla.org) Flexbox - Learn web development | MDN (mozilla.org) https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Multiple-column_Layout What are browser developer tools? - Learn web development | MDN (mozilla.org) Network Monitor — Firefox Source Docs documentation (mozilla.org) How to use Chrome as a Code Editor and Debugger (openreplay.com) React技术揭秘 (iamkasong.com) [Beginner’s Guide to Eleventy Part I] » Tatiana Mac 漫步华尔街 股市的总体走势是向上的，而短期的走势却是难以预测的。因此，最好的投资方式就是选定好的指数基金定投 Other languages and frameworksThere are many other server-side technologies you can use for form handling, including Perl, Java, .Net, Ruby, etc. Just pick the one you like best. That said, it’s worth noting that it’s very uncommon to use these technologies directly because this can be tricky. It’s more common to use one of the many high quality frameworks that make handling forms easier, such as: Django for Python (a bit more heavyweight than Flask, but with more tools and options). Express for Node.js. Laravel for PHP. Ruby On Rails for Ruby. Spring Boot for Java. It’s worth noting that even using these frameworks, working with forms isn’t necessarily easy. But it’s much easier than trying to write all the functionality yourself from scratch, and will save you a lot of time. https://sqlbolt.com/ (一个交互式的英文在线教程，一共19课，从零开始讲授 SQL 知识，以及如何查询数据库。) Table of Contents · Crafting Interpreters (一本如何开发编程语言的解释器的英文开源教材，相当于教你怎么发明一种自己的编程语言。) Using Gooey as a Universal Frontend for any Language or CLI Application - Blogomatano (chriskiehl.com) (本文介绍使用 Gooey 这个工具为任何命令行的命令，生成一个图形界面，用户只需写一个配置文件即可) Deep dive: How do React hooks really work? (netlify.com) (本文通过简单的代码，自己做了一个 Hooks 的简单实现，讲解 React Hooks 的原理) Docker guide (robertcooper.me) （一篇英文的 Docker 教程，解释最重要的一些概念，帮助读者学会使用 Docker 进行应用程序开发） How to use Chrome as a Code Editor and Debugger (openreplay.com)","link":"/2022/07/22/todolist-2022/"},{"title":"todolist","text":"ToDoList: Web 入门 - 学习 Web 开发 | MDN (mozilla.org) https://www.firefox.com.cn/?utm_medium=referral&amp;utm_source=mozilla.org","link":"/2022/03/07/todolist/"},{"title":"usehugo","text":"使用hugo建立静态站点hugo 是一款简单且功能强大的静态站点生成器，让新手很快上手制作自己的静态博客，下面是具体的使用方法要点： 1234567891011121314151617181920212223242526step1: 下载windows平台的hugo可执行文件,把hugo可执行文件所在目录添加到path环境变量.建立一个保存hugo站点的目录，比如g:\\hugo\\ 在g:\\hugo\\bin目录下保存hugo.exe可执行文件；在g:\\hugo\\sites下保存站点。具体目结构如下 g:\\hugo\\bin\\hugo.exe g:\\hugo\\sitesstep2: 切换到g:\\hugo\\sites目录下，在cmd窗口下按顺序运行下面的语句 hugo new site quickstart --创建站点 cd quickstart git init --用git init 初始化站点，纳入git管理 git submodule add https://github.com/hugo-theme-xx.git themes/hugo-theme-xx --下载自己喜欢的theme，这里是通用写法 将 theme = ‘hugo-theme-xx’添加到config.toml --在配置文件中标注themestep3：hugo new posts/my-first-post.md ----创建markdown格式的文档step4:hugo server -D 启动服务器 Web Server is available at http://localhost:1313/ (bind address 127.0.0.1) Press Ctrl+C to stopstep5: hugo -D 会自动生成静态站点保存在public目录下 ----生成静态的站点，默认目录是public，可以在config.toml文件中通过publishdir=‘xxxxxx- path’来指明自定义的发布路径，比如你可以发布在git clone下来的目录，直接就可以通过git add. ;git commit -m &quot;&quot;;git push origin提交到 github.com. 官方文档说明：在使用huog -D发布静态站点之前删除public下的内容，否则可能会出错。 Output will be in ./public/ directory by default (-d/--destination flag to change it, or set publishdir in the config file). Deploy Your Website After running hugo server for local web development, you need to do a final hugo run without the server part of the command to rebuild your site. You may then deploy your site by copying the public/ directory to your production web server. Since Hugo generates a static website, your site can be hosted anywhere using any web server. See Hosting and Deployment for methods for hosting and automating deployments contributed by the Hugo community. Running hugo does not remove generated files before building. This means that you should delete your public/ directory (or the publish directory you specified via flag or configuration file) before running the hugo command. If you do not remove these files, you run the risk of the wrong files (e.g., drafts or future posts) being left in the generated site.step6: 如果发布在github上，可以把public下的内容复制到提前git clone的目录下 git add . git commit -m “hugo” git push origin Quick Start | Hugo (gohugo.io) Install Hugo | Hugo (gohugo.io)**** Basic Usage | Hugo (gohugo.io)","link":"/2022/07/09/usehugo/"},{"title":"using Netlify for deployment on github","text":"Using Netlify for deployment by MDN contributors is licensed under CC-BY-SA 2.5 Deploying from GitHub to Netlify is surprisingly simple once you know the steps, particularly with “static websites” such as this project. Note: There are also a lot of guides and tutorials on Netlify to help you improve your development workflow. Let’s get thisdone: Go to https://app.netlify.com/start. Press the GitHub button underneath the Continuous Deployment heading. “Continuous Deployment” means that whenever the code repository changes, Netlify will (try) to deploy the code, thus it being “continuous”. Depending on whether you authorized Netlify before, you might need to authorize Netlify with GitHub, and choose what account you want to authorize it for (if you have multiple GitHub accounts or orgs). Choose the one you pushed your project to. Netlify will prompt you with a list of the GitHub repositories it can find. Select your project repository and proceed to the next step. Since we’ve connected Netlify to our GitHub account and given it access to deploy the project repository, Netlify will ask how to prepare the project for deployment and what to deploy. You should enter the command npm run build for the Build command, and specify the dist directory for the Publish directory — this contains the code that we want to make public. To finish up, click Deploy site. After a short wait for the deployment to occur, you should get a URL that you can go to, to see your published site — try it out! And even better, whenever we make a change and push the change to our remote git repository (on GitHub), this will trigger a notification to Netlify which will then run our specified build task and then deploy the resulting dist directory to our published site. Try it now — make a small change to your app, and then push it to GitHub using these commands: 123git add .git commit -m 'simple netlify test'git push github main You should see your published site update with the change — this might take a few minutes to publish, so have a little patience. That’s it for Netlify. We can optionally change the name of the Netlify project or specify to use our own domain name, which Netlify offers some excellent documentation on.","link":"/2022/09/11/using-Netlify-for-deployment-on-github/"},{"title":"web技术的概述","text":"The web and web standards by MDN contributors is licensed under CC-BY-SA v2.5 Overview of modern web technologiesThere are a number of technologies to learn if you want to be a front-end web developer. In this section we will describe them briefly. For a more detailed explanation of how some of them work together, read our article How the web works. BrowsersYou are probably reading these words inside a web browser in this very moment (unless you’ve printed it out, or are using assistive technology, such as a screenreader to read it out to you). Web browsers are the software programs people use to consume the web, and include Firefox, Chrome, Opera, Safari, and Edge. HTTPHypertext Transfer Protocol, or HTTP, is a messaging protocol that allows web browsers to communicate with web servers (where web sites are stored). A typical conversation goes something like 12345&quot;Hello web server. Can you give me the files I need to render bbc.co.uk&quot;?&quot;Sure thing web browser — here you go&quot;[Downloads files and renders web page] The actual syntax for HTTP messages (called requests and responses) is not that human-readable, but this gives you the basic idea. HTML, CSS, and JavaScriptHTML, CSS, and JavaScript are the main three technologies you’ll use to build a website: Hypertext markup language, or HTML, is a markup language consisting of different elements you can wrap (mark up) content in to give it meaning (semantics) and structure. Simple HTML looks like this: 12345&lt;h1&gt;This is a top-level heading&lt;/h1&gt; &lt;p&gt;This is a paragraph of text.&lt;/p&gt; &lt;img src=&quot;cat.jpg&quot; alt=&quot;A picture of my cat&quot;&gt; Copy to Clipboard If we adopted a house-building analogy, HTML would be like the foundations and walls of the house, which give it structure and hold it together. Cascading Style Sheets (CSS) is a rule-based language used to apply styles to your HTML, for example setting text and background colors, adding borders, animating things, or laying out a page in a certain way. As a simple example, the following code would turn our HTML paragraph red: 123p { color: red;} Copy to Clipboard In the house analogy, CSS is like the paint, wallpaper, carpets and paintings you’d use to make the house look nice. JavaScript is the programming language we use to add interactivity to web sites, from dynamic style switching, to fetching updates from the server, right through to complex 3D graphics. The following simple JavaScript will store a reference to our paragraph in memory and change the text inside it: 12let pElem = document.querySelector('p');pElem.textContent = 'We changed the text!'; Copy to Clipboard In the house analogy, JavaScript is like the cooker, TV, Microwave, or hairdryer — the things that give your house useful functionality","link":"/2022/07/31/web%E6%8A%80%E6%9C%AF%E7%9A%84%E6%A6%82%E8%BF%B0/"},{"title":"windows操作技巧","text":"Winodws操作技巧 windows10的分屏方法 121.鼠标左键按下并移动窗口，移动到屏幕左边或右边一半时，windows会自动将该窗口占据屏幕左边或者右边一半的空间(二分天下)。移动到屏幕任意一个角落时，windows会自动将该窗口分配四分之一的空间并贴合屏幕角落(四分天下)。2.如果windows提供的分屏方式还满足不了你的分屏需要，可以使用powertoys提供的FancyZones。 在资源管理器的目录地址路径处于选定状态，输入cmd,就会在当前目录下直接打开cmd窗口，不用在cmd下通过命令切换长路径的目录 如果在cmd窗口输入带有空格的目录、长名称目录，在输入cd 空格后，输入长目录的首字母或者特有的字母、然后直接按下tab键，就会自动有自动补全功能，如果有部分字母重合，就多次按下tab键只到选中你的目标目录。比如&quot;Program Files (x86)&quot; 使用Windows的cmd窗口，使用tree命令可以生成指定目录的结构树，保存在指定的文本文件里。比如 tree /F &gt; pathname/example.txt 。如果不能运行就切换到windows\\system32下运行 Powertoys 1234567891.颜色选择器 （使用windows+shift+C快捷键激活，鼠标移动时显示鼠标所在地方的像素颜色值，鼠标左键单击直接显示rgb模式和16进制显示颜色值，复制即可）2.FancyZones( 窗口布局：使用Windows+shift+`,按下Shift的同时移动窗口可以激活自定义的窗口布局功能，如果win10自带的分屏不合适可以使试试这个功能)3.文件资源管理器加载项（通过Alt+p或者打开窗口的查看\\预览窗格，不用打开文档可以在预览窗格浏览文档内容）4.图像大小调整器 (可以批量选装、调整图片大小，可通过修改像素来调整大小，没发现修改图片DPI的功能)5.键盘管理器 (键盘映射)6.鼠标实用工具7.PowerRename (批量修改文件名称，支持正则表达式)8.PowerToys Run (快速打开应用程序：使用Alt+空格激活，在搜索框输入简单的几个字符，便可以显示出想要的的应用程序)可使用管理员身份运行powertoys,在常规选项卡里设置为随windows启动而运行。所有这些工具在powertoys面板里都有快捷键来启动，具体使用可以查看powertoys面板里的详细说明","link":"/2022/04/01/windows%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7%E6%B1%87%E6%80%BB/"},{"title":"一个稳健的投资方法","text":"从优秀基本面出发，跟随趋势和泡沫这样一种投资方式：先研究好个股，长期跟踪观察，随着板块热点来临，趋势初起时建仓，待有一定涨幅后减仓，大幅降低持仓成本，基本上没有亏损的风险了了，剩下长期持有，如此循环，构建一个组合。我想按未来3~5年净利润率复合增长率（预期增长25%以上）来选股，当组合里的标的足够多，长期持有，应该可以防御个别公司业绩不及预期带来一些影响，优胜劣汰，长期坚持，看看能否获得5年3倍、10年10倍、20年100倍、—-。 这样一种长期可持续收益。组合首先立足赚优秀公司成长的钱，然后才是趋势和泡沫的钱。如我2019年建仓的昭衍新药、艾德生物、凯莱英等，2020年建仓的华熙生物、东方财富、国瓷材料等，2021年建仓的中颖电子、瑞丰新材、神工股份、中简科技等目前都还持有。这两天消费板块的行情来了，已建仓仲景食品、中炬高新等。 行情热点此起彼伏，要精准把握确实难度不小，弄不好还掉到坑里，还不如以收藏优质股权的心态来做投资，或许经常会有东方不亮西方亮的感觉，时间久了，手里持有的全是大幅盈利的股票，打开账户红彤彤一片，相信心情也会好很多。","link":"/2021/08/12/%E4%B8%80%E4%B8%AA%E7%A8%B3%E5%81%A5%E7%9A%84%E6%8A%95%E8%B5%84%E6%96%B9%E6%B3%95/"},{"title":"一张图讲明白git命令","text":"一个git就可以写一本厚厚的书了，那如何简单的看明白、熟练使用git命令呢？请看下图(转自网络：Git 常用命令图片展示 - SegmentFault 思否)","link":"/2021/08/22/%E4%B8%80%E5%BC%A0%E5%9B%BE%E8%AE%B2%E6%98%8E%E7%99%BDgit%E5%91%BD%E4%BB%A4/"},{"title":"三线开花之通道应用","text":"三线开花的通道应用体会除了经典的三线开花应用之外，个人感觉可以利用三线的通道应用，感受股票在运行过程中的周期和波段。 三条线可以把股价分四个相邻的通道。 20线以下成为空头的通道 这个阶段就不必操作，观望即可 20线与120线之间为筑底阶段 这个阶段可以观察是否有日线级别的股价底背离， 120线与250线为启动阶段 从20日线到120线之间会有蓄势，如果在120线附近连续的十字星，可以考虑小仓位建仓，等待120线到250线的上升。 第一波上升到年线附近开始波段回调，最好在该通道的下沿120线附近分批买入，在一波新高后卖出部分仓位，可保留部分底部仓位。 250日线之上基本进入过头阶段。真正的多头趋势是股价再20日线之上，20日线、120日线、250线呈现多头排列。 此时的买点都是在一波升势回调到位后买入，可以在20、120线附近买入 250线之上为多头阶段 股价进入多头通道，寻找合适的股票，回调买入。","link":"/2021/08/18/%E4%B8%89%E7%BA%BF%E5%BC%80%E8%8A%B1%E4%B9%8B%E9%80%9A%E9%81%93%E5%BA%94%E7%94%A8/"},{"title":"三线开花体验之一","text":"因相信别人预测让自己过早卖出，错过了主升浪，还是要相信自己的判断。好久没有操作了，尽管没有实现自己预定的目标，但是也还错，有点盈利。拿点小钱计划完整的体验三线开花的操作。 对于三线通道还处于空头排列时，采用回档买入的方法，在波段高点卖出，在大均线附近买入。只在主升浪时耐心持有主要仓位。 三线开花之第一阶段","link":"/2021/08/12/%E4%B8%89%E7%BA%BF%E5%BC%80%E8%8A%B1%E4%BD%93%E9%AA%8C%E4%B9%8B%E4%B8%80/"},{"title":"两款全文搜索工具软件","text":"两款搜索工具 如果需要快速到需要的文件名称，可以使用everything来完成。 如果需要查看包含某个名称的文档就没有那么容易了，这里就需要用到全文搜索工具了。有好多工具，大部分不适用。以前只使用过第一款，这里记录一下 filelocator 特点是不需要专门建立索引，没有复杂的设置，可以快速上手。 archivarius 3000 ​ 这个是网友推荐的，需要先建立索引，搜索效率高。在配合everything就可以完成从内容到文件的查找。在建立索引是可以根据需要，自定义建立索引时的参数，去掉用不到的参数可以提高建立索引的效率。","link":"/2022/07/11/%E4%B8%A4%E6%AC%BE%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6/"},{"title":"中医的辨证论治","text":"关于中医的辨证论治 看了徐文兵老师的中医理论视频，感觉很有道理。理解中医，首先弄懂几个基本概念 阴、阳 虚、实、热、寒 虚症，就是该有的却没有 实症，就是不该有的却有了 比如上火、口腔溃疡","link":"/2022/03/08/%E4%B8%AD%E5%8C%BB%E7%9A%84%E8%BE%A8%E8%AF%81%E8%AE%BA%E6%B2%BB/"},{"title":"使用Hexo在github上写博客","text":"使用Hexo在github上写博客 了解Hexo Hexo是一个简洁而强大的博客框架。使用markdown编辑器写文章，Hexo把这些markdown文章生成静态的拥有漂亮渲染效果的网页文件。 Hexo博客环境的搭建 安装Git 安装Node.js 安装Hexo(推荐在git的bash命令 窗口下安装) npm install hexo -g hexo-cli 使用Hexo建立博客站点项目 hexo init foldername cd foldername npm install 博客站点项目生成后，目录结构如下图： 下载并应用主题（Themes） 12$ cd your-hexo-site$ git clone https://github.com/iissnan/hexo-theme-next themes/next themes目录下的next目录，就是下载的next主题，还需要在设置_config.yml文件应用next主题： 1234567891011# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:type: gitrepo: git@github.com:username/username.github.io.gitbranch: master 编辑hexo项目的配置文件_config.yml 使用Typora建立你的博客文档，保存在项目的/sourece/_posts目录下 使用Hexo的一键部署功能把整个项目上传到github pages上 install hexo-deployer-gt ```npm install hexo-deployer-git –save123456789* add the following configuration to _config.yml ```bash deploy: type: git repo: &lt;repository url&gt; # https://github.com/username/username.github.io branch: [branch] message: [message] hexo clean （如果修改了已经发布的文档，需要使用hexo clean来清理一下，会自动删除public目录和db.json文件） hexo generate or hexo g hexo deploy or hexo d hexo g -d （也可以把生成和发布组合起来一步完成：hexo g -d g 和d 没有先后顺序，不过最后一个参数前要加段横线） 在发布到username.github.io仓库之后，CNAME文件被删除了，要在username.github.io仓库的根目录下新建一个CNAME文件，把解析的内容填写好提交就可以在浏览器看到最新的内容。也可以在hexo clean &amp; hexo generate 之后，使用记事本在public目录下新建一个CNAME文件，使用hexo d之后，会把当前public目录的内容发布到username.github.io Check the webpage at username.github.io ​","link":"/2021/05/19/%E4%BD%BF%E7%94%A8Hexo%E5%9C%A8github%E4%B8%8A%E5%86%99%E5%8D%9A%E5%AE%A2/"},{"title":"使用hugo在github中部署静态博客站点","text":"使用静态网站生成器hugo在github上搭建个人博客 下载并安装hugo的windows安装包 这里要说的是，hugo的本地配置相对要简单点。Binary (Cross-platform) Download the appropriate version for your platform from Hugo Releases. Once downloaded, the binary can be run from anywhere. You don’t need to install it into a global location. This works well for shared hosts and other systems where you don’t have a privileged account. Ideally, you should install it somewhere in your PATH for easy use. /usr/local/bin is the most probable location. Install Hugo | Hugo (gohugo.io) 在cmd窗口下按顺序运行下面的语句： hugo new site quickstart cd quickstart git init git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke 将 theme = ‘ananke’添加到config.toml hugo new posts/my-first-post.md hugo会在/content/post/目录下建立my-first-post.md文件 hugo -D 会自动生成静态站点保存在public目录下 站点文档建立并编辑完成之后，如果需要本地打开，则在cmd窗口下运行hugo server -D 启动服务器 Web Server is available at http://localhost:1313/ (bind address 127.0.0.1) Press Ctrl+C to stop 如果站点发布在github上，把public下的内容复制到提前git clone的hugo站点目录下 git add . git commit -m “hugo” (如果出现不识别的用户信息，则是因为重新git clone了项目，需要再次配置用户名和邮箱信息：git config user.name &gt; name git config user.email.yourmailbox) git push origin http://username.gihtub.io就可以在网页中打开发布在github上的静态网页 （备注：最好先使用git clone把github上的hugo静态站点仓库下载到本地，最后提交的的时候简单点，直接使用git push origin 就可以了。否则要按照本地新建仓库关联到远程hugo静态站点仓库的方法，有点麻烦）","link":"/2022/07/08/%E4%BD%BF%E7%94%A8hugo%E5%9C%A8github%E4%B8%AD%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/"},{"title":"倒车入库和倒车出库技巧","text":"倒车入库和倒车出库 倒车入库 在实际路况行驶过程中，停车位一般没有那么宽敞，因此使用倒车入库的方式停车更加节省空间，因为目前绝大多数的汽车都是前轮转向的，后来不能转向。因此要先把不够灵活的后轮摆放到合适位置，再转向前轮使得车身停靠到指定位置。 以右倒库为例，车身与车库保持60公分至100公分的距离向前行驶，当驾驶者的肩膀到车库中间时向左侧打满方向，观察右侧后视镜：当右侧车身与前端的车库库角重合时回正方向(此时车身与车库为45度左右），挂倒挡向后倒车，以右侧车库库角为轴心，向右打满方向，边到倒边回方向，始终保持安全车距，进入车库后车身正、方向正。另外一种方法：驾驶者的肩膀对其车库中心线时，向左侧打满方向，观察右侧后视镜，判断右侧车身与车库右侧保持30公分距离时回正方向，挂倒挡向后倒车，判断后门把手(或者从右后侧的三角窗附近，轮胎的垂直中轴线就在右后侧的三角窗附近，只要轮胎越过目标位，打满方向就不会触碰目标)进入车库后打满方向，进入车库后慢慢回正方向，车正方向回正。 一句话总结：保持车身与车库呈45度角倒车。 倒车出库 如果外部空间宽敞，不必考虑车头外摆的因素，向后倒车，当A柱离开前车车头时向外(向左或者向右)打满方向即可。 如果外部空间不够宽敞，就紧靠倒车的一侧，首先把车身打斜，然后回正方向，这样让车身靠近倒车一侧时呈斜行，继续向后倒车，当后轮胎越过目标车头时，转动方向盘倒车。这个技巧就是要把车身摆斜倒车，减少外侧车头外摆的距离。","link":"/2022/09/21/%E5%80%92%E8%BD%A6%E5%85%A5%E5%BA%93%E5%92%8C%E5%80%92%E8%BD%A6%E5%87%BA%E5%BA%93%E6%8A%80%E5%B7%A7/"},{"title":"路边停车","text":"路边停车在拿到驾照之前，对汽车驾驶技术很痴迷，从侧方停车到倒车入库，分析为何如此操作，甚至到搜索到了最有用的以后轮为中心的转弯半径之类的术语，才真正明白了除了直线运动之外的所有操作不过是画圆圈而已，你只需要找到这个圆心和半径。 不说这些物理意义的术语，先给自己科普一下考试驾照时的路边停车功夫，最后只是总结为三句话： 向右打方向(第一把方向，向右转动方向盘半圈：90&lt;右转方向盘角度&lt;=180，根据实际情况大体在这个角度范围，可随机应变) 当引擎盖中间与马路边线快要重合时向左打方向（第二把方向，首先经历的是向左回正方向，然后向左半把方向，所以整体上向左转动一圈方向) 当车身与路边线接近平行向右回正方向，此时的状态就是车身正、方向正 当你熟悉了这些操作之后，你并不知道是如何操作的，但是你每次都可以停的很好，为啥呢，是因为前边定量的训练而已到底是三把方向还是四把方向就可以搞定，我抽空再测试一下（^-^）","link":"/2021/06/21/%E5%81%9C%E8%BD%A6%E6%97%B6%E7%9A%84%E4%B8%89%E6%8A%8A%E6%96%B9%E5%90%91/"},{"title":"关于gitbub仓库的Deploy Key 和 Secrets","text":"熟悉Github仓库权限的几个要素 Token SSh Deploy key Deploy key 实际是一个限定在指定github仓库的的SSH,而不是作用域为整个github账户。 A deploy key is an SSH key that is stored on your server and grants access to a single GitHub repository. This key is attached directly to the repository instead of to a personal user account. Secrets 这个也可以看做是用在github actios 里的token。一般是先生成一个token ,保存起来，然后把这token 添加在指定仓库的secrets里，在action里可以通过变量的形式引用。 Note that these tokens have specific permissions, and that depending on what you want to do, you may need to create a Personal Access Token (PAT) and add it as a secret (ex: ACCESS_TOKEN) to use in your workflow. Authentication in a workflow - GitHub Docs","link":"/2021/05/31/%E5%85%B3%E4%BA%8Egitbub%E4%BB%93%E5%BA%93%E7%9A%84Deploy-Key-%E5%92%8C-Secrets/"},{"title":"关于hexo站点的资源文件存放","text":"Asset Folder in Hexo blogGlobal Asset FolderAssets are non-post files in the source folder, such as images, CSS or JavaScript files. For instance, If you are only going to have a few images in the Hexo project, then the easiest way is to keep them in a source/images directory. Then, you can access them using something like ![](/images/image.jpg). 可以把markdown撰写post时引用的图片文件保存在hexo项目的source/images目录下，在markdown编辑器里引用图片的格式为![img](/images/image-name.jpg or .png) Post Asset FolderFor users who expect to regularly serve images and/or other assets, and for those who prefer to separate their assets on a post-per-post basis, Hexo also provides a more organized way to manage assets. This slightly more involved, but very convenient approach to asset management can be turned on by setting the post_asset_folder setting in _config.yml to true. 1_config.ymlpost_asset_folder: true With asset folder management enabled, Hexo will create a folder every time you make a new post with the hexo new [layout] &lt;title&gt; command. This asset folder will have the same name as the markdown file associated with the post. Place all assets related to your post into the associated folder, and you will be able to reference them using a relative path, making for an easier and more convenient workflow.","link":"/2021/05/30/%E5%85%B3%E4%BA%8Ehexo%E7%AB%99%E7%82%B9%E7%9A%84%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%AD%98%E6%94%BE/"},{"title":"关于html的简单理解","text":"HTML is a markup language that defines the structure of your content. HTML consists of a series of elements, HTML是标记语言，用来定义网页内容的结构，它由一系列元素组成。一个完整的元素由一对尖括号包含的内容组成，其中结束尖括号包含一个向右的斜杠，如下图所示: 123456789&lt;html&gt; .. &lt;/html&gt;&lt;head&gt; .. &lt;/head&gt;&lt;title&gt; .. &lt;/title&gt;&lt;body&gt; .. &lt;/body&gt; 这些主要的元素是结构化网页内容的框架元素。 其他常用的元素如下图： 1234567&lt;p&gt; .. &lt;/p&gt; 段落标记&lt;img &gt; img标记没有结束标记，比如：&lt;img src=&quot;images/firefox-icon.png&quot; alt=&quot;My test image&quot;&gt;&lt;H1&gt; .. &lt;/h1&gt;&lt;H2&gt; .. &lt;/h2&gt;&lt;ol&gt; .. &lt;/ol&gt; 有序列表&lt;ul&gt; .. &lt;/ul&gt; 无序列表&lt;a&gt; .. &lt;/a&gt; 链接 比如：&lt;a href=&quot;https://www.mozilla.org/en-US/about/manifesto/&quot;&gt;Mozilla Manifesto&lt;/a&gt; 123&lt;!--comment--&gt;Note: Anything in HTML between &lt;!-- and --&gt; is an HTML comment. The browser ignores comments as it renders the code. In other words, they are not visible on the page - just in the code. HTML comments are a way for you to write helpful notes about your code or logic.","link":"/2022/07/22/%E5%85%B3%E4%BA%8Ehtml%E7%9A%84%E7%AE%80%E5%8D%95%E7%90%86%E8%A7%A3/"},{"title":"关于tiddlywiki的基本原理","text":"关于tiddlywiki的简单理解好久不玩tiddlywiki了，有点生疏，忘记了如何组织这些单个的tiddler。这里简单的总结并记录，以后再生疏的时候浏览一下，可以快速上手。 TiddlyWiki的总体设计就是每个tiddler只保存一个简单的内容，坚持颗粒度最小化 使用目录或者标签的方式把具有相同标签的若干个tiddler组织在一起。这样的好处是随时可以拿来使用组织成为新的内容。 具体的操作方法就是新建一个tiddler，然后编辑这个tiddler，在当前版本下，点击工具上的图章按钮，弹出几种类型的预配置文本模版，修改一下具体的标签或者目录明即可实现快速组织。以tag为例： &lt;&lt;list-links “[tag[task]sort[title]]”&gt;&gt; 把tag[]方括号中间的内容更换为你需要显示的标签，就可以把所有属于这个标签的tiddler组织显示在当前这个正在编辑的tiddler中 一个新建的的tiddler有多个属性，最基本、最常用的也就是三个基本属性 tittle tag text 最后一个text属性就不用说了，就是这个tiddler的内容。tiddlywiki的最核心的就是tittle和tag属性，以及这两个属性的组织结构。tittle就是当前这个tiddler的标志，而它的tag属性就是他的上一级节点，或者容器。一个tiddle的tittle在你的tiddlywiki库中具有唯一性，是代表这个tiddler，把这个tittle作为另外一个或者多个tiddler的tag，就实现了tiddler之间包含和被包含的关系，正式这种递归的手法实现了无限延展性，实现了目录树。 一句话总结： 想要包含若干个子目录，直接把这个tiddler的tittle作为其他tiddler的tag就实现了目录层级的绑定，这个有点哲学的方式，比如你要宣传某种思想。","link":"/2022/07/03/%E5%85%B3%E4%BA%8Etiddlywiki%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/"},{"title":"关于web前端技术的理解","text":"关于web 前端技术的基本理解web前端技术的三个要素，html、css、javascript。通过浏览MDN文档，大致理解了html、css、javascript的基本作用和相互之间的关系，做个简单的笔记备忘。 html实现web文档的结构化(就像建筑的框架结构)，css对html元素进行布局和渲染（就像房间的装修），javascript实现html元素的动态处理，为网站增加交互功能，通过浏览器的解释最终实现丰富多彩的网页。 1HTML provides structure and meaning to our text, CSS allows us to precisely style it, and JavaScript contains a number of features for manipulating strings, creating custom welcome messages and prompts, showing the right text labels when needed, sorting terms into the desired order, and much more html hypertext markup language ,超文本标记语言，主要用来把web文档结构化。具体是通过丰富多彩的元素来实现，这些元素通过各种标签(tag)来表示。比如: 1234567h1、h2、h3、h4、h5、h6来表达标题的字体大小&lt;html&gt;..&lt;/html&gt;&lt;head&gt;..&lt;/head&gt; 文档的头部&lt;body&gt;..&lt;/body&gt; 文档的主题&lt;div&gt; ..&lt;/div&gt; 区域.............. 各种文档对象的标签 css casecade stylesheet ,主要用来对html元素进行布局和装饰渲染。 基于盒子原理实现布局，每个盒子都有width、padding 、boder等特征。 通过多种选择器实现分类渲染 h1{ property1: val1 } p{ property1: val1;property2: val2;} 下面的内容来自MDN官方文档：CSS basics - Learn web development | MDN (mozilla.org)) by MDN contributors is licensed under CC-BY-SA 2.5 Different types of selectors There are many different types of selectors. The examples above use element selectors, which select all elements of a given type. But we can make more specific selections as well. Here are some of the more common types of selectors: Selector name What does it select Example Element selector (sometimes called a tag or type selector) All HTML elements of the specified type. p selects &lt;p&gt; ID selector The element on the page with the specified ID. On a given HTML page, each id value should be unique. #my-id selects &lt;p id=&quot;my-id&quot;&gt; or &lt;a id=&quot;my-id&quot;&gt; Class selector The element(s) on the page with the specified class. Multiple instances of the same class can appear on a page. .my-class selects &lt;p class=&quot;my-class&quot;&gt; and &lt;a class=&quot;my-class&quot;&gt; Attribute selector The element(s) on the page with the specified attribute. img[src] selects &lt;img src=&quot;myimage.png&quot;&gt; but not &lt;img&gt; Pseudo-class selector The specified element(s), but only when in the specified state. (For example, when a cursor hovers over a link.) a:hover selects &lt;a&gt;, but only when the mouse pointer is hovering over the link. There are many more selectors to discover. To learn more, see the MDN Selectors guide.","link":"/2022/08/23/%E5%85%B3%E4%BA%8Eweb%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E7%9A%84%E7%90%86%E8%A7%A3/"},{"title":"关于中国书法","text":"关于中国书法的简单理解 书法是中国传统文化的瑰宝，是中华文化美学的符号化表达，是书写者心性的表达。 从书法的具体形式来看，可分为篆、隶、真、行、草五种书体。 书法的练习方法。顾名思义，书法就是书写的方法，但是这样的描述远远不够。它包括笔法、字法、章法、墨法。我个人还包括心法。 笔法，就是某种书体的具体笔画的书写技法，比如隶书、楷书的起笔，运笔、收笔的具体技法。 字法，似乎没有这种叫法，其实就是单独一个字的结构。如何把握一个字的间架结构是体现书法美学的基础。 章法和墨法就是临摹和书写的一种整体布局和墨色的阴阳顿挫，是墨色的节奏。 心法则是体现书写者书写时的性情，或平稳、或流畅、或雄强、或大气磅礴等。 对于初学者，可以在结构和笔法上练习，如果方法得当就可以体会到书写的美学。如果进一步提升，则可以驾驭更好的章法或者墨法，体验美妙的书法韵律。","link":"/2021/08/09/%E5%85%B3%E4%BA%8E%E4%B8%AD%E5%9B%BD%E4%B9%A6%E6%B3%95/"},{"title":"关于经济危机的简单论述","text":"关于经济危机的简单论述经济危机实际上就是生产过剩，有效需求不足导致的经济发展萧条。经过高速发展后，全社会的债务水平达到顶部，企业经营扩张导致的债务泡沫，家庭居民负债透支了未来几十年的收入。此时，靠债务驱动发展经济的模式缺少新的增长空间。整个社会经济进入萧条阶段，企业不敢投资，个人不敢消费，都处在还债模式。 如何走出危机 处在萧条的阶段，企业不投资，个人没钱消费，整个社会的生产、消费链条运转不畅了。其实最核心的是没有购买了，也就是居民手里没钱了，负债已经太多了，比如一套房子花光了两代人的钱包，哪里还有钱去消费呢。因为人的欲望是无限的，只要有足够的钱，消费一定可以跟上的，有足够的的钱，两套、三套房都可以买，没钱，一套房都够呛。所以，我个人认为，核心就是有钱消费。那怎么才能有钱消费呢。在萧条阶段，普通大众有消费的潜力，可是手里没钱，少数的富人手里有钱，但是消费规模很小，衣食住行能消费多少？主要是用来投资的，可是又没有地方投资，怎么破局？ 搞钱有两种途径：印钞和发债。过量印钞的话副作用大，会导致货币贬值，导致通货膨胀，资产价格上涨、物价飞涨。而政府发债比较靠谱，这个是把存量的货币重新组织再分配使用，而印钞的话，就是搞货币增量，一个增量，一个是存量。发债就是政府向民众借钱，到期还本付息。国家的信誉背书还是强大的，所以有钱人在没有可投资项目的时候，愿意把钱借给国家的，收益低了点，最重要的是靠谱。国家拿着发债筹来的货币，投放在可以拉动经济的行业，一般是基建，因为这个行业关联的上下游企业多，各行各业都有，可以充分的带动生产和就业，上游、中游、下游的的企业有了订单，就可以保证民众就业，民众有了收入就会积极的去消费，这样一来整个经济链条就正常动起来了。当经济繁荣起来之后，进入到适度通胀的状态，行业都有钱赚，国家的税收有了，自然可以支付国债的借款，如此，这样一个经济发展的正向循环就完成了。当然，这么多年，货币的增量是一直在上升趋势中，关键是要让货和币之间保持适度的比例，适度通胀是有利用经济发展的。","link":"/2022/08/28/%E5%85%B3%E4%BA%8E%E7%BB%8F%E6%B5%8E%E5%8D%B1%E6%9C%BA%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%BA%E8%BF%B0/"},{"title":"关于股票操作的感悟","text":"操作股票的基本步骤及时选好股、等待好的买点、拿好。 选好股 就是先要把握宏观的大趋势，寻找国家政策主导的行业，在行业里寻找优质企业 好的买点需要耐心等待，对于长牛股，如果没有及时买入，需要再大周期的120周耐心等待。 在公司的前景看好，同时成长性很好，业务逻辑稳定保持的时候就拿好它，让利润奔跑，敢于盈利。 买到好的投资标的之后，不用经常的看盘 好的投资不必经常看盘 经常看盘的原因是因为你很无聊，或者是没有事情做通过频繁的交易来寻找乐趣而已。如果想两者项兼顾，就把大仓位投资在优质股票，以5年为周期的中长期持有；再小仓位买点股性比较活跃的，相对灵活的操作一下，感受大盘的趋势和波动。","link":"/2021/08/11/%E5%85%B3%E4%BA%8E%E8%82%A1%E7%A5%A8%E6%93%8D%E4%BD%9C%E7%9A%84%E6%84%9F%E6%82%9F/"},{"title":"关于调整的周期","text":"价格在刚刚突破原有的区间、进入新的上周期时，一般的调整是短周期的，5日线、10线级别的调整完成后，就继续新的上涨趋势。 此次的买入时间就是在5日或者、10日线附近挂单买入，不必追高 价格在一轮大幅上涨之后，比如30%至100%的涨幅之后，进入调整后，一般要经过大周期的调整才能重新回归上涨通道。 在大幅下跌后，比如30%左右的下跌之后见底，虽然此时的买入价格低，但是大型整理区间的时间周期长，浪费的是时间，浪费的是资金的周转率。当然，如果有成本极低的低仓位，此时可以不必理会，持有就好。 最好的买入点是在重新站上120日线，杯柄的右半部，接近前高的区域买入，此时可以提高效率。 ​","link":"/2021/10/14/%E5%85%B3%E4%BA%8E%E8%B0%83%E6%95%B4%E7%9A%84%E5%91%A8%E6%9C%9F/"},{"title":"关于选好股买好时机","text":"关于选好股买好时机看陶博士的公众号有一阵子了，个人比较懒，也觉得他的模式不太适合我，所以就一直停留在大概认知的层面。后来看了板块指数强弱的方法，再结合以前各种rps公式的应用，有了点感觉，感觉可以应用到我的方法中。 选好股 基金持股和北上资金 板块强弱排序中寻找排名靠前的板块 买好时机 rps三线变红色或者，其中两个rps值达到87以上就可以关注或者买入。这个没有特别搞清楚博士的意图，待自己实践。 我个人使用的回头望月、顺水推舟、快马加鞭、120跳马、双线火车轨几个买入模式。 对于符合口袋支点的强势股票，除非你是在放量大涨的当天直接买入，第二个买点就是在回调5、10日线时买入。 在选好股票池后，结合自己熟悉的买点加入自选。 选股、买入、持有、卖出 一个完整的交易过程包括这四个步骤，好的选股基本等于成功了一半，因为你找对了标对，选对了方向。 买入的时机也很重要，决定你的成本高低 持有是最难的一个过程，需要足够的耐心和信心，有需要灵活和正确的决策才能一路持有。 卖出是否合适，取决于你的交易规则。","link":"/2021/08/25/%E5%85%B3%E4%BA%8E%E9%80%89%E5%A5%BD%E8%82%A1%E4%B9%B0%E5%A5%BD%E6%97%B6%E6%9C%BA/"},{"title":"关闭维特拉机油保养提示信息","text":"如何关闭维特拉机油保养提示信息车载电子系统根据公里数或者时间，到了里程或者时间(5000公里或者半年，以先到者为准）会自动显示机油保养提示。有时候你不方便更换机油，可以自己关闭机油保养提示信息。 1231、接通点火开关（不必打开发动机，有机会测试一下），使用显示屏右侧的手柄，将显示屏切换的黑屏状态。2、长安显示屏左侧手柄直到显示屏出现机油出现OIL小扳手图标（机油小扳手显示2秒钟），快速松开手柄，2秒内连续5次快按左侧手柄。3、显示屏出现sucessfull表示操作完成。","link":"/2022/07/12/%E5%85%B3%E9%97%AD%E7%BB%B4%E7%89%B9%E6%8B%89%E6%9C%BA%E6%B2%B9%E4%BF%9D%E5%85%BB%E6%8F%90%E7%A4%BA%E4%BF%A1%E6%81%AF/"},{"title":"受理岗设备维护","text":"受理岗设备维护现有的业务系统是基于IE浏览器(IE11以上)的web应用，在浏览器里调用高拍仪、手写板等外部设备完成信息的采集。在受理业务量多的时候，浏览器会经常出现莫名的错误，清理浏览器的缓存也没有多大作用，因此只能重置浏览器，再重新设置参数，安装受理岗的外部设备。这样做的好处是不用再次重装Windows，节省了不少时间。下面就把重置浏览器、安装外部设备驱动、设置浏览器各项参数记录如下： 一般是高拍仪不工作，可以使用下面三种方法维护（清理缓存、重置浏览器、重新安装驱动) 清理浏览器的缓存。如果清理缓存后设备还是有问题，使用第二种方法 重置浏览器 重置。在浏览器的internet选项窗口，选择【高级】选项卡，点击窗口最下部的【重置】按钮，在弹出的窗口中选择【删除个人设置复选框】，点击重置即可完成。 重新设置浏览器的各项参数，主要涉及下面3个项目的参数设置： 打开IE浏览器的internet选项窗口，选择【安全】选项卡-&gt;受信任的站点-&gt;站点，在收信任的站点窗口里添加通用的ip: 12httP://10.120.*.*不勾选窗口下面的复选框：对该区域的所有站点要求服务器验证（https:） 点击自定义级别，设置Activex的各项参数，禁用下面两项（其他所有Activex选项启用） 仅允许经过批准的域在未经提示的情况下使用Activex 在【其他】项目下：使用弹出窗口阻止程序 选择【隐私】选项卡，取消启用弹出窗口阻止程序复选框 重新安装高拍仪设备驱动 使用受理岗业务账号登录系统，在下载插件区域选择适合的设备驱动。目前的高拍仪是良田1660，手写板是上海馨渡。 首先安装高拍仪设备驱动，因为系统有驱动，所以会弹出安装、修复、删除三个选项的安装窗口，这里选择删除，也就是先卸载已存在的驱动 (因为浏览器重置之后，那些调用接口无法关联驱动，需要重新安装，但是因为驱动并没有卸载掉，而重置浏览器并不会卸载驱动)，卸载完成后，再次安装下载好的驱动安装包。这里一般只需要安装高拍仪设备驱动即可，手写板是正常的。如果手写板有问题的话再安装。 注意在安装手写签字版的驱动后，会提示软件过期的信息，再安装一个授权文件就可以正常使用。 ​ 备注：这里的参数设置可以考虑使用脚本进行批处理设置，提高工作效率。在空闲的时候可以把脚本做好，下次维护时可以快速完成设置，轻松搞定。 批处理脚本设置IE自定义参数 经过摸索，已经成功使用批处理脚本设置IE信任站点的自定义参数设置。在重置浏览器之后，运行这个脚本即可，只是如果多次运行时，会提示已经存在，是否要覆盖，这里直接选择Yes 即可。 最后把高拍仪的驱动重新安装。第一次安装界面出现时选择卸载，再次安装即可实现设备的维护，正常工作。 最后一种方法：重新安装windows系统、重新安装配置受理岗设备 系统的原因，重置浏览器也无法正常运行，此时只能选择重新安装windows系统。 安装完毕windows，首先安装高拍仪的驱动，把高拍仪的三个驱动都下载安装一下 安装手写板的驱动、分屏驱动。安装完毕后，如果显示授权的问题，则可以再安装一下手写板的授权文件。 安装acrobat reader 配置浏览器的各项参数 安全信任站点的添加 选择浏览器的兼容性试图，如果是360浏览器则要切换到兼容内核，否则不会显示操作员的工号 对受信任站点的击自定义级别进行设置。项目众多，但是我们只需要记住下面两个项目禁用的，其他的都开启就好： 仅允许经过批准的域在未经提示的情况下使用ActiveX 使用弹出窗口阻止程序 更多的配置参照系统分发的word版本配置文档 受理岗打印机的安装。打印机型号是hp 5200lx,下载通用的安装程序upd-pcl5-x64，在安装时选择dot4端口(其他端口不能打印)。 下面的文字记录与2022年10月。 由于受理岗的浏览器在受理业务时频繁出现问题，要不就是直接退出登录页面，办理业务要重新扫描二维码登录，如此反复，导致工作效率很低，我能做的之只能是重复这段文字前面列举的几种方法，但是始终没有彻底解决问题。直到有一天，发现另外一台受理岗电脑几乎不会出现浏览器因为受理业务出现问题。所以就很好奇为什么，差别在哪里。两台电脑是同样的配置，都是我自己利用IT天空的技术封装的windows7,只是这个非常稳定的机器是win32，浏览器是通过自己制作的批处理完成IE8到IE11的升级，而经常出问题的是那台机安装的Windowsx64（不是我自己封装的win7,是从网络里挑选下载的win7稳定版），IE11也是系统自带。我自认为是这个差别导致的浏览器问题，就把受理岗的系统重新安装了自己封装的win7_32,运行批处理完成IE8到IE11的升级，刚开始只是安装了高拍仪的驱动和身份证读卡的驱动，设置完毕浏览器的相关选项参数之后，受理很多笔业务业务不会出现浏览器的问题，使用起来很稳定，终于找到了问题的根源并解决，自己也很有成就感，因为这个系统是自己刚学习windows封装技术时制作的windows-x64-x32两个版本的系统合在一起的系统，手动制作的批处理完成IE8到IE11的升级，办理业务居然非常稳定，给自己点这个赞！^-^ 刚开始以为手写板不支持win32，所以就没有同步安装上海馨度牌子的手写板。因为办理业务很稳定，就是试着下载了手写板驱动和手写板分屏驱动，安装后居然可以正常识别和同步，只是忘记了再安装手写板的授权文件，办理业务时出现设备过期的提示信息。因为有个印象，所以直接就安装了这个授权文件，问题直接解决。对于受理岗的问题持续了仅一年了，这次终于找到了最终的解决办法，找到了一种尽在掌握的感觉，这种自信的感觉就是很好，给自己加油，继续学习并做好笔记。 除了受理岗之外，经办岗位电脑使用双屏幕查看原始文档时，打开的pdf文件很大，扩展了屏幕显示。进过摸索，是在IE11的标签页显示方式决定的，如下图： 发现这个特点，就是让所有的新窗口始终显示在新标签页。 这两个问题解决后，我有快一个月没有问题需要处理，尽在掌握，感觉很好^-^","link":"/2021/07/16/%E5%8F%97%E7%90%86%E5%B2%97%E8%AE%BE%E5%A4%87%E7%BB%B4%E6%8A%A4/"},{"title":"口袋支点买点实例","text":"从基金持股百分之三和北上资金3000万的股票里，选出接近一年新高的股票 开盘后关注量能大的、突破时放量的、涨幅在5个点以上的板块龙头 最好是该股所属的板块rps也很强势，rps值在90以上 最好是突破的当天买入 如果错过了口袋支点买入点，就在后期的首次下10日、20日线买入。 设置好10%的止损位置，保护本金","link":"/2021/10/06/%E5%8F%A3%E8%A2%8B%E6%94%AF%E7%82%B9%E4%B9%B0%E7%82%B9%E5%AE%9E%E4%BE%8B/"},{"title":"古典艺术照片网站","text":"收集古典艺术品的照片和海报古典艺术的海报","link":"/2021/06/24/%E5%8F%A4%E5%85%B8%E8%89%BA%E6%9C%AF%E7%85%A7%E7%89%87%E7%BD%91%E7%AB%99/"},{"title":"和田玉入门","text":"和田玉入门之一 什么是和田玉 凡是含有透闪石成分在95%以上的玉石都叫做和田玉。 和田玉的主要产地 中国的新疆、青海和外国等多地，但是市场的主流是新疆和田、青海。 和田玉的分类 山料 所谓的山料一般是指和田玉矿石的原矿石。一般新疆的且末县（且末山料产能占市场70%）、青海出产的主要是和田玉山料 山流水料 经过风化剥落的山料玉矿石,经过自然的搬运到了河床的上游,经过流水的冲刷形成 籽料 进过大自然搬运的玉石矿到了河床里,经过千年的水流冲刷和沉浸,形成了鹅卵石状的玉石 戈壁料 被大自然搬运到了沙漠的玉石矿 和田玉的品质 品质最好的主要是新疆和田玉籽料，一般具有油润性好、细腻度好、白度好几个主要的特征。油润性是和田玉最主要的特征，外观有种上好的大米粒呈现的观感，油糯、细腻、内敛的白色。 山料的品质稍微逊色点，主要是油润度没有籽料好，产地主要在新疆且末县，一般说且末料就是默认指山料 青海料的主要特征是白、水、藕粉状 和田玉籽料的颜色分类 羊脂白 白玉 青白玉 青玉 (常见的青玉有沙枣青) 碧玉 （ 常见的有鸭蛋青） 墨玉 黄玉 糖玉 从品质、价格上来说，一般羊脂白是顶级的白玉，下来就是白玉、青白玉、青玉（沙枣请等）。手镯的主流颜色一般就是白玉、碧玉。墨玉也是很特别的，和白玉一起交汇成的为青花玉。新疆且末的山料有糖色或者黄口色，与白玉相互映衬，很是漂亮 和田玉籽料的鉴别 可以遵循从外向内的观感来鉴别。主要把握几个主要特征： 皮色 如果有洒金皮或者是红皮白石，就要看过渡色是否自然，边缘处是否有类似水草的自然分布，有的呈现或多或少的沁色。常见的有枣红红皮、洒金皮、秋梨皮、白皮等皮色。 毛孔 毛孔是否自然 外形 是否自然，是否有明显的突兀线条 内部结构 是否有水线、石花、棉点。如果密度不好的话，就会出现这些特征，也即是说不够细。而沁色的料子就是因为结构有点松，才会有铁、锰等元素的长期沉积，形成沁色，沁色料子如果油润度不够的话，也许会出现反碱，局部出现干涩现象。 总结一下，首先从外观的油糯度来判别，然后从颜色的白度来鉴别，青海料是水白，俄料是瓷白，比较僵，而真正的和田籽料白度是糯性很好的。最后看玉石内部的细腻度，所谓的无结构，指的就是玉石内部的细腻度，可以用手电大灯看一下，是个玉一般都有结构，打灯无结构要么就是假的，要么就是极品，可是这种极品玉你能见到吗。如果遇到油润、细、白都很好的籽料，一般是假的，因为那个价格不是普通人买的，一般可以达到克价过万了，也即是说一件作品要几十万或者百万级别的，你几千元就别想买了。如果预算不足，可以先从油润度入手，退而其次的从青白玉、青玉中找点把玩一下入门，等有了经济实力才能看到更好的白玉。 根据和田玉作品是否留皮来区分是否籽料的和田玉，有切料不留皮的和田玉籽料，也有独籽籽料的和田玉。一般独籽的籽料更好点，价格也更高。由于目前的造假技术现金，更多的山料和青海料、俄料来仿制和田玉籽料，所以大部分玩玉人士更倾向于入手独籽的和田玉作品。 根据裂纹处的沁色区分。一般和田玉籽料在河床中被搬运、碰撞，有十籽九裂的说法。经过碰撞处一般有结构疏松现象，经过水流的冲刷，会在裂纹处沉积铁、锰等金属元素，会形成类似水草状的沁色形状（观察一下水草的形状），一般是内部颜色深（色根），表层浅一点的自然过度。那为什么会出现内部深、外部浅的特征呢，没茶籽料啊，我觉得应给类似开口的钱袋子，袋子里面会装点金子的，外边的大部分会被水流冲走，自然附着的就少了，也许是这样的原因^-^,记着这个结果就好。如果发现有突兀的沁色，看着不美、不自然，一般为认为仿造。大自然造物，一般看着很舒服、自然，最后一招凭自己的审美来感觉是否有大自然造物的美感来判断。","link":"/2022/04/28/%E5%92%8C%E7%94%B0%E7%8E%89%E5%85%A5%E9%97%A8/"},{"title":"咖啡","text":"慢慢喜欢上咖啡以前只喜欢吃点黑巧克力，浓郁的香味和微微的苦味感觉很喜欢。后来查到关于咖啡的小知识，除了提神之外营养价值挺高，不过只知道那些让人眼花缭乱的咖啡机挺繁琐，就一直没有行动。也许自己会在退休的那一天才开始慢慢学习品尝咖啡，虽然现在的各种自动化咖啡机让咖啡立等可取，但心里始终觉得品咖啡是个慢生活，要慢慢品味。 感觉这个还是需要学习一下咖啡的入门知识，那就从各式各样的咖啡装备开始吧，给自己个科普。其实是想体验自己亲自制作咖啡的乐趣，不仅仅是拿到成品喝下去的结果，所以感觉还是从手动开始为好。 手动制作模式 手摇式磨豆机 既然是手动模式，那么一定需要个装备把咖啡豆磨碎，然后再煮咖啡吧。有各式各样的手摇式磨豆机，比如国产泰摩(timemore)栗子c系列可以作为入门级的手动磨豆机，磨出来的咖啡粉对后期的煮咖啡品质至关重要，多多练习，当然也可以尝试一下一键式的自动磨豆机，比如国产的德龙磨豆机。 摩卡壶 有了手动做好的咖啡粉，再配合手动的意大利出品的摩卡壶和电陶炉等配套设备就可以简单的完成咖啡萃取 手冲咖啡 可以尝试手冲式咖啡制作套件 胶囊式咖啡机 需要购买配套的咖啡胶囊，比如雀巢等大品牌的咖啡胶囊产品，可以很方便的制作出美味的咖啡。这种方法就是简单快速，适合快节奏的生活 半自动意大利式咖啡机全自动意大利式咖啡机","link":"/2022/03/31/%E5%92%96%E5%95%A1/"},{"title":"国家-企业-家庭的资产负债表","text":"关于资产负债表的简单论述​ 在一个完整的经济周期中，在当前以美元主导的世界经济贸易体系之下，当一个国家的债务规模达到顶部区间的时候，美国一般会采用加息的手段完成国家之间财富的收割。完整的运行周期和一只股票的运行波段相同：复苏、繁荣、通胀、滞涨、萧条，基本是这几个阶段，如此周而复始。 复苏期（对应一年中的春季）。在经过长期的下跌，为了促进经济复苏，美联储释放美元，此时的货币价格很低（低利率），不断膨胀的货币规模，会导致美元流向全世界。 国家货币政策 企业行为 家庭和个人行为 繁荣期（对应一年中的夏季）。大量的美元会流向新型的经济体，尤其是大环境稳定，投资收益高的地区。各行各业兴旺发达，企业有订单，工人有收入，此时的消费处于正向循环。也会导致企业开始考虑扩大投资规模，甚至跨行业投资。尤其要提一下的是房地产行业，这个行业的特定是容量大，关系民生，涉及的上下游行业特别多，尤其是处在城市进程中，房地产增长空间很大，吸引大量资金流入房地产，导致房价大涨，涨到让人所有人以为房价只会上涨不会下跌。最终出现了全民追逐房地产的现象，尤其是分期几十年买房的手段，实际上是负债30年买入了房地产，此时全民进入了负债的顶峰。 国家货币政策 企业行为 家庭和个人行为 通胀和滞涨期（对应一年中的秋季，所以滞涨也可以叫做收获期）。 国家货币政策 企业行为 家庭和个人行为 萧条期（对应一年中的冬季，企业和个人要做好过冬的准备。个人可以做好现金和知识的储备）。 国家货币政策 企业行为 家庭和个人行为 1资产 = 所有者权益 + 负债 这个公式的表述对于大到国家、家庭和个人都是适用的。当国家的负债达到顶点时，美元开始加息，本国货币回流美国，导致资产价格暴跌，此时会造成资产负债表的技术性破产。因为公式左边的资产价格大幅下降，而右边的的负债却没有减少（银行不会给你同步降低债务），导致企业、个人资不抵债，也就是所谓的破产。那如何修复企业、个人的资产负债表呢？只有通过收入的增加来减少负债，有多少年的负债，就会导致经济停滞多少年，直到彻底还完负债才算修复好自己的资产负债表。 提个问题：为什么美国大幅加息会导致一个国家居民财富缩水？ 在美元主导的货币体系下，强势美元对其他国家的汇率有着直接的影响。如果在拉高了资产泡沫之后，美国大幅度连续的加息，会导致资产变现、资本外流，直接导致一个国家的主要资产价格大幅度下跌，比如房地产价格大幅度下跌。而多数居民使用负债购买的房产，价格大幅度下跌，就会导致资产价格不抵原来的债务，出现家庭财富的破产，财富缩水，会把中产阶级的财富洗劫一空。","link":"/2022/08/27/%E5%9B%BD%E5%AE%B6-%E4%BC%81%E4%B8%9A-%E5%AE%B6%E5%BA%AD%E7%9A%84%E8%B5%84%E4%BA%A7%E8%B4%9F%E5%80%BA%E8%A1%A8/"},{"title":"国家经济增长和个人的资产配置","text":"国家经济增长趋势在过去40年年间，中国在改革开放大潮流中大发展，无论是科技创新，还是制造业都取得了举世瞩目的成就。从大范围讲，投资、消费、出口这三驾马车带动了中国经济的腾飞，国家GDP稳步增长，目前人均收入到达1.2万美元。 地方经济发展模式从主要的经济结构来看，中国高速增长的时期主要还是依托房地产行业，带动众多行业上下游产业链快速发展。从国家层面讲，财政收入的大部分来源是房地产相关的收入，政府卖地，开放商拿地，从银行拿到部分贷款，画好了蓝图，老百姓买单，形成一个正向循环的产业链。在人口红利还在的大趋势下，房价经过两波的快速上涨，持有房产的人资产增长，如果是住房按揭贷款的，会感觉到还款比以前更轻松了，那是因为在房地产带动下，整个经济处于适度膨胀的状态，居民的收入也增长了，拿着现在的高收入去还以前的贷款，自然会轻松很多。 可是在疫情的冲击之下，从2019年至今，全球经济进入滞涨状态，上游的大宗商品价格暴涨，压缩了企业的利润，同时也限制了用户端的需求，经济处于下行状态。如果此时购买了人口流出地区的房地产，相对于在高位当了接盘侠，随着经济的下行，这些地区的房产自然会贬值，同时未来的收入也不会向以前一样稳定增长了。 从国家层面，如果没有新的领域接替房地产带动中国经济增长，房地产行业本身进入下行通道，那么就要好好考虑了，需要买房的要规划好区域，在收入不会增长的情况下载使用按揭贷款，未来还款就会很麻烦。 做好个人财务规划从现在起，规划自己的收入和资产配置，刻不容缓。","link":"/2022/07/20/%E5%9B%BD%E5%AE%B6%E7%BB%8F%E6%B5%8E%E5%A2%9E%E9%95%BF%E5%92%8C%E4%B8%AA%E4%BA%BA%E7%9A%84%E8%B5%84%E4%BA%A7%E9%85%8D%E7%BD%AE/"},{"title":"在edge浏览器中使用google搜索","text":"谷歌退出中国之后，无法直接使用google搜索引擎了。可以使用第三方扩展的形式使用google搜索。 在winodows下打开edge浏览器，最扩展管理里搜索[iGG谷歌学术助手]。 在浏览器输入：https://www.google.com.hk","link":"/2022/07/19/%E5%9C%A8edge%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E4%BD%BF%E7%94%A8google%E6%90%9C%E7%B4%A2/"},{"title":"在git-bash下运行批处理推送博客到github“","text":"如何在git-bash下运行批处理实现自动推送手动推送hexo项目和publci到不同的github仓库有点麻烦，如果操作错误的话不容易发现，第三次操作时错了目录，发现使用hexo new 创建文档时出错，就用下面这个命令回撤后正常： git reflog 查看最近推送记录，根据备注选择合适的回撤记录，所以要认真写备注，要不然在回撤的时候没法做决定^-^ git reset --hard id-xxx – 这里最后的参数标识特定的推送记录 git push -f origin main git pull 下面试试git-bash里运行批处理123456789101112131415161718192021222324252627282930313233@echo off@echo==========git-add===git-commit==git-push=========git add .@echo git add . 添加文档完成@echo.git commit -m &quot;udpate&quot;@echo git commit 完成@echo.git push origin @echo 推送到github 完成================git-push end=====@echo.@echo.pause@echo 当前路径%cd%pause @echo 切换到public目录下cd c:\\hexo-source\\public -- 可以在这里试试相对路径：cd public@echo 当前路径%cd%pausegit add .@echo git add . 添加文档完成@echo.@echo 正在进行提交，请稍后git commit -m &quot;udpate&quot;@echo git commit 完成@echo.git push origin @ 推送到lsgxs2019.github.io 完成@echo.pause","link":"/2022/10/23/%E5%9C%A8git-bash%E4%B8%8B%E8%BF%90%E8%A1%8C%E6%89%B9%E5%A4%84%E7%90%86%E6%8E%A8%E9%80%81%E5%8D%9A%E5%AE%A2%E5%88%B0github%E2%80%9C/"},{"title":"在github上保存tiddlywiki","text":"如何将tiddlywiki的笔记自动保存在githtub上github为用户提供了免费的github pages服务，可以将生成的静态网站发布到github pages，通过浏览器访问静态网页，这是当前静态博客的流行做法。同样，可以将tiddlywiki的笔记发布到github pages上，并且通过github开放的api接口实现部分的编程功能，比如通过personal access token来访问github，实现笔记的自动保存。下面是在github里生成personal access token，并在tiddlywiki里配置实现在github里自动保存笔记： 注册github的账号 在账号的操作界面右上角点击+号弹出下拉菜单，选择并点击settings菜单项。 在操作界面的左边栏底部点击developer settings 点击personal access tokens，选择生成personal access token 输入token的描述信息、过期时间、访问权限后生成该token 在线打开TiddlywWiki笔记的Control Panel，选择Save标签，选择GitHub Saver,设置下面几项： UserName:你的GitHub账号 Tokern :在GitHub中生成的token复制到这里即可Target repository：Username/FullNameOfRepositoryTarget branch for savingmainPath to target file ：如果index.html放在main分支下的话，这个路径就不必设置了。如果把index.html放置再其他的自定义目录，这里需要设置。这里不必设置Filename of target file :index.htmlServer API URL:https://api.github.com 目前系统默认为GitHub提供的网址，不必自行设置。","link":"/2022/07/02/%E5%9C%A8github%E4%B8%8A%E4%BF%9D%E5%AD%98tiddlywiki/"},{"title":"在github中新建一个仓库","text":"在github中新建一个仓库（空仓） 如何创建一个空的仓库 在仓库的基本信息区只输入username.github.io即可，选择不添加readme.md文件，确认后就建立一个空的仓库，完成之后，系统显示如何使用git 命令来快速设置和这个仓库关联。 从上图可以看出，共有四种方法操作新建的这个空仓库 可以在github上新建文件或者上传文件，但还是通过下面两种方法通过实现git与github通讯更方便 create a new repository on the command line(这种方法实际上就是在本地新建一个目，添加文件，纳入.git管理，然后再关联github仓库) push an existing repository from the command line（这个是已经纳入.git管理的本地目录，直接建立链接推送的指定的github仓库） import code from aother repository …or create a new repository on the command line a new repository on the command line12345678910echo &quot;# lsgxs.github.io&quot; &gt;&gt; README.mdgit initgit add README.mdgit commit -m &quot;first commit&quot;git branch -M maingit remote add origin https://github.com/username/username.github.io.gitgit push -u origin main本地新建立的目录、关联一个新建的空的仓库的方法经过测试，这个写法也可以实现同样的效果： git push orign master:main 这的master是因为git版本的问题，新建的分支默认为master，可以使用git branch -M mian 把当前分支改名为main 。如果不想修改的话，写好本地分支链接远程分支的两个参数也可以，比如：git push origin master:main ,这样的写法甚至连-u参数也不用带同样可以正确推送，但是加上git push 加上-u参数可以一次那个设置好上游链接的分支，以后再使用git push就不用指定了。也就是说，git push中，通过origin指定了目标仓库，通过source:main指定本地分支链接和远程分支的链接关系，就可以完整推送到远程的仓库分支。 …or push an existing repository from the command line an existing repository from the command line12345git remote add origin https://github.com/username/username.github.io.gitgit branch -M maingit push -u origin main把现有的本地项目推送到新建的空的仓库的方法 如何删除一个仓库 登录github之后打开这个仓库，点击这个仓库的settings 在窗口的最下部区域选择删除这个仓库 根据系统提示确认之后就可以删除这个仓库的所有内容 操作一个已经包含项目文件的github仓库git clone到本地就可以","link":"/2022/07/14/%E5%9C%A8github%E4%B8%AD%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%BB%93%E5%BA%93/"},{"title":"在html文件中包含pdf文件","text":"如何在html文件中包含PDF文档1234567&lt;object data=&quot;pdfname.pdf&quot; type=&quot;application/pdf&quot; width=&quot;1000&quot; height=&quot;1500&quot;&gt; &lt;p&gt; 如果没有PDF相关的插件， 可以下载这个PDF文档 &lt;a href=&quot;pdfname.pdf&quot;&gt; download the PDF file. &lt;/a&gt; &lt;/p&gt;&lt;/object&gt; 这里的pdf文件和html文件在同一个目录下，可以直接书写pdf的文件名，可以通过浏览器下载pdf文件到本地。","link":"/2022/08/01/%E5%9C%A8html%E6%96%87%E4%BB%B6%E4%B8%AD%E5%8C%85%E5%90%ABpdf%E6%96%87%E4%BB%B6/"},{"title":"在tiddlywiki中如何快速新建子tiddler","text":"如何快速建立下一层级的tiddler 第一种方法是利用tiddlywiki自带的工具栏，create a new tiddler tagged with this one 。如下图所示： 这个方法会自动新建一个tiddler，并且把当前tiddler的title的内容作为新建的tiddler的tag,这样两个tiddler就建立了tagged的关系，包容和被包容的关系，或者叫做目录、层级、父子tiddler等类似的的关系。 第二种方法就是手动编辑tiddler的tag属性，可以遵循把一个tiddler的title作为另外一个tiddler的tag属性的原则，就实现了类似的结构，tagged 。 有了这个方法，那现在要个多个tiddler重新建一个父类的tiddler，如何实现呢？很简单，把这几个tiddler都加上同一个tag,然后新建一个tiddler，保持这个新建的tiddler的tittle和那几个子tiddler的tag相同就实现包含与被包含的关系。 一句话，是通父类tiddler的title和子类tiddler的tag一致来实现链接的，递归延伸，无限扩容。 建立了若干个子tiddler，那如何在父类的tiddler中显示出来呢? &lt;&lt;list-links “[tag[tagname]sort[title]]”&gt;&gt; 这个tagname就是所有拥有tagname作为tag的tiddler，可以一次吧所有的tiddler过滤并显示出来，当然上面这一串文本也可以不用记忆，tiddlywiki的编辑工具栏上提供了这个预制的模版，点击那个图章按钮就可以生成显示的模版，然后再修改那个tagname为自己显示的tag即可。 如果把多个tiddler直接添加在tiddlywiki右侧面板的目录树中呢? 在建立好面板右侧的目录树之后，根据需要设置好tiddler的tag属性为上级tiddler的title就可以实现目录和子目录结构的tagging 也就是说，在tiddlywiki中，这种tagging方式可以有多种形式来显示，可以单独通过&lt;&lt;list-lingks “[tag[tagnmae]sort[title]]”&gt;&gt;显示下一个tiddler里，也可以以目录树的形式显示。 如果忘记了这种tagging技术的的组织和显示方式，可以打开某一个tiddler并处于编辑状态，查看源代码的书写方式。 1一句话：把父目录的tittle作为子目录的tag就创建了目录树；或者说把一个tiddler的tittle作为其他tiddler的tag就建立了包容关系。实际上tiddlywiki的工具栏上有一个按钮，创建子tiddler这个按钮，按下这个按钮之后，就会以当前的tiddler作为模版，把这个tiddler的tittle赋值到系建立的tiddlyer的tag，如此就形成了包容关系","link":"/2022/07/03/%E5%9C%A8tiddlywiki%E4%B8%AD%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%96%B0%E5%BB%BA%E5%AD%90tiddler/"},{"title":"在一台电脑上用git管理多个github账号","text":"在一台电脑上使用git 管理多个github账号一、取消全局配置 如果想在一台电脑上使用多个 GitHub 账号，如果使用全局配置的话，那么每次使用 git 命令时都会使用这个全局的用户名和邮箱，就没有办法区分不同的 GitHub 账号了，因此这里取消全局配置。在刚开始安装git并配置ssh时，大部分都使用过下面这两条语句： git conig --global user.name “yourusername” git config --global user.email “your mailbox” 其实也可以使用git config –list 来显示当前的全局参数列表，如果发现有自己用的github用户,就说明以前配置的参数是全局的，现在使用下面两条语句取消全局配置： git config --global --unset user.name git config --global --unset user.email 使用ssh-keygen 生成三个github账号对应的密钥 ssh-keygen -t rsa -f id_rsa_hexo ssh-keygen -t rsa -f id_rsa_tiddlywiki ssh-keygen -t rsa -f id_rsa_hugo 这里的-t指定的是rsa加密方式，-f 指定具体的密钥文件名 这三条命令完成后，会产生3对密钥，分别对应自己现在使用的三个github账号 id_rsa_hexo,id_rsa_hexo.pub —-hexo静态站点 lsgxs2019.github.io id_rsa_tiddlywik ,id_rsa_tiddlywiki.pub —-tiddlywiki在线笔记 tiddlywiki2021.github.io id_rsa_hugo,id_rsa_hugo.pub —-hugo 静态站点 lsgxs.github.io 二、生成并添加ssh密钥 添加密钥 首先添加公钥到github的ssh 在git bash 命令窗口下，使用clip &lt; id_rsa_hexo.pub 把公钥的文本输出到粘贴板，然后在windows下建立一个文本文件，粘贴公钥的文本并保存，当然也可以直接登录github，点击右上角的用户图标，选择弹出菜单底部的settings，然后再点击窗口左边的ssh，选择新建ssh，粘贴公钥的文本后选择Add ssh即可。这里依次添加好三个公钥到githbub的ssh。 添加私有密钥。由于现在取消了全局配置，所以需要将私钥加到 ssh 中，这样当用到的时候 ssh 才能够识别出来。 eval $(ssh-agent -s ) 注意这里-s是小写,启动ssh agent ssh-add ~/.ssh/id_rsa_xxxxx ssh-add ~/.ssh/id_rsa_tiddlyxxxxx ssh-add ~/.ssh/id_rsa_yyyyyy 这三条语句是添加在前面生成的三个私钥 三、创建config 使用touch config可以在~/.ssh目录下创建config，使用文本编辑打开，输入下面的内容： 12345678910111213141516#firstHost hexoHostName github.comUser ls_abcdefgIdentityFile ~/.ssh/id_rsa_xxxx# secondHost tiddlywikiHostName github.comUser tiddlywiki2021IdentityFile ~/.ssh/id_rsa_tiddlywiki#ThirdHost hugoHostName github.comUser ls_abceefgIdentityFile ~/.ssh/id_rsa_hugo 这里的总共记录了三个账号对应的信息，其中Host实际上个别名，可以替代ssh协议中git@host：写法的主机名称部分。 有了配置文件的设置后，向远程的github仓库添加连接时要使用主机别名的方式，比如 1git remote add origin git@hugo:username/username.github.io.git config编辑完成后，可以使用 ssh -T git@hexo ssh -T git@tiddlywiki ssh -T git@hugo 三条语句分别测试一下，出现You’ve successfully authenticated,……的字样就说明配置成功。 四、从远程仓库clone仓库并配置本地项目 1234git clone git@hexo:username/username.github.io.git git clone git@tiddlywiki:username/username.github.io.git git clone git@hugo:username/username.github.io.git 进入到本地项目的目录，修改本地仓库的用户名和邮箱cd username.github.io 在git bash 命令窗口下执行下面两条命令： git config user.name username git config user.email yourmailbox 这个git config 是用户级别的配置，非全局配置 到这里就算成功了，可以新增加一下文件，然后正常的提交： git add . git commit -m “注释” git push origin 在本地删除项目的目录之后，再次使用git clone git@hexo下载项目到本地之后，需要再次使用下面两条语句设置用户信息： git config user.name lsxxxxx git config user.email xxxxx@xxx 否则在git commit -m “xxxx”时会提示不能识别的用户： 通过以上流程，可以实现在一台电脑上使用git 管理多个github账号。如果在单位也要同步实现同样的功能，按照上面的流程走 ssh-keygen -t rsa 分别生成多个账户对那个的密钥对，文件名保持和家里的.ssh/目录下的文件名相同，然后复制家里的密钥文件，覆盖刚刚生成的密钥文件 eval $(ssh-agent -s)启动代理，使用ssh-add分别添加私钥到本地，公钥文件就不再添加到github账号的ssh，否则公钥文件内容就不一致了。 ssh -T git@hexo ssh -T git@tiddlywiki ssh -T git@hugo （装好node.js和git，使用ssh-keygen生成密钥文件之后，如果在当前windows用户目录下没有.ssh文件夹，估计是安装windows时的用户权限不足，不能在用户目录下创建.ssh目录目前没有实践找出好办法，只能重新安装windows（实在不方便就之只能先开启Windows的Hyper-V建立个虚拟机，在虚拟机里做）。试着获取用户目录所有权和完全控制权也没结果，不知到为何）","link":"/2022/07/05/%E5%9C%A8%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E4%B8%8A%E7%94%A8git%E7%AE%A1%E7%90%86%E5%A4%9A%E4%B8%AAgithub%E8%B4%A6%E5%8F%B7/"},{"title":"在不同经济发展阶段合理配置资产负债表","text":"不同经费发展阶段合理配置资产负债表 资产 = 所有者权益 + 负债 经济发展的周期一般分为复苏、繁荣、衰退、萧条四个阶段，个人理解神甚至耦合与四季的春夏秋冬，所以要客观的角度看待衰退和萧条，你会怎样对待秋、冬两个季节呢？衰退和萧条是为下一个复苏和繁荣做准备。 从一个国家、企业到普通的家庭、个人，都面临一个资产配置的话题。先从个人说起，如何做好自己和家庭的资产负债表规划呢？所有者权益这里可以简单的理解为个人现金流，负债就是个人的融资部分。 复苏阶段首先看这个阶段的货币政策。政府开始逐渐使用宽松的货币政策，向市场提供低利率的货币贷款。经过萧条阶段的产能出清，部分企业倒闭破产，具有竞争优势的企业活了下来，逐渐开始恢复生产、部分的扩大产能，就业市场也逐渐好了起来，居民有了工资，消费也在慢慢复苏。资本市场一般是提前反映经济发展的预期，此时预期是向好，慢慢开始震荡上扬。当然，这个复苏的过程不是一蹴而就的，少则1到3年，多则5年，因此合理的资产配置应该是采取定投的方式购买优质资产，对于个人来说，比如上证50、沪深300的指数级别的ETF。也就是说在漫长的震荡筑底阶段，最好是拉长周期定投优质股权。当然，这需要你在衰退和萧条阶段储备了一定的现金流，此时中间把部分现金转化为资产，比如优质的股权。此时的负债部分不适合增加，因为负债的目的是为了获取收益，不能获取收益的负债就是劣质的负债，而此时的投资收益有限，负债的利息可能会大于收益，因此不适合在这个阶段增加负债。这里说的负债是主动的优质的负债，是为了获取投资收益而产生的负债。如果是衰退和萧条时期的被动的负债，只能慢慢先还债，只有等现金流为正时才能慢慢变现资产。 繁荣阶段 在经过复苏阶段的运转，经济逐渐恢复了活力，宏观经济方面，宽松货币政策和积极的财政政策，广义货币M2和社融数据都在正向攀升，反映出企业投资收益不错，企业愿意获得贷款去投资，去扩大产能或者在新的领域创新发展，消费市场也处于升级极端，居民看好未来的发展，敢于消费，甚至敢于借钱、提前消费，整个经济表现为适度的通货膨胀状态，一切看起来都那么的美好。此时的主要的几个市场，如房地产、股市等表现良好，资产价格在超凡货币的状态下大幅开始上涨。此时应该积极主动的拥抱大趋势，把现金变为资产，甚至可以适度负债，购买核心的资产。什么最稀缺，什么就是市场上最好的资产。这个阶段里，你的资产配置表里，现金是占3成，负债占7成，当然这样根据自己的风险偏好来配置资产，配置好现金和负债的比例。首先要做好防守，然后才能大胆进攻。整个社会的经济处于欣欣向荣的景象，在资本市场上，人人都想贷款入市，恨不得每天都有涨停板。房地产市场，房价持续上涨，人人都认为房价会继续上涨，贷款买房等待上涨。 衰退阶段 进过上一阶段的繁荣发展，整个社会的负债规模大幅攀升，从企业到个人，机会把未来10年的收入的变现了，变成了当下的负债，尤其是房地产，花光了两代人的钱包。慢慢的房子有价无市，居民也无法再进行提前消费了。一句话，一切都涨不动了，股市出现了大级别的顶背离。这个阶段要及时负债购买的把资产变现，现金为7成，负债为3成。此时整个经济处于滞涨状态，商品价格上涨，GDP增速下降。 萧条阶段 居民负债过多，没有再消费的能力，只能进行维持基本生活的开支。企业产能过剩，产品积压，负债过多。如果此时美国进行加息回收货币流动性，就会出现资产价格大幅下跌。如果没有及时把负债的资产变现的话，就会出现资产负债表的破产，因为资产价格大跌，而银行并不会降低你的负债，对于企业来讲，就是技术性破产，个人会出现房地产断供潮等现象。这个阶段要积累现金，不负债，如果有负债的话，要用现金流支付负债。准备好现金，在最坏的阶段分批购买优质资产。","link":"/2022/09/05/%E5%9C%A8%E4%B8%8D%E5%90%8C%E7%BB%8F%E6%B5%8E%E5%8F%91%E5%B1%95%E9%98%B6%E6%AE%B5%E5%90%88%E7%90%86%E9%85%8D%E7%BD%AE%E8%B5%84%E4%BA%A7%E8%B4%9F%E5%80%BA%E8%A1%A8/"},{"title":"如何查看二手车的真实里程","text":"如果想入手一款喜欢的二手车，除了外观、漆面、钣金件、发动机舱等多个环节的查验外，还可以查看一下真实的行驶里程。那么如何查看呢？一般有以下两种方法： 内饰的磨损度 方向盘 门板 仪表盘 使用解码器读取变速箱的电脑数据 一般里程大一点的车子，车主销售之前会到修车店修改仪表的行驶里程，但是这个方法无法改变变速箱的电脑数据，除非更换了变速箱的电脑板子，一般的车子是 不会的。所以这种方法可以参考：用解码器读取变速箱电控数据，可以看到真实的行驶公里数，除非更换了变速箱的电脑板子。 如果想要入手二手车，需要主义一下几个问题 123451.不要分期付款。二手车注重的性价比，超过8万以上的二手车性价比低。2.要看同款车子的新车指导价。3.如果要买二手豪车，要原车主的名下再买一次保险，然后过户到自己的名下，否则在过户后买保险就会是新车的价格，非常不划算。这点只是记录这个知识点，购买二手的豪车对于本人来说是永远不存在的，新的豪车买不起，二手豪车更不会买，为什么要买二手豪车呢？可能你买得起修不起，那玩意本来就是个套路。如果想体验豪车，推荐去租赁体验^-^。4.尽量购买自然吸气的发动机，尤其是公里数大的发动机。自然吸气的发动机省心、耐用、好维护。","link":"/2022/04/05/%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8B%E4%BA%8C%E6%89%8B%E8%BD%A6%E7%9A%84%E7%9C%9F%E5%AE%9E%E9%87%8C%E7%A8%8B/"},{"title":"如何用javascript获取和操作HTML中的的DOM对象","text":"如何在javascript操作HTML文件中的DOM对象还没有系统学习DOM对象模型，但是看到示例代码，可以学到一般的对HTML文件中的DOM对象操作的基本方法： 1234&lt;button&gt;Start machine&lt;/button&gt;&lt;p&gt;The machine is stopped.&lt;/p&gt;//这些标签就可以构建标准的DOM对象，这些对象都有相应的属性、方法和事件，是不是和面向对象编程的概念有点像，暂时先这样理解，也许有偏颇。 123456789101112131415const btn = document.querySelector('button'); //用一个btn的常量来指向button的元素。这个document.querySelector('')就是常用的获取元素的方法const txt = document.querySelector('p'); //用一个txt的常量来指向P元素btn.addEventListener('click', updateBtn); //给btn指向的button元素添加一个相应click事件的方法updateBtnfunction updateBtn() { if (btn.textContent === 'Start machine') { btn.textContent = 'Stop machine'; txt.textContent = 'The machine has started!'; } else { btn.textContent = 'Start machine'; txt.textContent = 'The machine is stopped.'; }}","link":"/2022/08/27/%E5%A6%82%E4%BD%95%E7%94%A8javascript%E8%8E%B7%E5%8F%96%E5%92%8C%E6%93%8D%E4%BD%9CHTML%E4%B8%AD%E7%9A%84%E7%9A%84DOM%E5%AF%B9%E8%B1%A1/"},{"title":"如何通过dns查询到目标网页","text":"域名的层次结构 以www.example.com为例子说明域名的层级结构。其中的.com部分叫做顶级域名(top-level domain)，.example部分为次级域名，www为主机部分。实际上在顶级域名之上还有一个层级叫做根域名root，因为完整的域名应该如下图所示： 1234主机.次级域名.顶级域名.根域名hostname.sld.tld.rootwww.example.www.root 现有的根域名，是由一个叫做 ICANN （Internet Corporation for Assigned Names and Numbers）的组织管理，总部在美国。 123456789101112131415 这个组织维护这13个根域名列表。早期的 DNS 查询结果是一个512字节的 UDP 数据包。这个包最多可以容纳13个服务器的地址，因此就规定全世界有13个根域名服务器，编号从a.root-servers.net一直到m.root-servers.net。这13台根域名服务器由12个组织独立运营。其中，Verisign 公司管理两台根域名服务器：A 和 J。每家公司为了保证根域名服务器的可用性，会部署多个节点，比如单单 Verisign 一家公司就部署了104台根域名服务器（2016年1月数据）。所以，根域名服务器其实[不止13台](https://www.icann.org/news/blog/there-are-not-13-root-servers)。据统计，截止2016年1月，全世界共有 517 台根域名服务器。你可以在 http://root-servers.org 这个网站查到所有根域名服务器的信息。根域名服务器虽然有域名，但是最少必须知道一台的 IP 地址，否则就会陷入循环查询。一般来说，本机都保存一份根域名服务器的 IP 地址的缓存，叫做 [name.cache](https://www.internic.net/zones/named.cache) 文件 由于根域名是固定的，因此，在日常的域名书写中省去了根域名部分：www.example.www* 域名是如何查询的 根据域名的层级结构特性，在本地dns服务区默认保存根域名服务器的地址，从根域名开始，采用自上而下的分层查询方法，逐级查询最终得到目标网页。 ```markdown 查询根域名列表，得到顶级域名服务器的NS记录和A记录 (ip地址) 查询顶级域名服务器，得到次级域名服务器的NS记录和A记录 (ip地址) 查询次级域名服务器地址，得到最终主机的Ip地址 每个层级域名都有自己的NS记录，这些记录指向本级的域名服务器，本级的域名服务器保存着下一级域名的NS记录，如此，就形成了一个链表式的查询路径。 层级域名 -&gt; 本级NS记录-&gt;本级域名服务器-&gt;下一级域名的NS记录-&gt;本级域名服务器","link":"/2021/05/24/%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87dns%E6%9F%A5%E8%AF%A2%E5%88%B0%E7%9B%AE%E6%A0%87%E7%BD%91%E9%A1%B5/"},{"title":"守好自己的能量","text":"五音令人耳聋，无色令人眼盲。这个道理值得是外界的声色犬马对自身能量的消耗。人类的是通过五官来吸收自然界提供的能量，滋养我们自己的身心。除了大自然给我们的阳光、空气和水这些能量，人类还有一个大脑，是人类智慧的源泉。 可是，在当今信息发达的互联网时代，大量的消息令推送，并不利用我们自己的修身养性。因此，简单说，就是要少看、少听、少说，少想，多多与美丽的大自然待在一起，和自己轻松的待在一起，减少消耗，内心向善，滋养自己的精气神。 顺气自然的走好自己的旅途，一切安好。","link":"/2021/08/04/%E5%AE%88%E5%A5%BD%E8%87%AA%E5%B7%B1%E7%9A%84%E8%83%BD%E9%87%8F/"},{"title":"安装hugo","text":"安装配置hugo1https://gohugo.io/getting-started/installing Assumptions You will use C:\\Hugo\\Sites as the starting point for your new project. You will use C:\\Hugo\\bin to store executable files. Set up Your DirectoriesYou’ll need a place to store the Hugo executable, your content, and the generated Hugo website: Open Windows Explorer. Create a new folder: C:\\Hugo, assuming you want Hugo on your C drive, although this can go anywhere Create a subfolder in the Hugo folder: C:\\Hugo\\bin Create another subfolder in Hugo: C:\\Hugo\\Sites Technical Users Download the latest zipped Hugo executable from Hugo Releases. Extract all contents to your ..\\Hugo\\bin folder. In PowerShell or your preferred CLI, add the hugo.exe executable to your PATH by navigating to C:\\Hugo\\bin (or the location of your hugo.exe file) and use the command set PATH=%PATH%;C:\\Hugo\\bin. If the hugo command does not work after a reboot, you may have to run the command prompt as administrator. Less-technical Users Go to the Hugo Releases page. The latest release is announced on top. Scroll to the bottom of the release announcement to see the downloads. They’re all ZIP files. Find the Windows files near the bottom (they’re in alphabetical order, so Windows is last) – download either the 32-bit or 64-bit file depending on whether you have 32-bit or 64-bit Windows. (If you don’t know, see here.) Move the ZIP file into your C:\\Hugo\\bin folder. Double-click on the ZIP file and extract its contents. Be sure to extract the contents into the same C:\\Hugo\\bin folder – Windows will do this by default unless you tell it to extract somewhere else. You should now have three new files: The hugo executable (hugo.exe), LICENSE, and README.md. Now you need to add Hugo to your Windows PATH settings: For Windows 10 Users: Right click on the Start button. Click on System. Click on Advanced System Settings on the right. Click on the Environment Variables… button on the bottom. In the User variables section, select the row labeled “Path” and click the Edit… button. Click the Browse… button and select the directory to which hugo.exe was extracted, which is C:\\Hugo\\bin if you went by the instructions above. The path entry should be the folder where Hugo lives and not the binary itself. Click OK at every window to exit. For Windows 7 and 8.x users:Windows 7 and 8.1 do not include the easy path editor included in Windows 10, so non-technical users on those platforms are advised to install a free third-party path editor like Windows Environment Variables Editor. Verify the ExecutableRun a few commands to verify that the executable is ready to run, and then build a sample site to get started. 1. Open a Command PromptAt the prompt, type hugo help and press the Enter key. You should see output that starts with: 123456hugo is the main command, used to build your Hugo site.Hugo is a Fast and Flexible Static Site Generatorbuilt with love by spf13 and friends in Go.Complete documentation is available at https://gohugo.io/. If you do, then the installation is complete. If you don’t, double-check the path that you placed the hugo.exe file in and that you typed that path correctly when you added it to your PATH variable. If you’re still not getting the output, search the Hugo discussion forum to see if others have already figured out our problem. If not, add a note—in the “Support” category—and be sure to include your command and the output. At the prompt, change your directory to the Sites directory. 12C:\\Program Files&gt; cd C:\\Hugo\\SitesC:\\Hugo\\Sites&gt; 2. Run the CommandRun the command to generate a new site. I’m using example.com as the name of the site. 1C:\\Hugo\\Sites&gt; hugo new site example.com You should now have a directory at C:\\Hugo\\Sites\\example.com. Change into that directory and list the contents. You should get output similar to the following: 1234567891011121314C:\\Hugo\\Sites&gt; cd example.comC:\\Hugo\\Sites\\example.com&gt; dirDirectory of C:\\hugo\\sites\\example.com04/13/2015 10:44 PM &lt;DIR&gt; .04/13/2015 10:44 PM &lt;DIR&gt; ..04/13/2015 10:44 PM &lt;DIR&gt; archetypes04/13/2015 10:44 PM 83 config.toml04/13/2015 10:44 PM &lt;DIR&gt; content04/13/2015 10:44 PM &lt;DIR&gt; data04/13/2015 10:44 PM &lt;DIR&gt; layouts04/13/2015 10:44 PM &lt;DIR&gt; static 1 File(s) 83 bytes 7 Dir(s) 6,273,331,200 bytes free 简单总结一下 123456789101112hugo version //测试安装结果，这些命令在cmd命令窗口下完成。暂时还没有用到githugo new site quickstart //create a new sitecd quickstart git init git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/anankeecho theme = \\&quot;ananke\\&quot; &gt;&gt; config.toml //或者直接编辑config.toml文件，添加theme = &quot;ananke&quot;即可指定themehugo new posts/my-first-post.md //新建一个markdown文件hugo server -D //start the hugo server，注意这里的字母D要大写http://localhost:1313 //在本地服务器打开你的第一个静态网站 Deploy Your WebsiteAfter running hugo server for local web development, you need to do a final hugo run without the server part of the command to rebuild your site. You may then deploy your site by copying the public/ directory to your production web server. Since Hugo generates a static website, your site can be hosted anywhere using any web server. See Hosting and Deployment for methods for hosting and automating deployments contributed by the Hugo community. Running hugo does not remove generated files before building. This means that you should delete your public/ directory (or the publish directory you specified via flag or configuration file) before running the hugo command. If you do not remove these files, you run the risk of the wrong files (e.g., drafts or future posts) being left in the generated site. Host on GitHub | Hugo (gohugo.io)","link":"/2022/06/28/%E5%AE%89%E8%A3%85hugo/"},{"title":"实现hexo到github的自动推送","text":"实现hexo到github的自动推送博客搭建有一年多了吧，平时记录内容的工具有两个，最初是使用tiddlywiki,通过github的personal access token实现在线自动保存到github。后来接触到hexo，属于当下流行的静态站点生成器，把记录的内容发布到自己熟悉的web服务器上，这里还是选择github。平时记录内容很简单，使用下面几条命令： hexo new “tittle” git add . git commit -m “your commit “ git push origin 很顺利把记录的内容发布到github pages，通过指定的域名浏览自己的博客。感觉很方便，可是时间久了，居然忘记了当时是怎么搭建的这个流程^-^。这里简单回忆一下，再次忘记的时候查看一下。 安装heox需要的环境这里就省略了。搭建好hexo的环境之后，一般是hexo g ,生成静态站点；再使用hexo d，也即是deploy的意思，当然是要在后缀为yml的配置文件中设置好发布的相关参数。 hexo clean （清理以前生成的静态文件） hexo g （重新生成静态站点文件） hexo d （发布站点） 更详细的内容可以参考hexo官方的文档：文档 | Hexo 但是这样操作会比较麻烦，而且这样只会上传public目录下的文件，也就是生成的站点文件，其他的项目目录和文件则不会上传，但是有时候又时候因为更换机器的原因，要重新构建项目的所有目录和文件，比较麻烦，索性就利用git命令把整体的hexo 项目目录上传到单独一个仓库分支，再由github的actions执行上面的三个命令，完成站点文件的生成和发布。 但是利用git命令把hexo 所有目录和文件推送到github的仓库，利用后台设置好的github workflow action 自动调用hexo 生成、发布站点的命令，把静态站点发布到github的pages。这个文件是在hexo 项目的.github\\workflows\\目录下: hexo-actions.yml。 12345678910111213141516171819202122232425262728293031323334353637# workflow namename: CI Hexo Blog Deploy LTS# source branch on push, auto runon: push: branches: - sourcejobs: Deploy-Pages: name: Deploy Hexo Public To Pages runs-on: ubuntu-latest ..... ..... ..... - name: Generate public files run: | hexo clean hexo generate - name: Deploy To Github Pages run: | git clone https://${Github_Pages} .github_pages cd .github_pages git checkout master cd ../ mv .github_pages/.git/ ./public/ cd ./public/ git add . git commit -F ../commit-message.log git push --force --quiet &quot;https://${Github_Token}@${Github_Pages}&quot; master:master 这个只是action的局部代码，可以看出实际上是在github上执行了hexo 的一系列动作： hexo clean hexo generate 最后还是执行了一系列git命令，deploy to github pages,把生成的站点文件推送到github pages下的master 分支，这里的指定的是master分支，也可以自己指定github仓库项目里source branch:","link":"/2022/07/03/%E5%AE%9E%E7%8E%B0hexo%E5%88%B0github%E7%9A%84%E8%87%AA%E5%8A%A8%E6%8E%A8%E9%80%81/"},{"title":"实现财富自由","text":"如何实现财富自由​ 大部分人通过努力学习和实践，实现一个长期年化**10%**的收益率是没有问题的。但是一定要注意，这10%的收益率并不简单，最起码能打败97%以上的人。所以坚持学习和实践，采用科学的方法是必要的。扣除3%的通胀，最多能取出7%，否则你的总资产就会缩水。 ​ 为了给自己留一些安全边际，也为了能让资产还能不断增值，我们最好不要把7%都取出来，可以预留2%，只取5%。这样是有好处的，随着资产不断增值，你每年可以支取的现金还能不断增加，可以不断改善生活。 ​ 如果你总资产的5%能够覆盖你每年的支出，你就实现基本财务自由了。 现在就进行倒着推演。假设你每年花销是10万，那么你至少需要的本金是：10万/5%=200万。 200万多吗？估计很多家庭卖一套房子就实现了。 如果你是一个小年轻，没有房产，其实也并不难。关键就在于努力程度了。 只要有计划地消费，每年能存下5万用于投资，很多人都能在20年内资产达到200万以上。（但是要注意，不能盲目投资，比如花光六个钱包去买房） 如果你还在工作，这200万就不会支取，还可以通过投资继续增值。7年后就变成了400万。到你退休，就1000万左右了。 可以根据自己的消费水平算一算实现基本财务自由所需要的本金。然后制定一个长期的计划去实现它。最终，在你退休的时候，就不会为养老金犯愁了。 不过，要实现财富自由就要难得多了。 二、财务自由不等于财富自由别看一个字的差距，财务和财富两个词的区别是巨大的。一个人想做什么就做什么，这只是自由的第一层，更高一层是，能拒绝做你不想做的事。第二层可比第一层难多了。总的来说，财富自由的人，肯定实现了财务自由，而财务自由的人却不一定财富自由。要实现财务自由，相对简单得多。只要你的收入能覆盖掉你的花销就可以了。 首先，有一个健康的身心，这才是最顶级的财富。 其次，你得有多样化的资产，能够不断创造现金流，既包括有形资产，还包括无形资产。最重要的是自己的大脑，否则没有HOLD住巨额资产的能力，所谓的德要配位就是这个意思。实现最基础的财务自由之后，可以着手多元化的资产配置，让自己始终处于安全的位置。 第三，越过越轻松，不仅可以做自己想做的事，还能拒绝做自己不想做的事；自己的时间还会越来越值钱。 财富自由从来不是说什么都不做，相反，财富自由能给我们更多的选择权，能让我们遵从初心和价值观去做事，活得更加有成就感。或许财富自由是一个永远不能达到的点，但能一直指引我们前进的道路，让我们无限接近它！","link":"/2022/08/19/%E5%AE%9E%E7%8E%B0%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1/"},{"title":"常用软件工具","text":"常用软件工具 U盘工具 rufus ventory 音频、视频、文本转换 网易见外","link":"/2022/08/08/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7%E5%8C%85/"},{"title":"当下的目标清单","text":"为了实现你的投资目标和梦想，首先要检查一下自己的财务状况是否足够健壮。从下面几个要点做起： 减少消费的欲望。打开京东一个平台，居然有那么多的花费，自己都不可思议。原因很简单，有白条支持，花出去的是数字，没有多少感觉。需要买的东西很多。如果实在管不住，卸载手机上这些平台软件。其实，回想一下自己时间消耗在哪里，就明白为什么你花了这么多钱出去。大量的时间在逛平台，总会发现自己喜欢的东西，买起来就会没完没了，总觉还有哪个好东西没买。 卸载时间2021年11月18日，今天为证。如果需要花费，必须记账，问一下自己是否必须的生活 用品。 及时降低杠杆，减少负债比例。","link":"/2021/11/18/%E5%BD%93%E4%B8%8B%E7%9A%84%E7%9B%AE%E6%A0%87%E6%B8%85%E5%8D%95/"},{"title":"心","text":"心中无一物，何处有尘埃 你的思维，你的情绪为你所有，你要负责 外部什么人也没有，其实只有你自己 你的心就你的世界，可容纳万物，可容你的喜怒哀乐。 不必迁怒与外物，与你无关；别人的言行都是别人自己的；与话不投机的人保持陌生状态就好，不必评价。 莲花的出淤泥而不染，实际就是一种物质上的隔绝。 看淡任何的人、事、物。 内心强大，并不是有多厉害，而是不在乎而已，学会不在乎。 思索自己喜欢的兴趣爱好，提高行动力。 在知道自己的理想和目标后，少一些思考，多一些行动，日拱一卒。 保持快乐和嘚瑟 播种美好的念头，结出幸福之花 不必过多思考，活动在当下即可，当你过多思考外物的时候，大脑又开始胡思乱想了。因此，修行就是活在当下，看什么就是什么，做什么就做什么，不必给给身体过多的负担，身体自己就是最好的。 你的身心灵自由最为宝贵。 没有什么是多么重要，放下一切外物。 没有了妄念，你就是最强大的。","link":"/2021/08/26/%E5%BF%83/"},{"title":"快乐从行动开始","text":"快乐从从动开始 首先保持微笑，从微笑开始，给自己一个微笑，哪怕你刚才还没有开始微笑。 拥抱一下自己 找一个最舒服的姿势，让自己全身心的放松 找一个自己最喜欢的方式，比如听音乐、吃一顿最喜欢的美食 保持正念，信任自己，我命由我自己 相信自己可以轻松搞定 我完全接纳和喜欢自己 坚持每天的运动 坚持每天的敲打和按摩","link":"/2021/10/04/%E5%BF%AB%E4%B9%90%E4%BB%8E%E8%A1%8C%E5%8A%A8%E5%BC%80%E5%A7%8B/"},{"title":"快乐的秘诀就是净想好事关注好事并保持行动力","text":"快乐的秘诀就是净想好事、多多关注好事。行动起来，朝着好事的方向而不断努力。别在乎 万物皆为空 外边没有人，其实只有你自己 没有什么成功和失败，谁成功了?谁又失败了？ 没有什么强和弱 就像下棋时，如果没有下一步了，就点击认输，game over，不留痕迹的开始下一个 看淡任何人事物。 增加慈悲心，宽容心当心力在波谷时，静静呆在当下，发自内心的喜悦，并保持积极的行动力；当心力上升时，积极的去思考和完成目标。 不必向外找，为自己的所有承担责任。 凡事降低预期，将会增强人生的幸福和快乐感。","link":"/2021/07/22/%E5%BF%AB%E4%B9%90%E7%9A%84%E7%A7%98%E8%AF%80%E5%B0%B1%E6%98%AF%E5%87%80%E6%83%B3%E5%A5%BD%E4%BA%8B%E5%85%B3%E6%B3%A8%E5%A5%BD%E4%BA%8B%E5%B9%B6%E4%BF%9D%E6%8C%81%E8%A1%8C%E5%8A%A8%E5%8A%9B/"},{"title":"我的投资模式","text":"我的四种投资模式思考 三线开花 三线开花的多种经典模式 自己感悟的三线开花通道 欧奈尔rps选股 杯柄买入法 使用通达信的板块强弱排序(.402)，寻找近期强势的股票和板块，选择正确的买点 陶博士介绍的选对股，买对时机的方法。 选对股 这个方法是基于欧奈尔的理念，在基金持股和北上资金的股票池里，依据rps进行选择强势股；利用指数rps寻找强势的指数，在对应的指数里选择强势股。 买对时机。就是在突破之后的回调买入 价值投资法 寻找业绩优秀的个股，建立组合 这个模式其实可以用来防守 价值投资实际上是最难的一种模式 财务分析、会计知识、估值 行业知识、商业模式 宏观经济 国家的货币政策、财政政策 长期持有的信心和耐心 在持有过程中股价的大幅度回撤 走着走着，公司的成长的逻辑就变了 定投法 定投ETF 定投其他指数(待学习) ​","link":"/2021/08/18/%E6%88%91%E7%9A%84%E6%8A%95%E8%B5%84%E6%A8%A1%E5%BC%8F/"},{"title":"我的选股模式","text":"在基金持股和北上资金买入的股票里选股 k线还在20、120、250三条线之下的状态基本不看，处于空头状态 盘底状态：k线经过长期下跌，终于站上了120日线，此时k线在120日与250日线之间运行。一般依托120日线上涨，到250日线附近重新回落。 启动状态： k线站上250日线。可以开始关注低买的机会，依托250线附近低买。 波段涨幅之后，围绕20日线开展调整。有的调整到120日线附近，形成3、6或者12个月的整理。经过扎实的整理形态，在靠近新高的附近，等待成交量的放大，突破之际买入； 在突破一年新高的股票池里寻找整理形态扎实的股票，回调买入。 在牛市的状态下，专门挑选即将创新高或者刚刚创新高的股票。 每天观察即将创新高的股票池，观察交易时的量比，最好在放量大涨的那天买入，使用杯柄买入法介入（欧奈尔杯柄买入法）。 对于突破后缩量回调构建杯柄时，等再次放量时快速介入。如果错过了杯柄买入点，就在首次回调到10、20、120日线买入 总结一下： 12341、120日线与250线之间打底的股票，低买。2、在250线之上准备启动的股票，低买3、经过一波上涨，经过扎实的回调（回调幅度小与30%），在接近新高的区域，等待成交量放大，在突破之际买入4、执行自己的止损规则，k线低于买入价的10%时卖出股票，保护你的本金。","link":"/2021/09/25/%E6%88%91%E7%9A%84%E9%80%89%E8%82%A1%E6%A8%A1%E5%BC%8F/"},{"title":"手动建立一个仓库的空分支","text":"和github仓库建立链接的最方便的方法是使用git clone命令把github的仓库拉取到本地。当然有时候想单独建立一个独立的分支，最后就相当于一个仓库下面的一个目录来使用，可以保存一些项目之外的资源，就当是网盘了 123456789cd dirname git init git checkout -b branch-nametouch readme.mdgit add .git commit -m &quot;create dependent branch&quot;git remote add origin git@github.com:username/username.github.io.git git push -u origin branch-name:branch-name--可能和下边有重复，将就着看，自己知道就ok 有时候需要自己手动现在本地建立一个git 分支，然后再推送到远程已存在的仓库，方法如下： 12345678910111213141516171819202122在磁盘任意位置新建一个目录 切换到新建的目录下，使用git bash here git init --在当前目录下生成.git目录树，把当前目录纳入版本管理 git checkout --orphan source --使用orphan参数来新建一个没有父节点的分支source，并自动切换到source分支下 echo &quot;create an empty branch &quot; &gt;&gt; readme.md --新建一个简单的说明文件，目的是在当前的branch下完成commit，才能真正创建这个source分支 git add . git commit -m &quot;create a orphan branch,name is source &quot; git remote add origin https://github.com/username.github.io git push -u origin source:source ---把本地新建的branch分支push 到username.github.io仓库下,名字也是source. 打开你的username.github.io仓库，就可以看到刚刚推送的独立分支source，仅仅包含一个readme.md文件根据需要，也可以在本地使用git命令把readme.md文件删除，这样source分支就是真正意义上空分支了。 在当前的.git管理的目录下手动建立新的分支，通过实践发现git checkout -b branch-name之后，有当前分支的内容，需要删除当前分支的内容，然后添加新建的分支需要包含的内容，推送到远程仓库。","link":"/2021/05/25/%E6%89%8B%E5%8A%A8%E5%BB%BA%E7%AB%8B%E4%B8%80%E4%B8%AA%E4%BB%93%E5%BA%93%E7%A9%BA%E5%88%86%E6%94%AF/"},{"title":"手机投屏","text":"如何使用幕享手机投屏 保证手机和pc在同一个无线网络下(通过wifi上网)，把pc和手机都切换到无线网络模式(wlan) 首先打开pc上安装好的幕享（现在iphone12上不用安装幕享的app，只在pc端安装），显示如下： 在手机屏幕（现在使用的iphone12)右上角下拉，显示手机的快捷功能键，点击屏幕镜像按钮，会自动搜索出pc上的幕享，点击搜索到的链接，成功后如下图： 手机和电脑链接成功后就可以在手机上操作视频播放，一般在视屏的右下角有最大化按钮，可以实现全屏播放。由于网络原因会出现卡顿现象。 121、iphone不用在手机端安装app，自带的屏幕镜像功能可以连接到电脑。其他的手机还没有测试如何安装。2、目前测试手机投屏后看直播不够流程，有卡顿现象。可以尝试看看有没有别的方案","link":"/2022/06/15/%E6%89%8B%E6%9C%BA%E6%8A%95%E5%B1%8F/"},{"title":"打印图片去黑底","text":"如何在打印图片时去掉文档的黑底 通过扫描或者手机拍照的图片在打印时会有黑色的底色，有时候需要白底黑字的样式，如何实现呢？有两种方法 使用office中的word，把图片插入word中，选择图片后弹出鼠标右键，选择[设置图片格式]，设置合适的亮度和对比度即可，如下图 使用网上下载的小工具picturecleaner自动去除文档的黑底","link":"/2022/03/09/%E6%89%93%E5%8D%B0%E5%9B%BE%E7%89%87%E5%8E%BB%E9%BB%91%E5%BA%95/"},{"title":"打印驱动卸载","text":"打印机驱动的完全卸载 在控制面板的计算机管理下，在服务列表中停止 print spooler 服务 删除 c:\\windows\\system32\\spool\\printers 目录下的所有文件 重新启动print spooler服务 打开控制面板下面的设备和打印机，选中要删除的打印机，右键弹出快捷菜单，选中删除设备，再选中任意一个设备，点击上方菜单的打印服务器属性，右击选择打印服务器属性——驱动程序——删除，选择删除驱动程序和驱动程序包，点击确定，打印机的驱动程序就完整卸载了。","link":"/2022/04/26/%E6%89%93%E5%8D%B0%E9%A9%B1%E5%8A%A8%E5%8D%B8%E8%BD%BD/"},{"title":"批处理设置IE浏览器可信任站点和ActiveX项目","text":"使用批处理设置IE浏览器安全站点及ActiveX各项参数 首先重置浏览器。 进入业务系统，下载插件，安装高拍仪的驱动。一般会提示带有三个项目（安装、更新、卸载）的安装界面。此时选择卸载。卸载完成后，再安装一次高拍仪的驱动即可 运行批处理设置IE的各项参数 1234567891011121314151617181920212223242526272829303132333435363738REM 添加信任站点ipreg add &quot;HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\Ranges\\Range10&quot; /v &quot;:Range&quot; /t REG_SZ /d x.y.z.1 /freg add &quot;HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\Ranges\\Range10&quot; /v &quot;http&quot; /t REG_DWORD /d 2 /f REM 添加信任站点域名rem reg add &quot;HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\Domains\\xxx.com&quot; /v &quot;http&quot; /t REG_DWORD /d &quot;2&quot; /frem reg add &quot;HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\Domains\\xxx.cn&quot; /v &quot;http&quot; /t REG_DWORD /d &quot;2&quot; /fREM ActiveX的注册表项REM 值 设置 REM ------------------------------ REM 0 我的电脑 REM 1 本地 Intranet 区域 REM 2 受信任的站点区域 REM 3 Internet 区域 REM 4 受限制的站点区域 REM 1001 下载已签名的 ActiveX 控件 REM 1004 下载未签名的 ActiveX 控件 REM 1200 运行 ActiveX 控件和插件 REM 1201 对没有标记为安全的 ActiveX 控件进行初始化和脚本运行 REM 1405 对标记为可安全执行脚本的 ActiveX 控件执行脚本 REM 2201 ActiveX 控件自动提示reg add &quot;HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\2&quot; /v &quot;1001&quot; /t REG_DWORD /d 0 /freg add &quot;HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\2&quot; /v &quot;1004&quot; /t REG_DWORD /d 0 /freg add &quot;HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\2&quot; /v &quot;1200&quot; /t REG_DWORD /d 0 /freg add &quot;HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\2&quot; /v &quot;1201&quot; /t REG_DWORD /d 0 /freg add &quot;HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\2&quot; /v &quot;1405&quot; /t REG_DWORD /d 0 /freg add &quot;HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\2&quot; /v &quot;2201&quot; /t REG_DWORD /d 0 /freg add &quot;HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\2\\ /v &quot;120B&quot; /t REG_DWORD /d 0 /fREM 弹出窗口阻止程序的注册表项 REM WshShell.RegWrite(&quot;HKCU\\\\Software\\\\Microsoft\\\\Internet Explorer\\\\New Windows\\\\PopupMgr&quot;,&quot;no&quot;);reg add &quot;HKCU\\Software\\Microsoft\\Internet Explorer\\New Windows&quot; /v &quot;PopupMgr&quot; /t REG_SZ /d no /f 因IE浏览器只能受理少数几笔业务就会卡机，更换为360浏览器可以正常受理，如果出现浏览器异常错误信息的话，设置360浏览器的退出清除项目，及时清理浏览记录，释放缓存。","link":"/2021/07/21/%E6%89%B9%E5%A4%84%E7%90%86%E8%AE%BE%E7%BD%AEIE%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8F%AF%E4%BF%A1%E4%BB%BB%E7%AB%99%E7%82%B9%E5%92%8CActiveX%E9%A1%B9%E7%9B%AE/"},{"title":"投资与投机","text":"关于投资 从国家宏观政策导向出发，分析行业发展空间，以股东的角色来分析公司的估值，以合理的价格买入标来获取回报 如果你买入的标的价格下跌，如果你是喜欢的，从这个角度上看是在投资 关于投机 不了解公司所属行业、主营业务、财务结构、盈利模式、成长空间等要素，直接看k线图来决定买卖的就是投机，或者叫做趋势投资。 当你买入的股票发生下跌后，一旦价格跌破你能承受的范围之内，不知道发生了什么，想快速卖出的就是投机 投资与投机是两种不同的行为，无所谓好坏，但是你要知道自己在做什么。投机的话，不能投入权重过大的资金入市，否则后果自负(^-^)","link":"/2021/10/05/%E6%8A%95%E8%B5%84%E4%B8%8E%E6%8A%95%E6%9C%BA/"},{"title":"投资感悟2022","text":"关于投资的理念(2022年初) 平时要做好现金流的储备，在最困难的时候购买优质企业的股权，长周期持有，大波段操作。在估值已经兑现未来利润的时候卖出，正确把成本降到很低的价格，甚至可以做到0成本或者负值。 买在无人问津时，卖在人声鼎沸时。这也许就是《邓普顿教你逆向投资》一书的精华。 关于投资回报的预期 如果你的预期投资回报收益在6%左右，可以选择固收+或者债券型基金 如果预期收益率设定在8%-15%，宽基指数是不错的选择 如果你的预期收益率大于20%，那么就只能去投资股票了，安全起见，可以选择朝阳行业里多个行业的不同优质股票，建立投资组合，长期持有，大波段操作 关于估值和财务指标 低估值和高股息率相辅相成，低估往往意味着高息。在此基础上，关注企业的ROE和自由现金流这两个指标，企业长期优良的ROE往往代表企业发展经营稳定、盈利能力强，而自由现金流可以验证企业是否真正赚到钱了，比如有的企业，ROE和利润表现都不错，但仔细一看自由现金流为负，再一看每年都大规模投入了资金更新、维修设备，这样的企业商业模式是较差的。按照这样的选股思路筛选个股，最后剩下的符合标准的公司其实已经不多了，此刻只需要耐心等待“击球”机会即可。另外长期稳定的派息记录也能帮助你有效避开垃圾股和伪成长股。 市值 = 估值 * 净利润 根据企业的净利润增长率，计算未来几年的利润，再根据增长率对应的估值区间，就可以计算出未来几年的大体市值，比较当前的市值，基本可以确定是否又盈利空间。 ​","link":"/2022/01/24/%E6%8A%95%E8%B5%84%E6%84%9F%E6%82%9F2022/"},{"title":"投资的几种方式","text":"1、价值投资 研究行业发展空间，寻找有竞争优势的行业内企业，分析企业的商业模式，通过估值和预测企业的利润来决定投资的方法。这个是接近与资本市场的本质的方法，在分析公司价值的基础上，利用市场的波动低估买入和高估值卖出，长期持有投资逻辑不变且有稳定增长的公司股票。在股价大幅度回撤时，你是否敢于持有和买入？既然发现了金子，在低估的时候加仓是更好的策略。如果公司的成长逻辑不在了，就需要及时的进行交易，因为没有永续的好公司，时代发展有周期，好公司不过是顺应了时代发展的潮流而已，万物皆有周期。 ​ 在符合国家政策支持的行业里选择，也就是所谓的选好赛道，比如目前的大消费、科技、大健康概念（比如户外运动、医美）。在好的赛道里选择好的公司，选择有市场前景、高成长的，未来有走向垄断趋势的公司，并且要把资金分散在不同的赛道，组建自己的价值投资组合，用来抵御风险。 你对自己持有的公司理解有多深，相信他的长远价值吗？买股票就是买公司。你相信股票的长远走势是有公司内在的价值决定的吗？（短期是投票机，长期是称重机）。你购买的价格是否合理？（公司的价值等于未来现金流的折现值总和）。只有这几个核心问题都明白了，才能真正做到心中有数，核心问题没有高明白，其他的东西研究再多，也经不起涨跌的考验，因为人性造成的股市非理性程度，永远都会超出你的想象。 2、趋势投资 根据交易系统中显示的量价关系来决定交易方法。这种方法类似于游击战，具有机动灵活的特点，入场交易之前做好计划，以趋势为交易的根本，遵循减少亏损让利润奔跑的原则，采取小幅度回撤止损和大幅度盈利的方法，用概率实现短期的盈利。 3、量化投资 依据统计学的方法，筛选出反映优质企业的关键数据，通过建立数学模型，用计算机程序来实现自动化交易的方法 4、基金定投 通过时间的跨度来分散价格波动的风险，并且可以做到与具体股票无关的投资方法。 总结一下： 1234561.短线交易。新手可以通过小量的自有资金入市，通过短线交易来认识市场，什么是市场，什么交易，什么是股票。2.趋势交易。经过一定时间的经验积累，你会发现短线交易的亏损概率增大，而且人也很累。可以体会一下趋势交易，也就是中线的波段交易，比如一年四季中的春夏两季做个波段的持有，秋冬季节的观望或者慢慢布局。3.价值投资。这个阶段实际上最难上升的过程，在掌握了短线、趋势交易的基础上，开始从企业家的角度来审视这个市场。在宏观方面包括宏观经济调控，国家货币政策走向，整个国家战略规划的主要趋势；微观方面涉及到一个行业的空间、公司的竞争格局、公司的商业模式。4.以上三种方法既可以独立使用，实际上也是经常结合使用的。另外还有一个重要的要素：时间周期，做投资时也要根据短期、中期、长期的趋势来选择合适的时机。5.对于一个人一生的发展来说，短期看运气，中期看能力、机遇和趋势，长期还是看人品6.在任何时候，都要保持现金、固收收益资产、权益类资产的合理比例，保持财富健康是首要的前提。","link":"/2022/03/08/%E6%8A%95%E8%B5%84%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/"},{"title":"效率人生读书笔记","text":"这个世界你需要从改变、提升自己开始 每个人的三观起始于家教，即使一家人，有可能认知依然不同，保持和而不同，不必去试图说服对方。 你是什么样的人，你的孩子也会成为什么样的人 一个人从父母亲哪里继承到了两种基因：生理基因和社会基因。社会基因可以包括家教、价值观、父母的情绪、家庭的财富 要潜移默化的做孩子的榜样,从父母亲的自身做起 人生的每个阶段应该怎样获取财富 无财作力、少有斗智、既饶争时、此其大经也 理解资产与负债的区别是理财进阶的第一步 从你的工作中积累少许的资金 积累现金的目的就是要通过杠杆的手段获取优质资产，而不是把现金存储在银行里，这样的现金其实是你的负债，因为他在不断的贬值。 经济周期的主角实际是债务周期","link":"/2021/09/07/%E6%95%88%E7%8E%87%E4%BA%BA%E7%94%9F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"},{"title":"文字转音频","text":"如何把文本转换成音频 应用需求。有的场景需要把文本制作成音频，现有的软件大部分都是收费的，免费的工具制作的音频效果不佳。在网上搜索，发现了windows10的edge浏览器提供的朗读网页文本的功能，于是就产生了另外一种音频制作方法，那就是先打开windows自带的录音机，然后让edge朗读网页中的文本，完成录音后生成的音频文件是.m4a格式，可以使用转换工具转成需要的音频文件格式。 使用到的工具 edge浏览器 windows自带的录音机 制作音频的方法 首先使用记事本编辑器手动编辑一个html文件的基本框架，把需要转换为音频的文本复制粘贴到html文件的区，可以使用 包含文本内，最后把文件保存为.html文件。如下图： 1234567&lt;html&gt;&lt;body&gt; &lt;h1&gt; 文章标题内容 &lt;/h1&gt; &lt;p&gt; 文章内容 &lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 先打开windows10自带的录音机，然后在使用edge打开这个.html文件。 在录音机中新建录音，然后切换到edge浏览器中打开的文本，全部选中需要朗读的文本，弹出鼠标右键并选中朗读选中的文本菜单项就可以开始朗读。 朗读完成后停止录音，生成的录音文件一般默认为.m4a，可以根据需要把.m4a转换成mp3常用的音频格式文件，转换工具可以使用万兴喵影、格式工厂等。 备注：朗读之前可以设定微软的提供的不同声音；因为录音机是提前于朗诵打开的，所有录音前边会有几秒钟的静音。","link":"/2022/03/03/%E6%96%87%E5%AD%97%E8%BD%AC%E9%9F%B3%E9%A2%91/"},{"title":"普通投资者的选择","text":"普通投资者的选择在变幻莫测的资本市场上生存，需要对宏观经济的理解和把控，需要对微观经济的具体研究；需要对国家宏观调控的解读，需要对金融市场的深入理解，需要对货币政策的学习和研究，需要对行业知识的前瞻性预判，需要对具体公司经营管理和主营业务详细研读；需要财务知识的灵活运用，否则连个财报都不懂，需要了解估值等艺术性的指标，需要研读上市公司年报的筛选和阅读，而这一切功课做下来，发现还是亏损不断，更不要说你只懂得几个类似均线和技术指标，想持续盈利根本没有可能。可是广大散户朋友依然趋之若鹜，乐此不疲，为个啥子呢？很简单，就是因为相信自己是那盈利的10%里边的人^-^，其实是一直在市场上赌博，而自己打着价值投资的旗号在坚持。 那么，普通投资者的机会在哪里？ 一、指数化投资 从长期来看，股市的趋势确定是向上的，而短期的走势无法判断，所以最好的选择就是挑选好的指数基金长期定投。市场上的指数也有几千个，简单关注下面几个主要指数： 大盘的上证50 中盘的沪深300 和 中证500 小盘的中证1000 标普500 各种行业ETF 可以配置对应指数各种ETF，定投长期持有，大波段交易（以5年、7年为周期交易） 二、价值投资组合配置 价值投资的难度最大，要求的知识面宽，门槛高，如何能挑选的好的标的，并且按照合理的逻辑长期坚持，这就非常不容易。专业人士靠价值投资长期取得稳定的高收益也是凤毛麟角，更何况普通的投资者。能挑选到几个优质的股票，做个不同行业的组合配置，大仓位长期持有，小仓位做波段降低成本，长期持有才有可能盈利。 三、短线的趋势的博弈 这种方法不是不可以，只是要控制好仓位，根据自己的实际情况适当小仓位参与，设定好目标，执行好计划就可以参与。切记，不可以大仓位参与短线博弈。","link":"/2022/07/25/%E6%99%AE%E9%80%9A%E6%8A%95%E8%B5%84%E8%80%85%E7%9A%84%E9%80%89%E6%8B%A9/"},{"title":"智慧树","text":"当你正在做你喜欢做的事情时，就是你的本真，你就是在当下，在喜悦中，你喜欢她，她也喜欢你；人为何会迷茫，就是因为在做着自己不喜欢的事情，又没有新的目标。解决办法就是行动起来，去寻找自己喜欢的的事情，不断去追寻，坚持着朝着你的目标出发。 强者易损，弱者长存 过于强势容易被折断，如流水一般的柔弱才能长久。 在投资市场也同样遵循这个法则，弱者长存。 人生需要改变的时候，需要一个勇敢的决定，合适的目标，最后就是朝着目标一直向前，坚持着向前。 这辈子，你需要做的就是爱自己，相信自己，在任何时候，任何地点，然后开始自己的人生旅途。 我是健康的，我是富足的，我是安全的，我是幸福的，我是快乐的，我是宽容的，我是自信的，我是平静的，保持正能量。 感恩你所经历的人、事、物，用宽容接纳，用爱给自己。","link":"/2021/09/07/%E6%99%BA%E6%85%A7%E6%A0%91/"},{"title":"暴雨有感","text":"关于预防暴雨来临的经历气象预报信息提示有暴雨降临，我提起做好了准备。 首先是把地下室的所有书本转移到二楼住处的阳台 把车子开到城区地势相对比较高的街道 冒雨到净水机器上装满了15升的纯净水桶 最后把两个手机电量都充满 第一次体会到搬书是件体力活，我以为我一个人可以轻松搞定，结果到晚上10点还没有收拾好，还好爱人和儿子一起帮我搬，顺利完成，为家人点赞(^-^)。 接近凌晨，预报的大雨果然来历，雨势不小，下了一夜，还好没有发生水灾，万幸。 当天早上没有停水，但第二天早晨发现停水了，此时我才想起我前天储备的水，终于派上了用场。有道是未雨绸缪，我这是趁着暴雨存点水。 我自己的感悟： 12在暴雨来临之前，做好水电的准备在经济萧条之前，做好现金的储备。","link":"/2021/08/23/%E6%9A%B4%E9%9B%A8%E6%9C%89%E6%84%9F/"},{"title":"更换轮胎","text":"如何正确的更换轮胎 首先要学会使用车载轮胎的工具套装，包括一个千斤顶、一个延长杆，还有一个拧螺丝的扳手。 在举升车体之前，用螺丝扳手把轮胎的几个螺丝拧松，但是不用彻底拆掉螺丝。 如果在车体举升起来之后再用扳手拧松螺丝的话，轮胎缺少地面的摩擦力，拧起来会费劲，感觉也会对车子的固定轮胎的半轴有外力。 此时拧松螺丝即可，不用完全卸掉螺丝，后面用手动即可卸掉螺丝 这里重点是强调利用地面的支撑力和摩擦力，让拧松螺丝更轻松 找好千斤顶的卡槽 可以先把备胎放到车体下面起到支撑作用，一旦千斤顶有意外的话，可以起到缓冲作用，放置轮胎时注意不要刮擦轮毂 举升车体，卸掉螺丝，去下旧轮胎，如果不好取下轮胎，可以轻轻的用脚踩一下轮胎。可以把旧轮胎替换新轮胎放在车体下缓冲 装上新轮胎，紧固螺丝时一般采用对角线的顺序紧固螺丝，最后可以用脚轻踩一下扳手确保螺丝紧固。 可以查找轮胎螺丝的扭力，最好用扭力扳手紧固螺丝。","link":"/2022/04/05/%E6%9B%B4%E6%8D%A2%E8%BD%AE%E8%83%8E/"},{"title":"月线反转6.x","text":"选股到上市一年以上的自定义板块1、首先建立一个自定义板块，板块名称为”上市一年以上”： 选择通达信的[选项]-&gt;[自定义板块设置]菜单项，新建板块确定即可。2、使用下面的选股公式，把一年以上的股票筛选到”上市一年以上”的板块. 123BARSCOUNT(C)&gt;N; --N为参数，一般设为250-- 选股范围为：沪深A股 ​ 建立一个公式，命名为“EXTRS”，用来计算股票涨跌幅。 123456EXTRS:(C-REF(C,N))/REF(C,N);-- N缺省值为250。-- 通达信软件，Control+F，技术指标公式—其他类型 建立扩展数据，对股票涨跌幅排序 123456789通达信软件输入.902，进入扩展数据管理器。 选中第1条扩展数据；点击上图中的修改，在扩展数据属性里首先设置数据1如下：技术指标公式选择新建的“EXTRS”指标计算参数为120（对应半年期的RPS）计算时段为本地所有数据计算品种为“自定义板块”下面的“上市一年以上”这个板块勾选“精确复权”及“生成横向排名数据”排名方法为“0-1000归一化顺序” 如下图： ​ ​ 用同样的方法，分别设置好250、50周期的扩展数据属性。 建立月线反转的主图叠加技术指标 (（必须是主图叠加）的源代码是(是用来在日K线的主图上显示黄色笑脸的月线反转图标)：) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113MA10:MA(CLOSE,10);MA20:MA(CLOSE,20);MA50:MA(CLOSE,50);MA120:MA(CLOSE,120);MA200:MA(CLOSE,200);MA250:MA(CLOSE,250);Z50:=EXTDATA_USER(3,0);{50天的}RPS50:=Z50/10;FYX11:=IF(RPS50&lt;=87,0,1);{RPS50大于87}Z120:=EXTDATA_USER(1,0);{120天的}RPS120:=Z120/10;FYX12:=IF(RPS120&lt;=90,0,1);{RPS120大于90}FYX130:=RPS50&gt;=90 OR RPS120&gt;=90;{当天RPS50或RPS120大于90，在后面被FYX32引用}FYX131:=C&gt;=HHV(C,70);{创70日最高收盘价}FYX13:=FYX130 AND FYX131;{创70日新高，且当天RPS50或RPS120大于90。在后面被FYX21、FYX22、FYX63、FYX72等引用}FYX1:=FYX11 OR FYX12;FYX21:=LLV(L,50)&gt;LLV(L,200) AND FYX13;{50日内最低价大于200日内最低价}FYX22:=LLV(L,30)&gt;LLV(L,120) AND FYX13;{30日内最低价大于120日内最低价，且FYX13}FYX23:=LLV(L,20)&gt;LLV(L,50) AND LLV(L,10)&gt;LLV(L,20);{20日内最低价大于50日内最低价}FYX2:=FYX21 OR FYX22 OR FYX23;{结构紧凑的重要条件}NH80:=IF(H&lt;HHV(H,80),0,1);FYX31:=COUNT(NH80,10);{10天内曾创80日新高}FYX32:=(C&gt;=HHV(C,50) OR H&gt;=HHV(H,50)) AND FYX130;{当天创50日最高收盘价或50日最高价，且RPS50或RPS120大于90}FYX3:=FYX31 OR FYX32;FYX4:=C&gt;MA(C,20) AND C&gt;MA(C,200) AND MA(C,120)/MA(C,200)&gt;0.9;{当天收盘价必须站上20天线和200天线}NN200:=IF(C&gt;MA(C,200),1,0);{当天收盘价大于200天线}AA200:=COUNT(NN200,45);FYX51:=AA200&gt;2 AND AA200&lt;45;{45天内，收盘价站上200天线的天数大于2，小于45}LNN200:=IF(L&lt;MA(C,200),1,0);LAA200:=COUNT(LNN200,45);FYX52:=LAA200&gt;0 AND AA200&gt;2;{45天内，至少有一天的最低价低于200天线;且至少站上200天线3天以上}FYX5:=FYX51 OR FYX52;FYX601:=MA(C,120)&gt;=REF(MA(C,120),15) OR MA(C,200)&gt;=REF(MA(C,200),15);{120天线或200天线呈上升趋势}FYX602:=MA(C,120)&gt;=REF(MA(C,120),15) AND MA(C,200)&gt;=REF(MA(C,200),15);{120天线和200天线线呈上升趋势}FYX603:=MA(C,120)&gt;MA(C,200) AND MA(C,200)&gt;MA(C,250); {120日线、200日线、250日线呈多头排列}FYX61:=HHV(H,30)/LLV(L,120)&lt;1.50 AND FYX601;{30天内最高价与120日内最低价之比小于1.5，且120天线或200天线呈上升趋势，石英股份2022年的平台在120天左右}FYX62:=HHV(H,30)/LLV(L,120)&lt;1.60 AND FYX602;{30天内最高价与120日内最低价之比小于1.6，且120天线和200天线线呈上升趋势}FYX63:=HHV(H,30)/LLV(L,120)&lt;1.75 AND FYX603 AND FYX13;{30天内最高价与120日内最低价之比小于1.75，且长期均线呈多头排列，且满足FYX13}FYX6:=FYX61 OR FYX62 OR FYX63;FYX71:=HHV(H,5)/HHV(H,120)&gt;0.85;{5天内最高价距离120日内的最高价不到15%}FYX72:=HHV(H,5)/HHV(H,120)&gt;0.8 AND FYX13;{5天内最高价距离120日内的最高价不到20%，且满足FYX13}FYX73:=C/HHV(H,10)&gt;0.9;{当天收盘价距离10日内的最高价不到10%}FYX7:=(FYX71 OR FYX72) AND FYX73;YXFZ:=FYX1 AND FYX2 AND FYX3 AND FYX4 AND FYX5 AND FYX6 AND FYX7; DRAWICON(BARSSINCEN(YXFZ,15)=0,LOW,34);{月线反转信号画图标34:黄色笑脸} 月线反转条件选股公式： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697Z50:=EXTDATA_USER(3,0);{50天的}RPS50:=Z50/10;FYX11:=IF(RPS50&lt;=87,0,1);{RPS50大于87}Z120:=EXTDATA_USER(1,0);{120天的}RPS120:=Z120/10;FYX12:=IF(RPS120&lt;=90,0,1);{RPS120大于90}FYX130:=RPS50&gt;=90 OR RPS120&gt;=90;{当天RPS50或RPS120大于90，在后面被FYX32引用}FYX131:=C&gt;=HHV(C,70);{创70日最高收盘价}FYX13:=FYX130 AND FYX131;{创70日新高，且当天RPS50或RPS120大于90。在后面被FYX21、FYX22、FYX63、FYX72等引用}FYX1:=FYX11 OR FYX12;FYX21:=LLV(L,50)&gt;LLV(L,200) AND FYX13;{50日内最低价大于200日内最低价}FYX22:=LLV(L,30)&gt;LLV(L,120) AND FYX13;{30日内最低价大于120日内最低价，且FYX13}FYX23:=LLV(L,20)&gt;LLV(L,50) AND LLV(L,10)&gt;LLV(L,20);{20日内最低价大于50日内最低价}FYX2:=FYX21 OR FYX22 OR FYX23;{结构紧凑的重要条件}NH80:=IF(H&lt;HHV(H,80),0,1);FYX31:=COUNT(NH80,10);{10天内曾创80日新高}FYX32:=(C&gt;=HHV(C,50) OR H&gt;=HHV(H,50)) AND FYX130;{当天创50日最高收盘价或50日最高价，且RPS50或RPS120大于90}FYX3:=FYX31 OR FYX32;FYX4:=C&gt;MA(C,20) AND C&gt;MA(C,200) AND MA(C,120)/MA(C,200)&gt;0.9;{当天收盘价必须站上20天线和200天线}NN200:=IF(C&gt;MA(C,200),1,0);{当天收盘价大于200天线}AA200:=COUNT(NN200,45);FYX51:=AA200&gt;2 AND AA200&lt;45;{45天内，收盘价站上200天线的天数大于2，小于45}LNN200:=IF(L&lt;MA(C,200),1,0);LAA200:=COUNT(LNN200,45);FYX52:=LAA200&gt;0 AND AA200&gt;2;{45天内，至少有一天的最低价低于200天线;且至少站上200天线3天以上}FYX5:=FYX51 OR FYX52;FYX601:=MA(C,120)&gt;=REF(MA(C,120),15) OR MA(C,200)&gt;=REF(MA(C,200),15);{120天线或200天线呈上升趋势}FYX602:=MA(C,120)&gt;=REF(MA(C,120),15) AND MA(C,200)&gt;=REF(MA(C,200),15);{120天线和200天线线呈上升趋势}FYX603:=MA(C,120)&gt;MA(C,200) AND MA(C,200)&gt;MA(C,250); {120日线、200日线、250日线呈多头排列}FYX61:=HHV(H,30)/LLV(L,120)&lt;1.50 AND FYX601;{30天内最高价与120日内最低价之比小于1.5，且120天线或200天线呈上升趋势，石英股份2022年的平台在120天左右}FYX62:=HHV(H,30)/LLV(L,120)&lt;1.60 AND FYX602;{30天内最高价与120日内最低价之比小于1.6，且120天线和200天线线呈上升趋势}FYX63:=HHV(H,30)/LLV(L,120)&lt;1.75 AND FYX603 AND FYX13;{30天内最高价与120日内最低价之比小于1.75，且长期均线呈多头排列，且满足FYX13}FYX6:=FYX61 OR FYX62 OR FYX63;FYX71:=HHV(H,5)/HHV(H,120)&gt;0.85;{5天内最高价距离120日内的最高价不到15%}FYX72:=HHV(H,5)/HHV(H,120)&gt;0.8 AND FYX13;{5天内最高价距离120日内的最高价不到20%，且满足FYX13}FYX73:=C/HHV(H,10)&gt;0.9;{当天收盘价距离10日内的最高价不到10%}FYX7:=(FYX71 OR FYX72) AND FYX73;YXFZ:=FYX1 AND FYX2 AND FYX3 AND FYX4 AND FYX5 AND FYX6 AND FYX7; BARSSINCEN(YXFZ,15)=0; 下载几个数据 上市一年以上的板块可以每季度更新 基金持股3%和北向资金持股3000万的板块可以每季度选股更新一次 盘后数据和财务数据每天盘后下载 扩展数据每天都更新 选股步骤 首先从上市一年板块中使用（基金持股3% or 北向资金3000万）的条件，选股到【基金加北向】板块 从基金加北向的板块中使用月线反转的条件，选股到月线反转板块。时间跨度为一个季度，如下图：","link":"/2022/09/07/%E6%9C%88%E7%BA%BF%E5%8F%8D%E8%BD%AC6-x/"},{"title":"本地新建目录关联远程仓库","text":"本地新建目录如何关联远程github仓库 mkdir exam1 cd exam1 git init git remote add origin git@host:username/username.github.io.git 添加项目文件到exam1目录 git add . git commit -m “xxxx” 如果是在本地管理多个github账户，就要先使用下面的语句注册用户信息 git config user.ame yourusername git config user.email yourmailbox 提交到远程仓库，这里分两种情况： github的仓库里面已经有文件 需要先把远程仓库的文件更新到本地： git pull –rebase origin main 然后再 push 提交到远程仓库： git push -u origin main (如果本地的分支和仓库的分支名称不同，要把参数写全：git push -u origin master:main ) github的仓库里没有任何其他的用户文件（也就是说本地和远程都是新建的目录和仓库） git push -u origin main 不过现在试验的是把现有仓库的文件全部删除（在本地删除文件，然后git push origin到仓库，所有文件都会同步删除），也依然要使用第一种方法。git pull --rabase origin main ，然后再git push -u origin main","link":"/2022/07/13/%E6%9C%AC%E5%9C%B0%E6%96%B0%E5%BB%BA%E7%9B%AE%E5%BD%95%E5%85%B3%E8%81%94%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/"},{"title":"机油参数","text":"发动机机油的参数 机油参数：W前后的数字代表了什么呢？ 以0W-30为例，W_winter代表低温，与数字组合则代表不同的机油凝固的最低温度（范围）。计算方式为【数字+（-35）】。 0W＝零下35℃【0+（-35）=-35】5W＝零下30℃10W=零下25℃20W＝零下15℃ 轮胎的扁平比 扁平比 = 胎壁高度 / 胎冠宽度 如下图：","link":"/2022/01/13/%E6%9C%BA%E6%B2%B9%E5%8F%82%E6%95%B0/"},{"title":"欧奈尔杯柄","text":"关于欧奈尔杯柄的理解 杯柄形态：是投资大师威廉.欧尼尔提出的，在股票的一段上升趋势中，前期已经涨了一波，缩量调整回落，然后放量上攻，到达前期高点处时，又再次缩量回落，然后再放量上攻，营造杯状带柄形态，及股价确定突破，就是大升势开始时。 杯柄形态详解：杯柄形态是一个牛性的持续形态。如它的名字所示，这个形态有两个部分：杯和柄。其中杯是在一段上涨后形成，看起来像个圆形底，当杯的部分完成后，出现一段盘整行情，这就是柄。当柄这段盘整行情被突破后，价格将延续此前的上涨趋势。 1、趋势：作为一个持续形态，杯柄形态前的趋势为上升趋势。理想情况下，这个上升趋势的时间为数月，还处于趋势早期。此前的上升趋势越成熟，那么该持续形态的成功率越低。 2、杯：杯的形态应该为U型，看起来像个圆底。一个V型的底部对杯柄形态来说太急促了。缓和的U型可以确认这个“杯子”是一个巩固阶段。完美的情况下，“杯子”两边的高度相等，但是大部分情况并不这样。 3、杯高：理想情况下，杯子的深度为此前上升趋势的1/3回撤幅度，或者更少。对于波动大的市场，这个回撤幅度可以为1/3到1/2。极端情况下，可以达到2/3。 4、柄：有时候，这个柄会以向下倾斜的旗形或者小三角形态出现，有时候则只是一个简单的小幅回撤。柄回撤的幅度可以达到杯上涨高度的1/3，最好不要超过这个幅度。柄回撤的幅度越小，该形态的牛性就越足，突破时表现得也越显著。 5、时间：杯子的形成时间可以为1到6个月，或者更长。柄的时间则为1-4周。 6、成交量：当柄突破时，应该有明显放大的成交量。 7、目标价：目标价可以为杯底部到杯右边波峰的距离。 与其它形态一样，最重要的是抓住形态的本质，而不是细节：杯柄形态中的杯子是一个碗状的巩固阶段，而柄是一个小回撤，随后出现一个放量的突破。 杯柄形态买点：欧奈尔杯柄理论的买点,简单地说，就是股价放量上升即将创出新高时，为最佳买入时机。其实质都是主力在前期高点附近，考虑到前期高点套牢盘的压力，主动采取的一种洗盘行为，目的是为了走得更远，拉得更高。 欧大师指出：在“有柄的杯子”这种形态中，正确的买人时机是在股票价格上升到比柄形区域(C、D、E点)的最高价格还高l/8处。虽然我们称该点为新高点，它实际上是突破柄形交易区域的新高点，通常比过去的实际高点(A点)略低 为什么不在B点买？为什么不能在杯形区城的底部（B点，也就是“坑底”）买人呢?，这样不是能获利更丰吗?”这是因为，除了这种“有柄的杯子”形态——也就是“单底”形态外，还会有“双重底”、“三重底”的形态出现。如下图，“双重底形态”。如果在第一个低点B点买入，可能还会出现第二个底点D点。那么，能不能在第二个低点D点买入呢？不能，因为还可能出现第三个低点——“三重底形态”，甚至很多重底的形态：有的时候甚至会形成一个很长时间的盘整。有些股票，一旦盘整起来，甚至能盘整一年或者几年。 所以我们不主张在低位买进，有两点原因： \\1. 低位买入时，我们并不知道股票是否还会下跌，所以必须等待更可靠的技术信号表明股价确实止跌并将大幅上涨时再买入。 \\2. 低位止跌买入后，股价在低位徘徊，技术面上不能证明它将来会大幅上升，这时候买入的可能是一支不怎么样的股票。","link":"/2021/09/20/%E6%AC%A7%E5%A5%88%E5%B0%94%E6%9D%AF%E6%9F%84/"},{"title":"浏览器是如何解释HTML文件中添加的各种元素","text":"理解HTML文件中各种元素是如何被创建和布局还没有系统学习DOM模型，但是在看到MDN文档中关于创建函数这一节时，对HTML、CSS和Javascript有了进一步的认识。这篇文档通俗易懂，尽管是讲解自定义函数的，但是从代码中可以学习到HTML中各种元素是如何被创建和布局的。原文的链接：[Build your own function](Build your own function - Learn web development | MDN (mozilla.org)) 12345678910111213141516171819function displayMessage() { const body = document.body; const panel = document.createElement('div'); //使用document对象的createElement方法创建各种类型的元素，参数是单引号包裹的html标签 panel.setAttribute('class','msgBox'); //使用div对象实例的setAttribute方法来设置 body.appendChild(panel); //在body元素中使用appendChild（）方法添加一个div元素 const msg = document.createElement('p'); msg.textContent = 'This is a message box'; panel.appendChild(msg); const closeBtn = document.createElement('button'); closeBtn.textContent = 'x'; panel.appendChild(closeBtn); closeBtn.addEventListener('click', () =&gt; panel.parentNode.removeChild(panel));} 使用documnet对象的createElement()方法创建元素 使用元素的appendChild()方法在指定的元素中添加子元素 也就是说，这个displayMessage()函数是用代码动态的创建了html文件中的div、p、button三个元素，并根据包含关系完成布局。 我们在HTML文件只是书写了各种元素的标签（tag），在CSS文件中按照标签分类设置该类的数据项和值。但是最终呈现在浏览器上的是非常直观的可视化界面布局。实际上由浏览器最后扫描解释，根据HTML文件中各个元素类型和布局关系，调用document.createElement()方法创建指定的元素，调用元素的appendChild()方法向一个元素中添加子元素。 通过调用DOM模型中各种对象的方法完成创建和布局，设置各种元素的属性。每一个标签就是一个类，从CSS的书写方法可以看到，通过querySelector（）选择指定的元素，把CSS中设置的数据项和值应用到实例对象中对应的属性，就完成了样式的设计。这里自己的猜测，通过进一步的学习，可以查看一下html、css、javascript和DOM对象的设计架构，doument就是一个树根，下面可以创建和添加各种元素，通过读取CSS中的各种数据项和对应的数值值实现元素的样式化。所以，有了dom对象模型，html文件中的各种元素(element)和CSS中的各种样式，其实都可以通过javascript动态实现，只不过提供给前端开发者的是html和css文档，只需关注需要的元素、布局、样式，通过文本编辑器完成，除了html、css的文本编辑，还可以在javascript中调用浏览器提供的DOM api来实现动态功能。 回忆早年的的Windows桌面应用时代，以Visual basic、Visual C++、Delphi等可视化编程工具为代表，主要的设计方法是由用户直接勾画出应用程序操作的界面，提供各种可视化的窗口组件，轻松完成界面设计、组件特征值设置、事件添加，而这些可视化快速编程的背后，是一套复杂的基于面向对象特征的组件库（delphi叫做VCL，visaul component library），在编译阶段直接组装好整个产品，直接在桌面运行就可以了。 在回到web时代的internet，网络上的应用不同于桌面应用，网络带宽是有限的，把所有的组件装配好，通过网络下载到客户端运行的模式是行不通的。基于这种需求，HTML+CSS+JavaScript的设计模式正符合轻量化的思想。 html中通过指定标签包含各种元素 CSS通过分类选择各种原色，设定好特定的html元素的属性和数值 Javascript实现对html元素和css的动态操作，构建功能丰富的web网站和网页。 客户端通过发送网络请求，把html、css、javasctipt下载到本地的页面，有browser的解释器负责浏览解析，生成dom对象树、css树，最后由browser渲染。javascript则解释为对web页面元素的操作。一句话，实际上html、css就像是一个拥有完善规格和参数的产品设计图纸，通过网络请求后下载到本地，由browser负责制造组装，而原材料就是集成在browser内部的各种对象，这些对象通过模型化组织在一起，比如DOM（document object model）就是一个属树形组织结构的对象集合，用来提供操作网页元素接口的对象模型（DOM APIs），还有windwo、audio、cavas等对象，他们内部甚至是用c++等高效的编程语言编写的，但是对于用户来讲，只需要调用这个接口提供的功能即可，不需要知道更细节内容。这些是初学了MDN的文档之后，对html、css、javascripte和Browser API的理解，可能会有偏差，继续学习吧。使用下载html、css、javascript文件到本地由browser解释和处理设计很精妙，毕竟这些文件都是文本文件，占用网络的资源很小，到本地由浏览器集成的各种组件库进行渲染、解释执行。下面这这段文字引用自mdn文档： (Manipulating documents - Learn web development | MDN (mozilla.org)) 1When writing web pages and apps, one of the most common things you'll want to do is manipulate the document structure in some way. This is usually done by using the Document Object Model (DOM), a set of APIs for controlling HTML and styling information that makes heavy use of the Document object 关于browser API Browser APIs are built into the browser — you can access them from JavaScript immediately。 Third party APIs。第三方API。Third party APIs are APIs provided by third parties — generally companies such as Facebook, Twitter, or Google — to allow you to access their functionality via JavaScript and use it on your site. One of the most obvious examples is using mapping APIs to display custom maps on your pages.Third-party APIs - Learn web development | MDN (mozilla.org)。Third party APIs, on the other hand, are located on third party servers. To access them from JavaScript you first need to connect to the API functionality and make it available on your page. This typically involves first linking to a JavaScript library available on the server via a &lt;script&gt; element, as seen in our Mapquest example: 123&lt;script src=&quot;https://api.mqcdn.com/sdk/mapquest-js/v1.3.2/mapquest.js&quot; defer&gt;&lt;/script&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://api.mqcdn.com/sdk/mapquest-js/v1.3.2/mapquest.css&quot;/&gt; They usually require API keys。Requiring a key enables the API provider to hold users of the API accountable for their actions. When the developer has registered for a key, they are then known to the API provider, and action can be taken if they start to do anything malicious with the API (such as tracking people’s location or trying to spam the API with loads of requests to stop it working, for example). The easiest action would be to just revoke their API privileges。第三方API提供商需要用户申请注册才能提供一个API keys。","link":"/2022/08/30/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%98%AF%E5%A6%82%E4%BD%95%E8%A7%A3%E9%87%8AHTML%E6%96%87%E4%BB%B6%E4%B8%AD%E6%B7%BB%E5%8A%A0%E7%9A%84%E5%90%84%E7%A7%8D%E5%85%83%E7%B4%A0/"},{"title":"生活感悟20220110","text":"在日常的生活和工作中，会有一些不如意的地方，比如和家人、朋友因沟通不畅而引起的争吵。这种氛围显然不是每个人所期望的，每个人都希望自己是对的，自己应该被认同，被表扬等这些心理，这个很正常，人的本性如此，就连孩童都希望获得称赞和表扬。但是现实是不同的人因为认知不同、思维方式不同、语言表达的不一致，会对一件事情有不同的理解和表达，如果这种表达不符合自己的主观意愿，对于性格迥异的人表达方式不同，一般会产生一下几种方式来处理这个争吵： 直接的语言的争吵，导致不欢而散 一方忍耐而终止了争吵 由争吵升级为打架 一方的包容和理解，用语言来化解争吵 客观看待以上几种类型的争吵，前三种种是常态，第四种最为高明。这里主要探讨第二种和第四种处理方式 关于争吵中的忍耐 为了保持一种平衡选择了忍耐，这种人是善良的，反过来又伤害了自己，这种情绪也许会传到，会被此人发泄的别的地方。因此，既然是一种情绪，就必须要表达出来，否则会伤害自己，得不偿失。至于如何发泄和调节这种情绪，因人而已。这里知识总结自己的一句感悟，与同事之间保持一种君子之间淡如水的距离，不必与任何人走的很近，哪些喜欢和别人走的很近的人，往往是因为自己不够强大，希望通过认识所谓更多的朋友来弥补，而有些人并无恶意。对于缺乏教养的人，可不必理会，止损远离即可，对于此类人的言行的无理取闹不必忍耐，直接怼回去，绝不客气。 关于包容和理解 人在成长的过程中会受有各种烦恼，而大部分的烦恼是因为关系的问题产生，朋友、同事、家人等都会因不同的性格产生分歧，如何处理关系就显得非常重要。 家人需要爱护、关心、理解、宽容 朋友要敬重，朋友要真诚善待 同事只能是同事 关于升级自己的认知和胸怀 每一次的争吵和冲突就像工作中遇到的问题一样，都是好的机会，提示自己的好机会，反思自己问题的好机会。比如，这次和家人的争吵，因为没有直接表达自己的想法和要求去做一件事，但是你的内心并不认同、开心，在做事的时候带着不好的情绪，这个对于自己和家庭氛围都不是好的处理方式。那么什么是好的处理方式呢，比如自己有不同的想法，真诚的告诉家人，你是怎么想的，两人的沟通和交流达成一致。其实在家庭中没有多少矛盾，都是因为沟通不畅引起的，最好的解决办法就是说出来。 提升自己宽容度和胸怀格局 首先从自身做起，从心态上保持一个积极向上的乐观态度，内心充满爱、一切都是最好的安排、人之初性本善，允许自己犯错，包容别人的错误，用更大的格局去容纳哪些看不顺的人、事、物，把这些看顺了，那些都是别人和事情自己的样子。对于无法沟通的认知，允许存在，毕竟这个世界就是如此，不能要求外界的人、事、物都符合你自己的要求。","link":"/2022/01/10/%E7%94%9F%E6%B4%BB%E6%84%9F%E6%82%9F20220110/"},{"title":"电子表格数据导出到word单页打印","text":"电子表格中的数据复制到word中打印，每页只打印一行数据 首先在word中插入表格，表格的行数和电子表格行数一致（除了标题行） 把Excel中的数据复制到word中（在wps office中需要选中对应的表格区域再粘贴数据） 选中表格中的标题行，选择”标题行重复”可以实现在每页显示和打印标题行 根据需要设置好word中表格的行高 根据自己的需要设置上下边距，直到刚好每页显示一行数据（除了标题行） [备注]：这个方法在wps office中同样适用。","link":"/2022/04/13/%E7%94%B5%E5%AD%90%E8%A1%A8%E6%A0%BC%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA%E5%88%B0word%E5%8D%95%E9%A1%B5%E6%89%93%E5%8D%B0/"},{"title":"盈利的几种模式","text":"在股票市场上实现盈利的几种模式 价值投资 (进入稳定期，每年有固定的分红收益) 小而美的成长股 把握国家政策、跟随市场主流趋势 定投各类基金 指数基金(被动基金) 行业基金(主动基金） 股指期货、可转债等其他衍生品 根据自己的投资认知和风险承受力，选择适合自己性格和资产的投资模式，长期而稳定的实现获利才是正确的方法。可以选择一个稳定的模式并一直坚持，或者采用多种模式分权重分散配置。","link":"/2022/02/20/%E7%9B%88%E5%88%A9%E7%9A%84%E5%87%A0%E7%A7%8D%E6%A8%A1%E5%BC%8F/"},{"title":"看上市公司财务数据的简单三个指标","text":"从营业收入和净利润出发我们知道 市值=估值*净利润，假定估值不变，市值就和净利润成正比，净利润增加越快，市值增加越快，股票价格增加越快。 如果你想依靠企业净利润的增长实现十年赚十倍的目标，必须要选择净利润复合增速大于26%的企业，因为1.26的10次方等于10。如果你想依靠企业业绩的成长实现 股价2年涨一倍的目标，就要选择净利润复合增速40%以上的企业。 我们身边熟悉的价值投资大佬水晶苍蝇拍说他选择过去3年每年营业收入增长不低于25%的企业，因为营收是利润之母，没有营收哪来利润，所以我们选择的企业最好是营收/净利润同步高增长，最好是营收增速/净利润增速均大于25%，越高越好！ 在现实生活中，我们知道很多企业营收很多，但都是白条，一大堆应收账款，就是活干了很多，但收不回来钱，这种生意是很难做下去的。 所以就需要评价企业的营收/利润质量，我通常用2个指标：第一个是净利润现金含量，指生产经营中产生的现金净流量与净利润的比值。该指标越大越好,表明销售回款能力较强，成本费用低，财务压力小。每年的净利润现金含量都大于100%为优秀，大于70%为合格。 净利润实际是财务报表做出来的，可能会被调整，有时候也不能完全反应企业的经营质量，所以我们又需要另外一个指标：收现比，即销售商品、提供劳务收到的现金与主营业务收入的比值。收现比反映了企业主营业务收入背后现金流量的支持程度。该指标越高，说明企业当期收入的变现能力越强。反之，说明企业当期账面收入高，而实际现金收入低，有很大一部分形成了应收账款。 我选股通常主要看净利润增长率/营收增长率/净利润现金含量这三个指标，这3个指标都不合格的话，直接PASS，不用再往下看了","link":"/2021/08/12/%E7%9C%8B%E4%B8%8A%E5%B8%82%E5%85%AC%E5%8F%B8%E8%B4%A2%E5%8A%A1%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E5%8D%95%E4%B8%89%E4%B8%AA%E6%8C%87%E6%A0%87/"},{"title":"离线安装Window .net framework3.5的方法","text":"Windows10下安装dot net framework3.5的方法在线安装有网络的情况下，dot Net Framework3.5是很简单，在win10下控制面板的程序功能下，点击开启或者关闭windows功能，直接选择开启或者关闭dot net framework3.5即可。如果没有网络的情况，可以使用下面两种方法之一安装dot net framework. 离线安装 从windows官网下载 dot net framework3.5离线安装包和语言包。 完整软件包(231M)下载地址：Download Microsoft .NET Framework 3.5 Service Pack 1（完整软件包） from Official Microsoft Download Center 语言安装包下载地址：Download Microsoft .NET Framework 3.5 SP1 语言包 from Official Microsoft Download Center 解压dotnetfx35.exe，把x64系统的语言包复制到.\\dotnetfx35\\wcu\\dotNetFramework\\dotNetFX35\\x64目录下面 直接运行.\\dotnetfx35\\wcu\\dotNetFramework\\dotNetFx35setup.exe即可离线安装dot net framework3.5 使用Windows安装介质启用Windows10的dot net framework 3.5 使用管理员用户权限（以管理员身份运行）打开命令提示符。 若要从位于“D:”驱动器上的安装介质安装 .NET Framework 3.5，请使用以下命令 ： 1DISM /Online /Enable-Feature /FeatureName:NetFx3 /All /LimitAccess /Source:d:\\sources\\sxs 使用“/All”启用指定功能的所有父功能 。 使用“/LimitAccess”阻止 DISM 与 Windows 更新/WSUS 联系 。 使用“/Source”指定还原功能所需的文件的位置 。","link":"/2021/06/09/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85Window-.net-framework3.5%E7%9A%84%E6%96%B9%E6%B3%95/"},{"title":"稻壳下载","text":"如何下载稻壳上的PDF文档有时候需要的文档在稻壳上是收费的或者要会员积分才能下载，在购买纸质书之前想浏览一下电子书，可以使用这个方法下载pdf文件 下载道客巴巴的阅读器 打开阅读器，在阅读器的地址栏复制粘贴PDF文件的网页地址并打开该文档 快速浏览到文档的最后一页，以便于使用虚拟打印机完整打印该文档(注意查看机器上是否有microsoft print to pdf这个虚拟打印机，一般win10自带)","link":"/2022/03/30/%E7%A8%BB%E5%A3%B3%E4%B8%8B%E8%BD%BD/"},{"title":"经济循环的四个周期","text":"经济循环的四个周期 复苏 繁荣 衰退 萧条 如果理解这个四个周期呢，类比一下春夏秋冬就可以知道，那每个季节应该做什么也就一目了然。 每个周期的主要特种","link":"/2022/05/02/%E7%BB%8F%E6%B5%8E%E5%BE%AA%E7%8E%AF%E7%9A%84%E5%9B%9B%E4%B8%AA%E5%91%A8%E6%9C%9F/"},{"title":"维特拉pcv软管","text":"加速车头传出尖锐气流声，同时动力下降在汽车之家维特拉论坛上看到的一篇文章，地板油加速时发动机传来连续漏气声音，同时速度下降，在上大坡满载情况下更为明显。车机系统并没有故障灯，如果缓慢加速一切正常。打开发动机盖目测没有异常，发动机油水不缺，汽油也正常。检查底盘，排气管各个接头没有漏气迹象，但是在节气门下方发现有消防微油渍，如下图： 这是pcv软管，连接曲轴箱pcv阀到进气岐管的一根软管。也就是曲轴箱通风系统的管路，具体作用请百度。同时，节气门阀体上和换挡线上的油渍也好解释了，就是曲轴箱里的机油混合气从pcv管的裂口喷出来的。 除了装配原因外，还有就是本身管子有问题，或者就是被化清剂之类的腐蚀了（有部分修理店看到有油渍的地方，直接用化清剂喷几下就完事，但是化清剂对塑料橡胶制品有腐蚀性，所以用化清剂喷之后必须要用流动水冲洗）。 如果确认是由于温造成的，新管安装最好外面用耐高温温胶带覆盖一层，要不然估计还会出现老化破损。 这个问题及解决方案来自汽车之家维特拉论坛车友帖子：汽车之家|急加速车头传出尖锐气流声，同时动力下降。订的管子已到！|维特拉|论坛 (autohome.com.cn)","link":"/2022/06/23/%E7%BB%B4%E7%89%B9%E6%8B%89pcv%E8%BD%AF%E7%AE%A1/"},{"title":"维特拉wg软管","text":"维特拉WG连接软管如果发现发动机舱的管路和皮带老化，要及时更换新的，确保行车安全。 看论坛车友分享，这一组管子有的涉及到真空泵，自然会关系到刹车安全，确保行车安全。","link":"/2022/08/26/%E7%BB%B4%E7%89%B9%E6%8B%89wg%E8%BD%AF%E7%AE%A1/"},{"title":"维特拉天窗的保养","text":"汽车天窗的保养方法我的维特拉目前还没有做过天窗的维护和保养。不过先记录一下保养方法，以后用得着。 清理天窗的灰尘 润滑天窗的轨道 润滑天窗的胶条 清理天窗的灰尘(此处需要干净的湿抹布一块) 天窗关闭状态，擦胶条表面的灰尘 天窗开启状态，擦一圈胶条的灰尘 润滑天窗轨道 如果感觉到开启、关闭天窗时有生涩感，说明天窗滑轨该润滑了。也可以定期保养，一般2年润滑一次。一般不要使用凡士林，容易积灰尘、不易清理。建议使用昆仑白油，一次用不了多少，购买一小盒就可以长期使用下去。车门的铰链也可以用它来润滑。 润滑天窗胶条 全车胶条的保养，一般都用矽质润滑剂（可在京东购买WD-40 高效矽质润滑剂），如果你想买便宜的润滑剂，可以买胶条润滑剂。建议半年保养一次胶条，常养常新。","link":"/2021/08/16/%E7%BB%B4%E7%89%B9%E6%8B%89%E5%A4%A9%E7%AA%97%E7%9A%84%E4%BF%9D%E5%85%BB/"},{"title":"维特拉废气循环管漏油气","text":"维特拉的废气循环管松动渗漏油气汽车之家的维特拉轮车友发文，说是废气循环管附近有油气现象，经多方求证，属于小问题，解决办法有多种，也可以不处理，定期清理就可以。 箭头指向的卡箍时论坛车友自己加装的，不知知道是否合理。 另外也要注意机油尺的橡胶垫是否老化，也可以考虑更换新的垫片，增强密封性。 也可以考虑更换废气循环管，购买汽车专用的卡箍安装好。 我计划不处理，定期用清洁剂清洁一下即可。 关于曲轴箱废气循环管的网友经验集 我才去我们这边铃木特约维修店检查过，抱箍螺丝无松动，师傅说涡轮增压都这样，胶管反复热胀冷缩肯定有些老化，管子里的含油废气就会渗漏一些出来，换根管子就可以。 如果是机油尺上方有油渍，那基本可以判断是机油尺上的密封圈老化，从机油尺孔漏出，换个密封圈，2元钱的事儿。 废气循环管，有机油蒸汽正常，这里有油渍应该就是卡箍松了，担心的花可以买个机油透气壶。","link":"/2022/07/13/%E7%BB%B4%E7%89%B9%E6%8B%89%E5%BA%9F%E6%B0%94%E5%BE%AA%E7%8E%AF%E7%AE%A1%E6%BC%8F%E6%B2%B9%E6%B0%94/"},{"title":"维特拉火花塞型号","text":"维特拉1.4t火花塞型号选择 原厂火花塞型号：原车规格火花塞，NGK ILZKR7D8 96412（应该是NGK为铃木定制的，首先推荐，可在NGK的京东或者天猫官方旗舰店购买）。 替代火花塞型号：电装VXUH22i 维特拉论坛车友经验: 12345&gt;1、电装VXUH22i 已跑3万公里。&gt;2、进阶升级版火花塞：NGK SILZKR7A-S 7718，NGK LKR7ARX-P 90020(NGK 90020是NGK官方给予K14C的唯一兼容备选)，Denso VXUH22I 5656。&gt;另外，原厂NGK ILZKR7D8火花塞理论寿命不低于于8W公里，一般热车后发动机怠速转速稳定，急加速稳定，一段时间内油耗没有明显变化就不用管火花塞，即便发生了以上情况也建议首先清洁节气门、清洗积碳，没有效果再考虑换火花塞&gt;3、确定能用有ngk 95770 、 96412（原厂型号） 7718 96358 （HX钌铂金） 96705 （HX钌铂金） 90020 （RX钌铂金）；denso fxu22hr8 vxuh22i ixuh22i 关于火花塞的燃烧 如果近期都没有使用过燃油添加剂的话，火花塞陶瓷体上的砖红色就说明加的汽油不合格，或者说加的不是国5级别的汽油，砖红色代表燃烧良好是上一个等级的汽油时代的说法了，现在的国5级别的汽油，正常火花塞的陶瓷体上是保持原本的颜色。","link":"/2022/08/21/%E7%BB%B4%E7%89%B9%E6%8B%89%E7%81%AB%E8%8A%B1%E5%A1%9E%E5%9E%8B%E5%8F%B7/"},{"title":"维特拉维护保养","text":"长安铃木四驱领先版维特拉关于维特拉保养用产品的推荐 长城金吉星“行系列”5w30全合成机油，还有卖机油送的博世AF0062机滤。(优先使用原厂的机油机滤组合) 火花塞用 NGK ILZKR7D8（随车手册上面的型号：NGK ILZKR7D8 （96412）） 维特拉四驱，变速箱换油用的是福斯ATF4400，用的是置换法 8万公里更换换后差速器油。距上次换油跑了8万，放出的油还很清澈。上次用的这款齿轮油，泰坦速拓MP, 80W-90，GL-4，8万公里跑下来没毛病，继续用。 8万公里更换分动箱齿轮油，和后差速器使用的是一个品牌的 要换半轴球笼防尘套，也别费劲拆球笼，直接买硅胶(轿车通用型)装换上就行 * 汽车之家维特拉论坛车友的维特拉四驱旗舰版，跑了20多万公里，发现左后轴内球笼防尘套破了。全名是叫后半轴内球笼维修包，长安铃木的125元。球笼内的这玩意儿是内卡簧，拆不下来。把整个半轴拆下来，用液压机压，也拆不下来。然后暴力拆解，敲、砸，都拆不下来。这是什么设计？难道以后球笼坏了，直接要换半轴总成？无奈，问修理铺哥们儿怎么办？他钻仓库里找了一通，找出个硅胶的防尘套。硅胶嘛，弹性足，从球笼头上装上。 * 另一个网友也是在淘宝购买球笼防尘套，结果修理工怎么都拆掉万向节，最后换只能更换后半轴总成，花费有点大。所以以后有朋友碰上要换半轴球笼防尘套，也别费劲拆球笼，直接买硅胶(轿车通用型)装换上就行。 * 有车友回复拆卸内球笼的方法：这个内球笼1分钟就可以弄下来，拆不下来是方法不对。先把羊角外球笼拆出来，然后水平把半轴用力往内球笼里一捅拉，就会听到内卡簧咔嗒一声就可以整根拿出来了。如果一次不行就多试几次……….你把整个半轴和内球笼整个拆下来就只能用球笼专用拉码了（最后这一句什么意思？也许是错别字吧） 要及时加油，不要经常跑到汽油泵报警灯亮了才去加油，可能会损害汽油泵。如果偶尔一次也无所谓，上次就遇到了，结果灯亮了后跑了40多公里吧，也有车主跑90公里的，到底能跑多远还是要看行驶路况的，但是不要搞得那么被动，那样对车子不好，同时让自己很被动。 火花塞的更换里程。一般以维修手册为主，可以在手册规定的里程数延后3万公里左右，比如6万或者8万公里更换就可以，不可以玩极限试验，否则可能会造成火花塞的电极脱落，脱落的电极会导致发动机损坏，那样就因小失大了。更换火花塞时使用原厂型号为最好。","link":"/2022/03/27/%E7%BB%B4%E7%89%B9%E6%8B%89%E7%BB%B4%E6%8A%A4%E4%BF%9D%E5%85%BB/"},{"title":"维特拉维护保养常用配件型号","text":"维特拉维护保养常用配件型号自2019年4月底买车之后，目前已经正常行驶41000公里，第一年利用放假时间到西安4s店保养，后来4s店撤销后改行卖其他牌子的车辆，但是长安铃木的售后还在。这车子目前的行驶品质良好，百公里油耗基本在5|6|7三个数值之间。高速百公里5个多油耗，平时6个多油耗，冬天百公里7个多油耗。日常保养就是更换机油、机滤和空气、空调滤芯。后来自己学会了更换空气滤芯和空调滤芯，仅仅剩下更换机油和机油滤芯。从4s店购买的机油用完之后，基本就是在京东网上购买长城的5w30 SN级别的全合成机油，保险起见就在中国石化加油站购买，价格比网上贵了不少，几乎要贵一倍了。一直坚持5000公里更换机油和机滤，原厂的机滤也使用完了，又接近保养周期了，在汽车之家的论坛里浏览关于机油滤芯、汽油滤芯的帖子，功夫不负有心人，终于把常用的几个维护保养配件找齐了，现在记录一下具体的品牌和型号。 机油 目前主要购买的是中国石化长城5w30 SN级别的全合成机油，可以在天猫旗舰店或者线下的中国石化加油站购买，国产机油的大品牌最起码保真，保持5000公里更换。 机滤 曼牌610/1 （官方数据支持） 博世0986AF0062 （官方数据支持） K&amp;N PO-9013 长安铃木机滤 （官方数据支持） 马勒OC1560 、马勒OC1513 （官方数据支持） 曼牌610/9 （了解），论坛车友说这款机滤是德国造，性能好，1.4t维特拉可用，但是没有官方数据支持，所以暂时不能使用，了解即可。 曼牌W67/2 （了解） 方牌 XG4386 这款属于长效机滤，可以在天猫旗舰店购买，但是目前不会使用，以为机油不是长效的，再说了国内的汽油品质一般，买了长效机油和机滤也不配套，还是5000公里及时更换机油和滤芯。 空气滤芯 马勒 LX5163空气滤芯（论坛有网友贴图说维特拉的原厂空气滤芯就是由马勒公司提供的，那 韦斯特 科德宝(micronAir)空调滤清器以后就多试试马勒的这款空气滤芯） 博世和曼牌暂时没有适配维特拉的空气滤芯 空调滤芯 曼牌CUK19019 –以后主要使用曼牌的这款空调滤芯 韦斯特 汽油滤芯 马勒 KL1122 韦斯特 MG1600 博世 长安欧尚X70A 1.5L 除了原厂燃油滤清器之外，没有适配维特拉的汽油滤清器，但是汽车之家有专业的车友经过车队工程师的测量，这三款汽油滤芯完全适配维特拉，为这位车友点赞。 变速箱油 福斯变速箱油，福斯ATF4400 ，更换一次需要8升左右。 爱信的6at变速箱油。维特拉配备的爱信6AT波箱循环机换油接口比较特殊，这张照片请保留好，记住接口型号，以备所用之需，这个接口和宝马X1或MINI通用,如下图： 刹车油 原厂刹车油，下次保养时记得记录下4s店使用刹车油的品牌和型号，应该是长城的润滑油。 Ate DOT4 SL6 菲罗多(Ferodo) DOT4 FBL100 四驱分动箱油和后差速器油 尽量使用维特拉原装机油，是进口的，下次保养时咨询铃木售后。如果没有原装油，就用下边这款。 福斯 泰坦速拓MP， API GL-4, 80W-90。具体的粘度数值要参照维特拉保养手册数据。分动箱和后差速器齿轮油都是用这款油。 冷却液防冻液 如果临时混加，可以使用百适通的绿色 -37度冷却液。 长安铃木维特拉的原厂冷却液是长城的冷却液，但是具体的型号和现在卖的产品包装不同。可在京东官方自营店咨询，如果全部更换可以使用这款，最好咨询修车师傅，用哪款合适。天猫或者淘宝有卖原厂的，可是长安铃木已经不存在了，那么多原厂的产品，我自己不懂。 百适通的可混加冷却液。自己的京东账户里有收藏，如果需要购买，咨询客服，买哪款更合适。 发电机、空调压缩机等皮带 可以在淘宝永盛铃木或者闲鱼平台的【聚鑫昌盛铃木】购买配件。 其他 网友对适配维特拉的机滤回复，了解一下。 12345曼牌 610/1二十多，610/9 五十左右Kn hp1003六十左右 ps1003 一百一左右美孚的一百左右紫皇冠和piaa的二百左右品牌太多了 使用KN滤清器官方车主号提供的功能来查询官方支持的滤芯等配件 在微信公众号查询[KN滤清器官方车主号]并加关注，进入公众号后，选择左下角的菜单项【关于K&amp;N】打开【乘用车目录查询】,切换到【车辆】标签页，在下方的编辑框输入【铃木】，或者选择右侧的字母排序筛选出铃木系车辆，定位到【长安铃木】【维特拉】，系统会自动筛选出可用的配件列表。如下图所示： 我购买的是KN PO-9013,下面显示的几款互换产品：曼牌610/1、马勒OC1560、马勒OC1513，这三款都可以在网上买到，最后的两款在京东我没有查到，也不需要那么多了。 我的日常购买清单 长城5w30 SN全合成机油。在中国石化加油站或者天猫旗舰店购买。 曼牌610/1机滤、博世机滤0986AF0062、KN机滤PO-9013、马勒机滤OC1560。 马勒LX5163空气滤芯 曼牌空调滤芯CUK19019 马勒燃油滤芯KL1122、博世燃油滤芯:长安欧尚X70A 1.5L、韦斯特MG1600燃油滤芯 原厂的燃油滤清器是上边为进口（机滤上的向上的箭头指的是入口），连接油箱，下边为出口，连接发动机，汽油经过滤芯过滤后送到发动机。 刹车油 Ate TYP200是好，但是吸水性强，易衰减,多用与竞技赛车，TYP200 刹车油18个月后就要衰减了，推荐用Ate的SL6即可。到时候购买可以咨询客服。估计原厂的刹车油也是长城的，到时候问原4s店铃木售后工程师。 变速箱油 原厂、福斯或者爱信6at 分动箱、后差速器齿轮油 维特拉原装或者福斯","link":"/2023/02/05/%E7%BB%B4%E7%89%B9%E6%8B%89%E7%BB%B4%E6%8A%A4%E4%BF%9D%E5%85%BB%E5%B8%B8%E7%94%A8%E9%85%8D%E4%BB%B6%E5%9E%8B%E5%8F%B7/"},{"title":"维特拉车友经验","text":"维特拉车友经验关于真空泵的保养和维护12345671、10多万公里后，出現偶尔打火后出现刹车踩不下去的现象。更换剎车大力鼓总成都解决不了问题。后来咨询各界大神综合参考判断应该是真空泵问题。因为需要机油润滑,所以机油会直接影响它能否正常运行。更换回原来使用型号机油连续几天都没有出现问题，安全起见果断换真空泵。 注意车子的公里数，到了10万公里后可以考虑入手新的真空泵，刹车安全为第一。换新的真空泵之前，检测下负压值才是正确做法，负压值多少？（-70kpa，可以查资料确认一下）。目前只能通过淘宝购买拆车件，联系渠道，是否可以邮购原装的真空泵，提前收一个备用件。2、保养的时候，空滤的那根管子没插，导致大量灰尘通过废气阀进入真空泵，堵塞了真空泵的单向阀。因此务必检查空滤右侧的管子安装是否完好。3、使用正品机油，及时更换机油。如果使用了假冒伪劣机油，或者延长了换油时间，会对真空泵产生不良影响。因此要使用正品油、按时更换机油。4、不要使用大量的PEA。清理的发动机积碳，通过机油到了真空泵，真空泵里面有个工程塑料叶轮片，主要零部件都是积炭，磨损严重。不能产生负压，从而导致刹车失灵。 （论坛车友经历：我的理解是平常汽油添加剂要少用，会污染机油，污染的机油会进真空泵润滑，就导致了过度磨损！我就是平常添加剂加太猛了，积碳是少了，但是机油口打 开盖子一看，里面很黑）5、发动机越干净，真空泵就越脏，也就是说积碳是一定要产生的，如果使用了别的方法清理积碳，那么积碳不在发动机里，就会到其他地方，比如真空泵，比如三元催化等。所以，还是不要搞的太复杂，积碳多了就到4s清理。(有车友17万公里了，没听说加燃油添加剂，大保养时清理积碳)。所以干脆让积碳就在发动机里，该清理的时候及时清理就好，顶多是导致动力下降、油耗增加而已，不会导致其他的安全性问题）6、如果是外因所致，我倾向于接空滤后面的那条负压管（?）进脏东西。这个造成内部磨损最直接。(核实一下空滤后面的负压管) 这条结论是来自论坛网友的论坛回复，可以在保养时咨询4s店的维修工 真空泵的检测123451、可以试试在着车的情况下，当刹车踏板踩不下去时，把真空泵的管子拔出来，用手指感受一下，如果只有很小的吸力的话，那就可以确定是真空泵坏了。2、在行车状态下，快速连续踩刹车，踩不硬，真空泵就是好的。5下以内踩硬了，真空泵工作效率下降。3、如果你有负压表，测试真空泵的输出负压，能不能达到-70kpa4、刹车系统检测：停车，不踩刹车，怠速10秒再熄火。然后，看第二天早上，能踩几次刹车，3次以上，算合格。5、到4s店保养时，检查真空泵的各个管子是否完好。 及时检查发动机舱的各种传动皮带从9万公里开始，急加速就从机仓里传出来咔咔异响，论坛阅贴无数，大家基本的结论是机油问题，我换了无数个机油品牌，30的40的基本上作用不大。一开始认为是缸内积炭原因，清洗了几次，积炭倒是清出来不少，但是异响没一点改善。今天更换了发电机皮带，水泵皮带。试车的时候异响消失了，怎么加速都没有了。最终确认了就是发电机皮带老化了发硬开裂打滑导致的异响。难怪之前雨天开车的时候不响，因为皮带里进水所以没有异响。 按照保养手册的要求及时保养和更换 发动机舱的小问题 123不算漏油，卡子弄紧或换个新卡子；这个管子漏油气的根本原因是引擎塑料盖压住它了，升高塑料盖就行加个卡箍，或者换管","link":"/2022/07/13/%E7%BB%B4%E7%89%B9%E6%8B%89%E8%BD%A6%E5%8F%8B%E7%BB%8F%E9%AA%8C/"},{"title":"维特拉进气歧管渗漏油气","text":"维特拉进气歧管渗漏油气​ 应该是此处橡胶管没有紧固好或者有裂纹了，这根管子通气门室盖油气分离器，把里面分离出来的废机油蒸汽重新导入进气系统进入燃烧室烧掉，应该没有什么问题。 维特拉论坛车友的回复： 正常现象，真在意的话把那里加一个可以锁紧的不锈钢卡箍吧，以后没准正时链条盖气门室盖的缝隙还会渗，反正我和我哥们的车子都已经渗了。 拿一根塑料卡箍固定一下就好 增压车油汽，定期清洗就0k 原文链接：维特拉进气歧管有油气|汽车之家维特拉论坛","link":"/2022/08/18/%E7%BB%B4%E7%89%B9%E6%8B%89%E8%BF%9B%E6%B0%94%E6%AD%A7%E7%AE%A1%E6%B8%97%E6%BC%8F%E6%B2%B9%E6%B0%94/"},{"title":"美联储的加息预期","text":"美联储引导的加息预期 5月份经济数据传递出四大信号： 一是经济边际放缓 二是通胀高点临近，但是会高位盘整一段时间 三是紧信用带来的流动性拐点出现 四是接下来的风险因素可能跟流动性退潮有关。 好消息是中国提前开始货币政策正常化，所以这一次美元流动性的退潮，美联储的加息缩表的预期可能对我们的影响也不会那么强。 这次美联储议息会议主要讲了三点： 第一点，美国经济活动和就业指标已经开始走强。 第二个是通胀率上升，但主要反映了暂时因素。 第三个继续维持量化宽松，当经济取得进一步复苏之后，才会缩减购债规模。 美联储掌握着全球流动性的总阀门。如果美国收紧货币，美元走强，利率抬升，美元资产的吸引力会上升，全球的资本向美国本土回流，那么在一些脆弱的环节可能会引发金融危机。 美联储的货币政策“从不管他国”，所以历史上美联储的每一次加息周期都会导致全球经济薄弱环节的金融危机。80年代是拉美，1997年是东南亚。2008年美国直接把自己给引爆了，就是次贷危机。所以美联储加息这件事情，我建议大家还是要重视。 美元指数走强对我们有什么影响？客观来讲是有影响的，但影响不会像其他经济体那么大。第一，中国经济复苏的强劲程度超出大部分的经济体。第二，在去年下半年，我们的货币政策就正常化了，而且市场已经做出了一定调整，也在消化估值。所以说我们能不能扛住美联储加息，扛住全球流动性拐点，很大程度上还取决于我们自身经济金融的健康程度。 中国年初货币政策紧信用，广义流动性拐点出现，如果未来美联储减债，加息，可能意味着全球流动性拐点的出现。 我一直说股市是货币的晴雨表，比如说去年经济不好，但是货币很宽松，所以股市很好，今年开年，虽然经济很好，但股债市场都出现了调整。 有人担心未来说经济可能会下滑，但经济下滑对股市可能是好事；反而如果经济过热、滞胀，对股市可能杀伤力可能很强。 货币政策在下半年可能继续保持中性稳健，市场在今年年初是担心货币政策收紧，但下半年这种货币政策收紧的预期可能会缓解。 如果今天大家只记住两句话，我希望大家记住这两句： 第一，房地产长期看人口，跟着人口流动去买房 第二，股票市场是货币的晴雨表。 （详细参考“泽平宏观”会员课程：《股市：抓住大牛市，寻找大牛股》《房地产的终极真相与投资秘诀》） 1文章转摘至公众号：泽平宏观","link":"/2021/06/24/%E7%BE%8E%E8%81%94%E5%82%A8%E7%9A%84%E5%8A%A0%E6%81%AF%E9%A2%84%E6%9C%9F/"},{"title":"美食之酸菜鱼","text":"家庭版酸菜鱼(草鱼)的做法 切鱼肉 清洗鱼肉，分成鱼头、鱼骨、鱼肉片，从鱼头附近抽出鱼线，把鱼肉片用生粉抓匀。 炒鱼骨、炖鱼汤。 用葱、姜炒香鱼骨，变色后加入开水，煮10分钟后用容器倒出鱼汤和鱼骨 炒酸菜。 用葱、姜蒜、泡椒下锅炒香，把切好的酸菜下锅翻炒，也可以再加点黑豆芽；炒到合适把鱼骨倒入锅内继续炖煮，合适后鱼骨和酸菜用漏勺取出来放在陶瓷盆里，留一下鱼汤。 炖鱼片 把鱼片下入鱼汤中，加入胡椒粉、白醋少许，鱼片煮1分钟后 就可以捞出，倒入鱼骨和酸菜的盆中，在上面倒入葱花、白芝麻、辣椒面。 油泼辣子 锅里倒入宽油，再倒入辣椒段爆香，最后油泼在葱花、芝麻、辣椒面上即可完成这道酸菜鱼","link":"/2022/01/14/%E7%BE%8E%E9%A3%9F%E4%B9%8B%E9%85%B8%E8%8F%9C%E9%B1%BC/"},{"title":"股息率","text":"分红、股息、估值之间的关系 这些都是在股价波动之外的知识，除了股价波动的技术分析之外，这些决定股价波动的因素更应该了解。 分红 上市公司从上一年的税后净利润中拿出部分现金回馈给大股东，这种形式被称作分红。 分红率 比如2021年上市公司的税后净利润是1000万元，公司拿出500万元现金回馈股东，那么分红率就是500/1000=50% 股息 股东通过现金分红得到的收益就叫做股息，股息就是把分红收益分摊到具体的一定数量的股票上，一般是每股分红多少。一般上市公司有固定的模式，比如每10股分红1元， 那么计算下来，每股就是0.1元 股息率 股息率=每股分红收益/当前股价 估值 十年期国债收益率（中国市场的无风险收益率） ​ 除了股价波动的差价之外，股息率大于十年期国债收益率也是不错的标的","link":"/2022/01/21/%E8%82%A1%E6%81%AF%E7%8E%87/"},{"title":"自动挡汽车停车操作顺序","text":"自动挡汽车的停车操作顺序 坡道停车操作顺序： 1234561.踩下刹车让车子挺稳2.保持脚刹状态将变速箱档位挂入空挡，然后直接拉起手刹3.松开脚刹，让车子在空挡加手刹状态保持不溜车的状态4.再次踩下脚刹，将变速箱档位挂入p档，松开刹车5.关闭发动机6.打开车门，此时会听到一个&quot;哔&quot;的一音，表示着关闭部分车载电器。如果长时间坐在车子里，最好开一下车门，关闭部分电器，再关上车门等待，否则一部分电器的开关并没有关闭，会浪费车子的电瓶。 平地停车操作顺序 1234561.踩下刹车让车子停稳2.保持刹车状态并直接将变速箱档位挂入P档3.拉起手刹（在平地其实不拉手刹也无所谓，如果在东北地区极寒天气下最好不拉手刹，防止第二天手刹被冻住）4.关闭发动机5.打开车门，听到哔的一声，关闭车载电器。 不过我基本上使用的第一种方法，无论是平地还是坡道，都是停车、空挡、手刹，再松开脚刹卸掉力量，让车子处于平稳状态，最后在踩下刹车挂入p挡，开门听到”哔”一声，车载电器关闭，此时可以锁车走人，也可关门在车上等待。","link":"/2022/04/05/%E8%87%AA%E5%8A%A8%E6%8C%A1%E6%B1%BD%E8%BD%A6%E5%81%9C%E8%BD%A6%E6%93%8D%E4%BD%9C%E9%A1%BA%E5%BA%8F/"},{"title":"英文音频抓取和翻译","text":"关于自己学习英文视频或者音频的一点方法和工具 除了阅读文档之外，可以寻找常用的英文视频和音频资料来学习英语听力。而大部分人都很懒，每天在学习强国上提供的英语新闻也不错。刚开始听不懂，首先是词汇量不够，其次就是英语的听力训练还不够。基于这样的资料，一开始就直接听原文的感觉收获并不大，因为词汇量和听力都没有达到一定相应的水平，这样训练提高不会很快。于是自己就琢磨，可以先把视频或者音频的资料通过录制的手段，把他转化成英文的文档，同过自己阅读、朗诵这个英文文档，首先可以扩大词汇量，然后通过朗读的方法来实现读和听的同步，长期坚持的话，词汇量扩大了，听力慢慢能跟上就好。 具体用到的工具如下： 可以在学习强国的计算机网页端播放，使用Windows自带的录音机录制音频，录制完成可以导出音频文件，默认为.m4a的音频格式。 这个.m4a的音频格式并不常用，可以使用万兴优转这个工具来完成格式转换。万兴优转转换工具默认是视频格式的转换，但是也是支持音频转换的。具体操作如下图： 对于本来就是常用格式的视频或者音频，可以直接上传到【网易见外】的工作台，这个工具是免费的，只要注册有网易邮箱的账号，使用网易邮箱账号登录网易见外工作台即可，登录网址为： https://jianwai.youdao.com 。具体功能模块如下图：","link":"/2022/02/05/%E8%8B%B1%E6%96%87%E9%9F%B3%E9%A2%91%E6%8A%93%E5%8F%96%E5%92%8C%E7%BF%BB%E8%AF%91/"},{"title":"获取windows文件夹的权限","text":"取得windows下受保护文件及文件夹的权限的方法(总体思路：1、先成为该对象的所有者。2、再获取该对象的所有操作权限。将当前用户设置为文件夹或者文件所有者，然后获取全部权限。） 如果不清楚当前的用户名，可以在cmd窗口下使用 whoami 命令显示出当前登陆windows的用户名 whoami 不是英文语句&gt; who am i 1.文件夹点击右键，查看属性。再点安全→高级→所有者2.点编辑→其他用户或组，在输入选择的对象名称里面输入你的用户名，再确定3.选择替换子容器和对象的所有者4.点确定，会弹出一个对话框，继续点确定！这样我们就拥有了这个文件夹的所有权特别提醒：不勾选“替换子容器和对象的所有者”，我们就只有这个文件夹的所有权，不会取得子文件夹和子文件夹里面所有文件的所有权5.再点权限→编辑→添加，把你的用户名填入，点确定6.再点击你的用户名→编辑，再勾选“完全控制/允许”，确定7.再勾选“把使用可从此对象继承的权限替换所有后代上现有的可继承权限”。然后点应用、确定、确定、再确定。这样，我们就完全拥有了对这个文件夹的所有权限。","link":"/2022/07/08/%E8%8E%B7%E5%8F%96windows%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E6%9D%83%E9%99%90/"},{"title":"论坛维特拉问题收集","text":"维特拉论坛问题收集加速无力，ESP出现上坡起步辅助功能停止 原文链接：汽车之家|请教:加速无力，出现ESP故障码|维特拉|论坛 (autohome.com.cn) 1出现急加速后类似断油的发动机无法加速，踩下油门踏板无反应，但是没有熄火，y一两秒后基本恢复正常，偶尔急加速后还是会短暂无法加速，前两天仪表盘偶尔出现两次提示“ESP故障”，今天早上上班路上正常加速，突然加速无力，仪表盘中间黄色显示ESP故障码：上坡起步辅助功能停止中。怠速提升至1000转左右，无法加速，只能已5公里速度慢行，后熄火重新启动，长按ESP关闭后基本正常（行驶距离较近了）。 可能是电瓶问题 可能买到了二手返新电瓶，返新电瓶有这个特点^-^ 这个是刹车下的感应器没调好，出厂就没调好，到刹车位置取下护板就可以看到一个开关样的东西，可以调松一圈就没这个故障码了，然后也不会有供不上的感觉，这车厂的工艺问题。 问题解决：感谢各位热心相助，今天去到全国目前唯一官方4S店“上海安亭米泉南路铃木（中国）”，维修小哥热心接待，试车加速只能达到2000转，无法再提高转速，回车间OBD读码，除了电压最高达到15.5伏无其他故障码，去年更换的换瓦尔特Q85也是正品，怀疑发电机故障，拔掉发电机插头继续试车，依然如故，之前说的曲轴箱通风管（PCV管）也没有问题，取下电瓶负极断电再装上连接电脑边跑边试车，我的个天哪！居然恢复正常，国道跑了一圈，接着上高速速随意加速，神奇不神奇！感谢大家，以后如果再出现问题我会持续报道，个人认为是不是前段时间在红绿灯崩了个宝马X5，节气门位置发生变化，或者其他传感器产生过载起了保护？断电重新接上恢复了？ 所以，类似的ESP故障码出现时，可以先断开电瓶负极，再装上后试车，也许问题就解决了。 加速车头传出尖锐气流声，同时动力下降 在汽车之家维特拉论坛上看到的一篇文章，地板油加速时发动机传来连续漏气声音，同时速度下降，在上大坡满载情况下更为明显。车机系统并没有故障灯，如果缓慢加速一切正常。打开发动机盖目测没有异常，发动机油水不缺，汽油也正常。检查底盘，排气管各个接头没有漏气迹象，但是在节气门下方发现有消防微油渍，如下图： 这是pcv软管，连接曲轴箱pcv阀到进气岐管的一根软管。也就是曲轴箱通风系统的管路，具体作用请百度。同时，节气门阀体上和换挡线上的油渍也好解释了，就是曲轴箱里的机油混合气从pcv管的裂口喷出来的。 除了装配原因外，还有就是本身管子有问题，或者就是被化清剂之类的腐蚀了（有部分修理店看到有油渍的地方，直接用化清剂喷几下就完事，但是化清剂对塑料橡胶制品有腐蚀性，所以用化清剂喷之后必须要用流动水冲洗）。 如果确认是由于温造成的，新管安装最好外面用耐高温温胶带覆盖一层，要不然估计还会出现老化破损。 这个问题及解决方案来自汽车之家维特拉论坛车友帖子：[汽车之家|急加速车头传出尖锐气流声，同时动力下降。订的管子已到！|维特拉|论坛 (autohome.com.cn)]( 急加速丢失动力旗舰版维特拉在8万公里的时候出现急加速丢失动力一两秒后恢复正常，经过成都西星铃木试车判断是点火线圈问题，更换四个点火线圈后故障消失。备注：有可能只有一个点火线圈有问题，但4s店必须四个一起换，就直接换了四个。 9万公里左右真空泵故障导致没有刹车轮胎车友发帖地址：汽车之家|广州，国庆躺平睡了七天，回来一开车，没刹车！真空泵挂了|维特拉|论坛 (autohome.com.cn) 12国庆躺平睡七天，上班准备用车，上车感觉有点不对头，但又说不出哪里。点火，顺利，入档，顺利。。前进。。也顺利，走你。。。不对呀。好像没刹车，是真没刹车，硬得像石头一样！根本踩不下去，眼看就要撞到前车，情急之下，挂个空档，猛拉手刹，还好停下来了。--这个是维特拉论坛一个车友的用车描述，真空泵问题导致没有刹车，幸运的是在发车开始阶段，车速不是很快，用空挡加手刹停车了。如果车速快跑起来的话就会危险。 其实，这个刹车出问题之前，是有些先兆的，比如平时踩刹车的时候，会感觉比平时稍硬一些的，还有，如果平时可以原地试试，打着车后，连续两脚脚刹车到底，感觉一下最后一脚会不会特别硬。（别说没打车的时候踩起来很硬，那是没着车，真空泵还没工作，怎么可以不硬呢？） 这个故障是在9万公里左右出现的，所以保守起见可以在9万左右更换一个新的真空泵","link":"/2022/09/22/%E8%AE%BA%E5%9D%9B%E7%BB%B4%E7%89%B9%E6%8B%89%E9%97%AE%E9%A2%98%E6%94%B6%E9%9B%86/"},{"title":"证照换背景","text":"PS更换证件照背景颜色方法一（直接选择背景进行颜色填充） 第一步 打开证件照图片，选择ps里的提供的快速选择工具，分区域、多次选择照片的背景 右键弹出菜单，选择羽化,羽化值选择3-5之间，也可以测试一下其他数值的实际效果。羽化是为了淡化背景与图像之间夹杂的颜色 右键弹出菜单，选择填充，选择合适的颜色确定后就可以更换证件照的背景颜色了 PS更换证件照方法二（提取人像并新建背景图层，将二者合成为一个图像) 第一步 打开证件照图片文件，选中人像区域，ctrl+c,再ctrl+v，生成一个新的图层。或者选中人像之后直接ctrl+j可以新建一个图层。 在图层面板中关闭图层显示的按钮隐藏原来的图层（最初打开的证件照） 选中新建的这个图层，点击ps主窗左侧的前景/背景颜色图标中的背景设置按钮，弹出背景色拾色器窗口，先用鼠标按下上下的滑块，再用左键在颜色面板区域点击选择合适的颜色，如下图： 选择图层/新建/背景图层即可 通过以上两种方法可以实现更换证件照的背景，但是在背景色和人像之间夹杂着最初的背景色，在人像的边缘会有其他的颜色，会影响证件照的效果，如何能消除这些边缘的颜色，实现美化证件照的效果呢 在第一种更换背景的方法里，用快速选择工具选择了背景之后，鼠标右键弹出快捷菜单，选择羽化菜单，设置好羽化数值后可以实现较好的美化效果 按下alt键的同时，用鼠标中间的滚轮放大图像，可以清楚的看到边缘的颜色，此时可以利用ps中体重的图章工具，来复制边缘颜色附近的证件照颜色，达到美化的效果，甚至可以将图章的像素设置为1，手动逐个像素级的修改，这样可以做到最精确的修复效果，但是这个有点麻烦 打开证件照，使用快速选择工具选择好人像，使用ctrl+j生成一个新建的图层，隐藏原来的证照图层，按下ctrl键的同时鼠标左键点击图层面板里的图层缩略图方框，此时就会在编辑窗口显示选中人像的虚线,选择ps主菜单下的【选择\\修改\\收缩】菜单项: 收缩人像的选择区域之后，可以按照设定的1个像素的缩小选区，然后在使用反选，选择人像之外的区域，再使用delete键删除选区就可以删除人像周围一个像素的边缘颜色区域，此时鼠标右键弹出【填充】菜单项，点击颜色选项，再拾色器面板中选择需要的颜色填充背景即可。","link":"/2022/04/09/%E8%AF%81%E4%BB%B6%E7%85%A7%E6%8D%A2%E8%83%8C%E6%99%AF/"},{"title":"调整图片大小","text":"如何调整一张图片的像素大小和图像文件的大小 如果仅仅是调整图片的像素大小，直接使用windows自带的画图工具就可以完成，如下图所示： 如果需要进一步减小生成的图像文件的大小，有两种方法实现，使用压缩工具缩小图片文件大小，也可以使用专业的图像处理软件photoshop或者Gimp一次性修改所有需要修改的图像参数。 专门的压缩工具 https://pngquant.org/ （不过这个是专门应用于png格式的） https://tinify.cn/ （TinyPNG） 微软公司powertoys工具包里包含的ImageResizer，可以在windows资源管理器里批量修改图片尺寸 开源工具 imagine 0.61 https://github.com/meowtec/Imagine/releases Phohtoshop或者Gimp修改图片各项参数,导出为指定的格式。下面是使用gimp修改照片的像素大小、dpi参数，最后导出时设定图片质量以达到压缩文件尺寸的效果： 在熟悉photoshop的基础上，使用为photoshop开发的第三方插件","link":"/2022/03/30/%E8%B0%83%E6%95%B4%E5%9B%BE%E7%89%87%E5%A4%A7%E5%B0%8F/"},{"title":"财务健康及理财规划","text":"检查一下自己的财务状况是否处于健康状态。 只有身体健康，同时保持个人的财务健康，让自己身心健康的进行投资。 想要通过股市实现财富自由，第一步是要在股市里获取第一桶金，比如50万以上的自有长期资金。 如果没有足够的资金，即使你的利润率很高也不解决多少问题，所以在保持财务健康的前提，获取第一桶金很重要。 跑赢大市，实现绝对盈利，通过股市投资解决问题 等到资金再大一点，就需要考虑价值投资的方法，通过投资组合的方式穿越牛熊，保持财富长期稳定增长","link":"/2021/10/11/%E8%B4%A2%E5%8A%A1%E5%81%A5%E5%BA%B7%E5%8F%8A%E7%90%86%E8%B4%A2%E8%A7%84%E5%88%92/"},{"title":"资产与负债的区分","text":"区分资产与负债是制定理财计划的第一步 巴菲特曾说过，任何不能产生现金流的投入都不能称为资产。 比如你购买的汽车，从走出4S店的那刻起，汽车就开始贬值，产生一系列的费用，源源不断的拿走你的现金流，因此，汽车就是你的负债而不是资产。 审视一下你日常生活的消费支出，有多少可以归类到资产，有多少可以归类到负债，建立一个自己的资产负债表，就知道你距离财富有多远。 有了资产负债的概念，就要从日常的消费开始，尽量多的把你的消费输出为资产，减少不必要的消费，减少那些没有任何意义的消费欲望。 积累资金，在经济周期进入危机区间时把现金置换为优质资产，在经济周期进入泡沫区间时把资产变现，如此周而复始才能积累财富。 多学习，理解当下的政策红利在哪里，把握趋势才能积累财富。","link":"/2021/09/06/%E8%B5%84%E4%BA%A7%E4%B8%8E%E8%B4%9F%E5%80%BA%E7%9A%84%E5%8C%BA%E5%88%86/"},{"title":"资产配置启动","text":"2022年是该从新开始了回顾这几年的所作所为，感受到自己在资产规划上的问题。最大的问题把大量的钱都花在购买喜欢的大玩具上了，衣食住行中的衣和行。自从2019年有了车子之后，似乎有了新的动力，开始了新的生活，让自己一成不变的单调生活变得丰富多彩，开始研究车辆、开始购买各种好玩的车辆装备，从ram、威克士、史丹利等各种产品，花钱似流水。 有一天打开京东的账户明细，忠实的记录了所有的账单，让自己都吓一跳，居然这么多，几乎每年所有的工资花在了消费上，当然我的消费分类主要是书本、汽车相关的玩具，包括洗车机等各种玩具，就差修车了。这几年先是买书、囤书，然后是买了Richini的衣服，第三个大项就是汽车相关的消费。 马上到了2021年的年末，再有几天就到了2022年，我自己告诉自己，不能再如此消费了，是时候开始真正的投资生涯了。 首先要有现金流，其次就是坚持配置几只优质的成长股，把现金流的大部分都用在资产配置上，把时间花在投资上，把兴趣放在投资上，还是那句话，把时间花在哪里，你的成就就会在哪里。 立贴为证，从2022开始新的旅程。 ​ super guo 2021年12月28日 ​","link":"/2021/12/28/%E8%B5%84%E4%BA%A7%E9%85%8D%E7%BD%AE%E5%90%AF%E5%8A%A8/"},{"title":"轮迹压点","text":"汽车的轮迹压点 ​ 轮迹压点，指的是车辆行驶中车轮所压到的点位。如何准确判断轮迹压点，这与两前轮的“定位参照点”有着密切联系。同时两前轮定位参照点的选择又与驾驶人身高，座椅调整的远近，车型的不同而有所差异。因此，在这里我们所推荐的参照点仅供参考，驾驶人应根据自身特点在我们推荐的参照点基础上进行微调。通常老司机的习惯做法是，将判断车身距左右侧分道线50公分左右间距的参照点，向内移动15～20公分，即为左右侧车轮的轮迹压点。 左侧轮迹压点定位： 通常左侧A柱窗角位置为左侧车身距分道线50公分左右的参照点，那么，向内移动15～20公分，即为左侧车轮的轮迹压点。 右侧轮迹压点定位： 前风挡玻璃中心位置为右侧车身距分道线50公分左右的参照点，那么，向内移动15～20公分，即为右侧车轮的轮迹压点。 文章转自[驾驶培训时超英]","link":"/2022/02/23/%E8%BD%AE%E8%BF%B9%E5%8E%8B%E7%82%B9/"},{"title":"通俗理解通胀通俗滞涨","text":"通胀、通缩、滞胀环境下如何保住自己的财富？ 闲话少叙，先看三个事例，帮助通俗理解何为通胀、通缩、滞胀。 通胀 起初，市场上100袋大米，货币100元，1袋大米1元。 期间，央行增发100元，充足流动性有助于生产力提高，市场增加60袋大米。 最后，市场上160袋大米，货币200元，1袋大米1.25元，通胀率25%。 通缩 起初，市场上100袋大米，货币100元，1袋大米1元。 期间，需求降低，人们只愿意拿出80元消费。 后来，市场上100袋大米，货币80元，1袋大米0.8元，通缩率20% 再后来，人们看到商品价下跌，期望能在将来以更低的价格买商品，消费意愿继续降低，市场流动性逐渐降低，经济会因此而萧条崩溃。 滞胀 起初，市场上100袋大米，货币100元，1袋大米1元。 期间，央行增发100元，经济增长周期性停滞，生产力没有提高。 后来，市场上100袋大米，货币200元，1袋大米2元，通胀率100%。 以上三个事例分别解释了通胀、通缩和滞胀。 我们可以发现，这三种情况，只有通胀是比较正面的。虽然物价上涨25%，但是经济得到了发展，生产力有所提高。 通缩环境下，大家消费需求形成恶性循环逐渐下降，经济增长也随之陷入停滞萧条。而经济不增长导致大量企业倒闭，失业率上升，民众收入减少，需求进一步降低，恶性循环下最终会走向崩溃。 滞胀往往发生在长期通胀后，经济增长也周期性停滞。如果继续增发货币，会导致通胀加剧；如果加息收缩货币，长期处于货币宽松环境下的企业很可能会大规模崩溃。真是进退两难！此时只能靠财政政策刺激来走出困境。 综上，大家可以发现，长期温和的通胀是比较适宜的经济环境。 现实中，经济不可能处于长期稳定的状态，也就有了货币宽松、紧缩的周期。而从局部来看，也可能出现结构性通缩、结构性通胀的情况。 而真实的经济环境是通缩、通胀还是滞胀，其实并不能纯看统计数据。只有深处生活中的我们才会有更直观的体会。 那么这三种环境下，如何投资保住自己的财富呢？ 经济增长我们肯定是要投资股市的，毕竟股票可以认为是经济未来增长的折现。另外，就是房产投资，经济增长会带来民众真实购买力和投资需求的提升。 货币宽松的情况下，我们要投商品、黄金，生产力少即供给少，而货币供给多，实物价格会上涨。 通缩环境下，持有现金，或者投资安全性高的债券，只有货币值钱。 结合我们上面的举例，其实逻辑是比较清晰的。三种环境下的适合的投资品类如下所示。 转自： 雪球 (xueqiu.com)](https://xueqiu.com/6253866126/145336360)","link":"/2021/08/17/%E9%80%9A%E4%BF%97%E7%90%86%E8%A7%A3%E9%80%9A%E8%83%80%E9%80%9A%E4%BF%97%E6%BB%9E%E6%B6%A8/"},{"title":"通胀和通缩的简单理解","text":"通胀和通缩的简单理解从一些简单的概念来说说。 通货，就是一般等价物，通常来说就是货币。 商品就是用来进行交易的产品或者服务。 通货的基本作用是帮助商品进行交易的方式，每一个商品都可以用通货来进行计价。 所以每个商品都有以货币为单位的一个价格。 通货膨胀就是指商品数量不变的情况下，货币总量增加了。 通货紧缩就是商品数量不变的情况下，货币总量减少了。 通货膨胀的结果就是商品价格上涨，通货紧缩的结果就是商品价格下降。 这是从商品和货币的比例关系来说的。如果从经济现象解释的话，适度通胀指的是物价上涨，货币流动性好，企业扩大生产规模，整个社会发展处于积极向上的状态。过度的通胀则会是经济周期性见顶，基础性的生产资料价格飞涨，企业生产成本加大，利润减少，企业和个人负债接近峰值，导致消费力趋于饱和，经济发展开始停滞，慢慢接近滞涨的阶段。在往下发展就会处于通缩阶段，居民负债过多，没有了消费量，企业的产品卖不出去，投资收益大幅下降导致经济活动趋于下行，大量企业倒闭，工人失业，处于去产能、去库存的阶段。 经济复苏，适度通胀，通胀，严重的通胀，滞涨、通缩、萧条。这些似乎构成了一个经济循环的周期。类似一年四季，在春夏秋冬之间轮回。 链接：https://www.zhihu.com/question/303211321/answer/537142320来源：知乎","link":"/2021/08/17/%E9%80%9A%E8%83%80%E5%92%8C%E9%80%9A%E7%BC%A9%E7%9A%84%E7%AE%80%E5%8D%95%E7%90%86%E8%A7%A3/"},{"title":"铸币税","text":"铸币税（英文：Seigniorage）亦称**货币税**，指发行货币的组织或国家的政府，享有货币发行面值减去发行成本后，换取实际经济资源的利益，从中攫取发行货币所产生的特定收益。这部分由货币发行主体垄断性地享受“通用货币面价值超出生产成本”的收益，就被定义为铸币税。 如：中央银行印制一张有多重防伪设计，且质感极佳的1000元纸钞，而平均成本只有10元，那么，剩下的990元购买力，就由中央银行或有发行权者独享，称为铸币税。 货币的逻辑 12345678大家有没有想过，现代货币是一张张花花绿绿的纸质印刷品，为什么就可以兑换食物、汽车、房子、私人飞机等世界上所有有标价的商品？纸张本身可是很廉价的。为什么纸币可以买东西，而维达只能擦鼻涕？这是因为国家信用对纸币价值进行了担保，所以你拿一张张花花绿绿的纸就可以换来汽车、房子等。而收了你钱的人，可以继续用它去兑换别的东西。在移动支付出现以前，货币必须要有实物载体，这个过程伴随人类文明几千年。在货币历史上，出现过贝壳、羽毛、铜铁、黄金等，直到上个世纪布雷登体系崩溃，美元和黄金脱钩，货币变成只以国家信用支撑的纸币时代。当时的封建政府还没有能力控制好发行量，再加上各种巨额财政开支，政府开始不限制发行货币，最终导致通货膨胀，政府和纸币信用丧失，纸币变成废纸，货币体系崩溃。回看历史 ，最初货币发行产生于民间，然后发行权被政府收归，但是政府总是会把货币体系玩坏，演变到现代，货币发行权由中央银行垄断。不过对于老百姓来说，由谁发行不重要，重要的是谁能保证货币的独立、稳定和公平。这也是我对比特币的理解，设计者一开始或许只想在虚拟世界打造一个货币理想国。货币的逻辑古代，铺户发行的交子本质上是一张张欠条，即负债。打个比方：铺户金库存有1两黄金，于是发行了等价的交子，这些交子不是见人就给，也不是撒在街上等人捡，而是用它去购买资产，如一匹马...于是等值一两黄金的交子就进入了流通领域。但是为什么铺户给我几张纸，我就把实实在在一匹马给他？因为这张纸后面有铺户的信用，有一两黄金做信用支撑。我收到交子后马上拿它去买了一间房子，支付的过程本质上是一种债券转移，我把铺户欠我的一两黄金转移给了别人，如果谁要兑付，就拿着交子找铺户兑。就这样，商品通过一张纸币（欠条）流通起来。时间拉到现代，铺户变成了央行，交子变成了人民币，而支撑交子的黄金变成了国家信用。一些国家的货币上还印有央行行长的签名，我们可以理解为是欠款方负责人在欠条上签字。21世纪，移动支付普及以后，货币的基本逻辑更加显现，就是记账。我们现在买东西再也不需要任何实物（纸、黄金）作为完成货币职能的载体，微信里直接输入价格或是扫码，支付成功后系统直接做一笔负债转移，这些交易信息腾讯都会和银行同步。顺着上面的逻辑我们可以推演出人民币就是央行发行的负债，人民币背后能兑付的东西就是央行的资产。那央行的资产又是什么呢？可以在央行官网查询，绝大部分是外汇， 当央行的外汇储备下降的时候，对人民币意味着什么。货币的发行货币并不是简简单单印制发行就可以的，在金属货币时期，货币可以自由铸造、自由流通，那是因为金属货币本身有足够的内在价值。但是纸币产生以后，发行变得非常复杂，一方面要满足经济需要，一方面要防止纸币泛滥。为此，各国央行制定了一整套发行制度，包括发行机构、发行限额、保证制度及批准程序等。那么怎么衡量一套好的货币机制呢？那就是动态满足经济增长需求，促进经济增长，维持物价稳定，充分就业，这应该是所有国家的货币政策都在追求的目标。汇率取决于市场，更取决于国家实力！这也是我对比特币避而远之的原因，没有国家信用加持的货币形同如纸。","link":"/2022/06/08/%E9%93%B8%E5%B8%81%E7%A8%8E/"},{"title":"安装win7-win10双系统","text":"​ 因工作环境需要，要在一台电脑上安装winodws7和winodws10双系统。几年前安装好了，一直很稳定，直到今年实在慢的不行，重装。但是不记得当时的安装方法了，安装方法各式各样。记得以前研究了一一阵子微软官方文档关于多启动的知识，时间久了不记得那些细节。所以感觉还是学习某个知识之后，用自己的语言总结要点记录下来，以后再需要的时候很快上手，节约自己的时间，尤其是这几年单位的网络环境复杂之后，各种问题需要解决，解决之后如果没有总结记录，时间长点再遇到又不记得了。今天分享自己另外一种win7、win10双系统的安装方法，记录下来。 首先安装windows7 一般情况是在现有windows7正常使用的情况下，有了windows10的需求，而不是反过来，毕竟windows7使用的早，而且时间久。至于windows7的安装方法，可以采用原版安装镜像文件安装，也可以使用自己封装的或者别人封装好的系统恢复系统，两种方法都可以，后者可能不需要安装驱动，尤其对于多年的旧机器更好点，毕竟配套的驱动不好找。 然后安装Windows10 使用Winpe启动系统，格式化目标分区，然后使用原版安装的方法，选择windows安装，而不是镜像复原。如下图所示： 1通过这种方法安装好windows10之后，甚至不需要修复启动文件，直接就显示了双系统的菜单，一个是windows10，另外一个是Windows7。就这么简单 至于其他的安装方法，如果有时间也可以折腾一下再记录，现在有点懒，这就不错^-^。","link":"/2022/10/19/WindowsInstall/win7-win10%E5%8F%8C%E7%B3%BB%E7%BB%9F/"},{"title":"angular的基本概念","text":"angular的基本概念Angular - Introduction to Angular concepts modules component template data binding directives routing sevices and independcy injection Angular - Introduction to services and dependency injection https://angular.io/generated/images/guide/architecture/overview2.png","link":"/2022/10/09/angular/angular-concepts/"},{"title":"angular学习笔记之模板语法","text":"angular的template syntax在angular的component中，html template包括标准的html元素和angular扩充的语法部分。在模板中主要有一下几种书写形式： {{item.name}} *ngFor 一个迭代器，在本例中为items数组中的每一个item创建一个列表&lt;li&gt; &lt;/li&gt; (click) 主要用于事件绑定 [item] component中的一个property数据。 &lt;app-hero-detail&gt; &lt;/app-hero-detail&gt; component的selector,书写在父组件的html template中时，可以在父组件中显示这个子组件视图(view) 1234567891011121314151617&lt;h2&gt; hello world &lt;/h2&gt;&lt;p&gt;&lt;em&gt;Select item from list to see details.&lt;/em&gt;&lt;/p&gt;&lt;ul&gt; &lt;li *ngFor=&quot;let item of items&quot;&gt; &lt;button type=&quot;button&quot; (click)=&quot;selectitem(item)&quot;&gt; {{item.name}} &lt;/button&gt; &lt;/li&gt;&lt;/ul&gt;&lt;!-- [item],用方括号包裹item,用来告诉angular:item是当前selector标识的component的一个property:item.这个selector是&lt;app-item-detail&gt; &lt;/app-item-detail&gt;--&gt;&lt;app-item-detail *ngIf=&quot;selecteditem&quot; [item]=&quot;selecteditem&quot;&gt;&lt;/app-item-detail&gt; template的一部分代码段，仅仅用来演示和说明component中的模板语法写法。","link":"/2022/10/09/angular/angular-template-syntax/"},{"title":"angular学习笔记之一","text":"angular学习笔记之一 angular是什么 angular 是一个基于TypeScript的web前端开发平台，是基于组件技术的用来构建可扩展程序的框架，拥有一套工具帮助用户完成项目的构建、测试。 组件技术 angular的设计架构是基于component,每一个component定义了一个包含应用程序逻辑和所需数据的类，并且关联一个显示界面的的HTML模版，还有一个对应的style.css（一个组件控制一屏幕上的一小部分，可以称作为为视图。它由一个TypeScript类、一个HTML模板和一个CSS样式表组成。TypeScript类定义了HTML模板和渲染的DOM结构之间的交互，而样式表则描述了它的外观）就是下面三个部分： 由@Component 装饰符指定的TypeScript类（*.ts），负责数据(property|attribute)和方法（Funtion|Method)。 一个HTML模版文件(*.html)，负责用户界面。这个angular模版实际上是标准的HTML元素加上angular特有的符号扩充。当然，在最终的HTML显示之前，这些扩充由angular框架解释和修改。关于component 和template，请阅读:Angular - Introduction to components and templates 一个样式文件(*.css)，负责样式装饰 示例： 12345678910import { Component } from '@angular/core';@Component({ selector: 'hello-world', templateUrl: './hello-world.component.html' styleUrls: ['./hello-wordl.component.css']})export class HelloWorldComponent { // the component's behavior.} 这个是component组件的.ts文件代码，其中元数据包括三个部分：selector,templateUrl,styleUrls。 selector实际上这个组件的标识，就像在Html文件中使用标准的标记一样，在组件的模版中使用，示例： &lt;hello-world&gt; &lt;/hello-world&gt;，使用方法和普通的tag一样，只不过这个是在anglular中自定义的，当angular渲染这个组件时，最终的DOM就像下面这个样子： 123&lt;hello-world&gt; 组件模版文件中的内容，也就是'./hello-world.component.html'文档中的内容显示在这里，CSS使用的是'./hello-wordl.component.css'渲染&lt;/hello-world&gt; templateUrl 每个component有一个HTMl模版文件，用来定义这个组件如何布局和渲染的，可以使用内联模式或者指定html文件路径两种方法。 总结：component中html模版文件和component class类之间的通讯方式，是在类中提供数据和方法，在HTML模版中使用component class的selector作为标签，使用class的元数据指定的模版文件进行布局和渲染。在HTML模版文件中从component class 获取数据的三种方法： NaN 假定这个class-message是component class中的一个property，在html模版中用双花括号包裹这个property就可以获取数据。 attribute 绑定。 1234&lt;button type=&quot;button&quot; [disabled]=&quot;canClick&quot; (clcik)=&quot;HelloWorld()&quot; &gt; hello world &lt;/button&gt; 把文档对象的property用方括号包裹起来，成为property绑定。 事件绑定。 声明一个事件响应器来回应用户在文档对象上的操作，比如鼠标单击、选中，键盘输入或者触摸屏的操作。上面那个带括号的（click）就给click事件关联到component class中的一个方法，在用户单击组件时调用这个方法。 总之，在componnet的html模版文件中，从class中读取数据和方法，使用方扩号[]实现property绑定、圆括号（）实现事件绑定。 数据绑定在component和template之间起着重要的作用，同时在父组件和子组件之间的通讯也扮演者重要的角色。 component中selector的理解 原文的解释：matches the name of the HTML element that identifies this component within a parent component's template.我的翻译：在父组件的HTML模版中，用来匹配标识这个子组件的HTML元素名称。也就是说在父组件的HTML模版文件中，使用&lt;selector-name&gt; &lt;/seletor-name&gt;来标识引用的子组件，凡是看到这个和常用HTML 元素写法一样的组件selector，就是实例化这个子组件。感觉angular的component组件技术就是类似HTML的各种元素(element),就是一个自定义的元素，通过一个类来包含数据和方法，然后可以在html文件中和普通的html元素一样的写法来使用，比如: 12345&lt;p&gt; hello woril &lt;/p&gt;&lt;h&gt; hello world &lt;/h&gt;&lt;div&gt; hello world&lt;/div&gt;&lt;app-component&gt; hello world &lt;/app-component&gt;可以在&lt;p&gt;..&lt;/p&gt; 、&lt;h&gt; &lt;/h&gt;、&lt;div&gt; &lt;/div&gt;中使用元素的property,和方法等。这些property、methon不就是来自类里的property和methon吗？只不过我们平时直接使用这些标准的标签元素及property等，从来没有思考过它的内部实现方式。而现在angular的component也实现了在html模版文件中和标签元素同样的书写方法，反过来说那些标准的、我们习以为常的标签元素，内部实现方法是不是和angular的component类似呢?也许是因为我没有学习过html内部实现的具体方法，现在只能猜测，继续学习吧^-^ 更详细的理解可以参考angular文档： Angular - What is Angular? Angular - Introduction to Angular concepts Angular - Introduction to components and templates Angular - Setting up the local environment and workspace Angular - Getting started with Angular Angular - Tour of Heroes application and tutorial 可以在angular的官方网站下载到Example源代码（https://angular.io/guide/example-apps-list），解压后： 123451、在windows10的CMD窗口下切换到这个项目目录2、npm install --安装需要的npm包3、ng serve4、http://localhost:4200","link":"/2022/10/07/angular/angular%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%85%A5%E9%97%A8/"},{"title":"share data between child and parent directives and components","text":"[ Sharing data between child and parent directives and components ](Angular - Sharing data between child and parent directives and components)","link":"/2022/10/04/angular/share-data-between-child-parent/"},{"title":"常用git命令","text":"常用git命令 从远程仓库下载项目到本地 1234567git clone git@github.com:username/repo_name.git git clone https://github.com/username/repo_name.git --两种方法任选一种，推荐使用第一种。git add .git commit -m &quot;your-comment of updates&quot;git push origin local-branch:remote-branch --简写： git push origin 在本地新建项目提交到远程的新建空仓库 1234567git init --初始化本地项目，自动新建一个.git目录，该目录是隐藏的，需要打开资源管理的隐藏选项才能看到。在git init之后可以使用git status，可以看到已 --经显示了一个main分支。git add . --把本地的项目目录添加到新目录下，然后运行这条命令git commit -m &quot;update&quot;git remote add origin git@github.com:username/repo_name.git git push -u origin main --第一次推向空仓的时使用-u参数，以后就不用了。 --第二次以后推送： git push origin 注意，这里说的是在github上新建的是空仓，也就是没有初始化的仓库（新建时没有包含readme文件），如果包含readme文件后，在上面的推送步骤就会提示错误，大概意思是远程有一些变动，在本地没有，需要合并后再推送。需要用带有--reabase参数的git pull 执行合并，然后再推送到远程就可以了。 git pull --rebase origin main 查看分支 123git branch --查看本地分支git branch -r --查看远程分支git branch -a --查看所有分支 查看当前工作状态 1git status --经常查看状态，可以看到当前工作的提示信息 回退到指定版本 1234git log --按时间顺序显示commit的历史记录,ctrl+insert复制指定的commit右侧的编码，比如：6a1d37153862a468f773762e38a29180f4db4467git reset --hard 6a1d37153862a468f773762e38a29180f4db4467 --shift+insert粘贴编码git push -f origin main --这里最后的参数是指定的分支名称 删除分支 1234567 git branch -d branch-name --删除本地分支 git push origin --delete remote-branch --删除远程分支 --或者:git push origin :remote-branch --用本地空分支推送到对应的远程仓库分支,也可以删除远程分支* 在新建一个github仓库时，如果包含了readme来初始化仓库时，把本地项目推送到github时，会提示禁止推送，远程有工作需要和本地合并。因此，需要先使用`git pull --rebase origin main `合并远程仓库。* git-bash 小技巧 1、经常在git-bash 中使用cd /.ssh,其中的带表着当前用户目录，时间久了不用git的话，也许会忘记。 2、在git-bash命令终端里复制和粘贴快捷键： ctrl+ins –复制 shift+ins –粘贴在git-bash 窗口 –当然如果要粘贴在windows还是直接ctrl+v –因为有的连接路径很长，可以复制和粘贴的话可以减少错误 1234567891011121314 * git remote * git remote add origin git@hugo:username/username.github.io.git 添加一个指向远程github仓库的连接，别名为origin * git remote remove origin 这个命令用来删除错误的或者不需要的连接 * 新建一个独立分支 git checkout –orphan gh-pages echo “hello world” &gt; readme.md –在分支下新建一个readme.md文件 git add . git commit -m “add orphan branch” git push origin gh-pages:gh-pages –当然，冒号后边的gh-pages可以省略，远程会自动建立与本地同 –名的分支，这里是明确一下本地和远程分支的对应关系。 git branch -a –通过git-add-commit-push ，这里才能查看到新建的独立分支 最后可以把gh-pages分支下除了.git目录之外的所有内容删除，建立分支时会默认复制main分支的内容。然后再使用git-add-commit-push这个流程，可以把远程的的gh-pages分支内容也删除掉。 git checkout main –切换到main分支，可以看到main分支下原有的内容","link":"/2022/10/29/git/%E5%B8%B8%E7%94%A8git%E5%91%BD%E4%BB%A4/"},{"title":"关于github pages的初步认识","text":"初步认识Github Pages 个人和公司类型的github pages应用。 github免费为个人和公司的静态网页展示提供托管，提供username.github.io形式的网络解析。一个账户只有一个这样的地址空间。 项目类的github pages。通过设置每个仓库项目的pages，可以通过仓库项目的发布来源分支来源文件夹，可以在https://username.github.io后面直接加上仓库名称就可以直接展示项目的主页 https://username.github.io/repo-name，repo-name是仓库的名称。开启github pages服务的界面如下图： ​ ​ ​ 可以把每个项目仓库的根目录下或者docs目录、或者其他自定义的目录作为发布源，github pages服务就会为这些目录的静态网站信息提供解析，只需要一个username.github.io的名字，当然你可以购买自定义的域名，在github里设置。","link":"/2022/10/29/github/%E5%BC%80%E5%90%AFgithub%E4%BB%93%E5%BA%93%E7%9A%84GithHubPages%E6%9C%8D%E5%8A%A1/"},{"title":"Hexo到github的自动发布","text":"重新实现Hexo博客到github的自动发布一直正常的从本地的hexo项目根目录推送到github的hexo-source仓库，根据仓库目录下的workflow文件脚本实现远程的编译、创建、发布到在github的个人站点主页(username.github.io)。不知何故，一个错误信息出现，找了好久没有解决。今天把项目.github\\workflows\\目录下的hexo-actions.yml内容重新修改了另外一个版本，重新配置了源码仓库的Secrets和静态站点仓库的Deploy Keys，顺利成功。没时间，先简单记下大概步骤，以后再详细完善。 ssh-keygen -t ed25519 -C “username@126.com“ 生成一对秘钥:公钥id_ed25519.pub和私钥id_ed25519 把公钥添加在仓库的Deploy Keys 下，把私钥添加在Secrets的actions下。 有空试试Secrets下新增环境变量和没有环境变量的区别（没有环境变量，直接建立仓库secret的话，只是在环境管理下面不显示列表吗？） 或者不新增环境变量，直接新建仓库secret，然后记住仓库secret的名字，在workflow脚本里引用时直接使用secrets.hexo_deploy_xxx的格式。 这个图显示hexo-source仓库里只有Repository Secret，把env_hexo的环境变量删除了，经过测试，依然可以正确的自动化发布。估计环境变量下的多个secrets的应用范围是账户级别的，而仓库级别的Secret只要访问指定的仓库就可以。 把hexo 项目根目录下的_config.yml文件Deploy部分修改一下： type: git repo: git@github.com:username/username.github.io.git branch: main 12345678910111213141516171819202122232425262728293031323334353637383940414243name: Hexo Deployon: push: branches: - mainjobs: build: runs-on: ubuntu-18.04 if: github.event.repository.owner.id == github.event.sender.id steps: - name: Checkout source uses: actions/checkout@v2 with: ref: main - name: Setup Node.js uses: actions/setup-node@v1 with: node-version: '12' - name: Setup Hexo env: ACTION_DEPLOY_KEY: ${{ secrets.HEXO_DEPLOY_SECRET2 }} run: | mkdir -p ~/.ssh/ echo &quot;$ACTION_DEPLOY_KEY&quot; &gt; ~/.ssh/id_rsa chmod 700 ~/.ssh chmod 600 ~/.ssh/id_rsa ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts git config --global user.email &quot;xxxxx@126.com&quot; git config --global user.name &quot;username&quot; npm install hexo-cli -g npm install - name: Deploy run: | hexo clean hexo deploy 就是这么多，直接推送，成功了，细节以后再整理吧。","link":"/2022/10/27/hexo/hexo%E5%88%B0github%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83/"},{"title":"hexo 新建文档的方法","text":"在git命令行窗口新建hexo文档的方法 hexo new “title” 刚开始使用hexo 的时候，一直使用这种方法新建文档，默认在source/_posts目录下生成以title为文件名的title.md文件。随着文档越来越多，没有目录的分类，所有文档都在source/_posts目录下，查找、编辑起来很费劲。通过查找[hexo官方文档](指令 | Hexo)，经过摸索使用下面另外一种发法，可以实现在source/_posts目录下生成自定义的目录和markdown文件。 hexo new --path dir-name/file-name.md &quot;title&quot; 这样就会在source/_posts目录下新建一个dir-name目录，保存生成的file-name.md文件。如下图： 如果要在文档中引用图片文件，和文档同目录下的同名目录下图片却无法正常显示，只能想办法把要引用的图片文件放在source/images目录下，图片文件也可以分类存放，在markdown文件中引用时指定对应的目录和文件路径即可。不知道为何在同位置的目录下放置图片，发布后不能正确显示图片，只能分类放在sources/images/目录下，引用时使用![img](/images/dir-name/filename.png)。hexo文档里有带有page作为参数的hexo new ： hexo new page --path _posts/dir-name/filename.png。生成对应的文件和目录，但是在文档里引用同名目录下保存的图片文件，发布后仍然不能正常显示。通过这样的方法，可以在_posts目录下分类组织各类markdown文件，便于查找和编辑。","link":"/2022/09/22/hexo/hexo%E6%96%B0%E5%BB%BA%E6%96%87%E6%A1%A3%E6%96%B9%E6%B3%95/"},{"title":"在github上托管hexo笔记","text":"在github上托管hexo笔记的详细记录以前刚学习git、github、hexo时，没有养成记笔记的习惯，把所有的问题解决之后，终于把自己的笔记自动化同步到github上，感觉很有成就感。没事就记录一段发布到远程github，然后欣赏一下，感觉很好玩。而且学会了在一台机器上（或者多台不同场景下的电脑）用git管理多个github账号，很好玩，终于可以在任何地方都可以书写笔记并推送到github。知道有一天，在学习python时，发现gitbash命令窗口下的各种git命令不能执行了，即使ls 这样的命令都能弹出 command not fount的错误信息，把环境变量设置个遍也没有解决问题，无奈准备再装个双系统或者虚拟机，专门为自己的笔记准备个环境，到现在也没有搞明白为甚么会出现这个问题。忽然间发现在windwos的cmd窗口下，居然可以执行git、hexo的所有常用命令，上帝关闭了一扇门，一定会在另一个地方给你个出口，就是这么神奇，哈哈。实在找不到问题的根源，大不了我重装系统，从头再来。 1就是这个从头再来不要紧，忽然想不起来当时是怎么把笔记自动化推送到github上，当然，还有个大致的印象，现在想起来，应该早点把笔记记录下来。从这一点说，以后有稍微复杂点的知识，一定要事后总结记录，节省时间，提高效率，实在想不起来，搜一下笔记就完事。 所有就有了下面这段笔记** 首先要解决顺畅访问github的问题至于如何注册和使用github的问题，有另外一段笔记，这里就不在重复记录。 在本地使用git来管理github ssh-keygen 生成密钥对 在github中填写密钥信息 如何管理多个github账号 如果在新的机器上使用git管理github。 安装和使用hexo 安装hexo 创建hexo 项目 新建笔记 发布到github","link":"/2022/10/19/hexo/%E5%9C%A8github%E4%B8%8A%E6%89%98%E7%AE%A1hexo%E7%AC%94%E8%AE%B0%E7%9A%84%E8%AF%A6%E7%BB%86%E8%AE%B0%E5%BD%95/"},{"title":"如何快速重建hexo博客","text":"快速重建托管在github的博客不知道哪个原因，自动发布在github上的博客不能正常发布了，查了后台的actions细节，有个错误代码，好长时间没有解决，平时只是写文章然后推送到github。 干脆回到最初的手工状态。时间久了可能会不记得那些细节，把所有需要的步骤做个备忘： 1234567891011121314151617--安装工作安装git ： 只选择采用main分支，其他默认一路回车。安装node.js 默认一路回车安装hexo ： npm install -g hexo-cli --配置用户和邮箱git config --global user.name &quot;xxxxx&quot;git config --global user.email &quot;xxxxx&quot;--生成密钥对ssh-keygen -t ed25519 -C &quot;你的邮箱&quot; --以前的-t rsa以后慢慢不支持了吧，不确定，就用-t ed25519clip &lt; ~/.ssh/id_ed25519.pub 把公钥输出到剪切板，然后登录github,在github右上角弹出的settings，然后点击ssh ，把以前的ssh删除，再新建ssh，把剪切板的内容粘贴保存，新的公钥就保存好了。或者不用clip &lt; 的方式输出公钥文本，它就是个文本文件，保存在当前用户目录下（在gitbash里，用~代表当前用户目录，比 cd ~ ,或则 cd ~/.ssh 密钥对文件默认是保存在当前用户的.ssh目录下的）私钥可以在推送项目到github之前添加,在推送之前把私钥添加给ssh代理，否则显示没有权限 eval $(ssh-agent -s) --启动ssh-agent ssh-add ~/.ssh/id_ed25519 --添加成功后会显示当初生成密钥对设置的邮箱注释信息 hexo 在本地生成静态文件 12345--生成静态文件放在public目录下。hexo g --如果想在本地浏览新发布的文章hexo server http://localhost:4000 推送hexo 到github 123456789101112131415161718192021222324252627--毕竟是个人的笔记记录，没啥重要的数据，直接在github仓库settings里，在最下边选择删除这个仓库，然后再新建一---个仓库，名称为username.github.io,不要选择任何选项，不要选择增加readme文件，这样生成的是一个空的仓库。---根据最后显示的操纵步骤： git init git add . git commit -m &quot;&quot;xxx git branch xxxx 如果有了分支，就不用创建 git remote add origin git@github.com:username/username.github.io.git 第一次发布要建立链接，以后不用。 --在推送之前把私钥添加给ssh代理，否则显示没有权限 eval $(ssh-agent -s) ssh-add ~/.ssh/id_ed25519 git push -u origin main 。第二次以后推送就用git push origin ,第一次要把两个分支对应起来。或者更全面的写法： -- git push -u origin main:main ,当然两个分支名称可以根据实际情况写。 --上面的步骤是从头设置项目的步骤，正式写博客时就不必了。 --所有工作完成以后，以后写文档的动作如下： hexo new --path dirname/filename.md &quot;your title&quot; --新建文档，在source/_posts下编辑文档 hexo g --生成到public目录 --这里记得要切换到public目录下 git add . git commit -m &quot;update&quot; git push origin 有点懒了，还没有刚开始学习的时候玩的顺，先这样，以后有兴趣再折腾换个喜欢的主题，再设置在后台自动化发布。就和以前的设置一样，两个分支，一个source分支存放整个hexo项目源文件，另外一个分支用来发布静态网页。比起以前要麻烦不少，不过熟悉了，就是3行命令的事情，小意思^-^。或者把hugo笔记也发布起来，看那个更有效率。那个github后台的action自动化发布的细节没有完全掌握，涉及到不少环节，出了小问题很浪费时间，时间其实很贵。有时间试试travis实现自动化发布。 关于新建空的仓库之后，github给出的几个建议，可以好好看看，随着对git和github的理解更全面点，现在看和刚开始学的时候看就不一样： 123456789101112131415git init --初始化你的项目目录，纳入git版本管理，直接新建个.git目录。git add readme.md --这里是添加一个文件，变通一下，你可以添加整个项目文件，也就是git add .git commit -m &quot;xxx&quot;git branch -M main -- 这里是新建一个分支，并且必须是该名为main ,因为一起可能是master git remote add origin git@github.com:username/username.github.io.git git push -u origin main --这几个动作是针对没有纳入.git管理的项目，从头开始和git、github打交道。新的项目推送到github之前，提示没有权限，在项目目录下运行 -- eval $(ssh-agent -s ) -- ssh-add ~/.ssh/id_ed25519 --把私钥完成代理注册之后，就可以正常推送到github了 --对于现有的.git仓库和github链接：git remote add origin git@github.com:username/username.github.io.git --直接建立新的连接git push -u origin main","link":"/2022/10/22/hexo/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E9%87%8D%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/"},{"title":"hexo 新建文档的方法","text":"在git命令行窗口新建hexo文档的方法 hexo new “title” 刚开始使用hexo 的时候，一直使用这种方法新建文档，默认在source/_posts目录下生成以title为文件名的title.md文件。随着文档越来越多，没有目录的分类，所有文档都在source/_posts目录下，查找、编辑起来很费劲。通过查找[hexo官方文档](指令 | Hexo)，经过摸索使用下面另外一种发法，可以实现在source/_posts目录下生成自定义的目录和markdown文件。 hexo new --path dir-name/file-name.md &quot;title&quot; 这样就会在source/_posts/dir-name目录下生成file-name.md的markdown文件和同名的一个目录。如下图： 如果要在文档中引用图片文件，和文档同目录下的同名目录下图片却无法正常显示，只能想办法把要引用的图片文件放在source/images目录下，图片文件也可以分类存放，在markdown文件中引用时指定对应的目录和文件路径即可。","link":"/2022/09/22/hexo-test/hexo%E6%96%B0%E5%BB%BA%E6%96%87%E6%A1%A3%E6%96%B9%E6%B3%95/"},{"title":"hexo-test","text":"","link":"/2022/09/22/hexo-test/test/"},{"title":"hugo文档的组织结构","text":"hugo文档的目录组织结构 在posts目录下直接保存markdow文档 在posts目录下以文档名新建目录，在这新建的目录下新家index.md，新建一个image目录来保存文章引用的图片资源。 因为index.md和image是同一个层级的结构，无论是在front matter区域的featured_image，还是正文区域的图片，都可以直接引用这个同级目录下保存的资源文件。 如下图所示： 也就是以目录的形式来组织文档，不仅层次分明，而且引用的图片也可以得到正确渲染。","link":"/2022/11/08/hugo/hugo%E6%96%87%E6%A1%A3%E7%BB%84%E7%BB%87%E7%BB%93%E6%9E%84/"},{"title":"常用的四种打印机共享方式","text":"常见的三种共享打印机方式 局域网内添加共享打印机 在目标机器上共享打印机 设置好要共享的打印机所机器的相关权限，比如网络访问权限，开启guest等 在自己的机器上使用\\\\xxx.xxx.xxx.xxx格式的ip地址（也就是静态IP）来搜索共享打印机所在的计算机，搜索成功后鼠标双击安装打印机。 windows系统自动安装驱动。如果windows无法安装，需要下载官方自带的驱动，选择从磁盘安装。 使用printer usb switch共享打印机 以两台不在一个同一个网络的计算机为例，比如一台机器连接互联网，另外一台机器连接业务内网。 打印机连接线接在usb switch 的输入端口 把两台计算机的usb连接线分别连接到输出端口 切换开关，windows检测到打印机后自动安装打印机驱动，正常都可以安装。如果无法安装，估计应该是下载官方驱动，选择从磁盘安装。 添加同一个网络中的网络打印机 获取网络打印机的ip地址和端口 选择手动安装打印机 选择创建新端口，端口类型选择标准tcp/ip端口 输入打印机ip地址和端口名称 安装打印机驱动（如果无法安装，就下载官方驱动，选择从磁盘安装） 选择自定义端口，完成安装并测试打印 在一个外网的局域网段中，通过网上邻居添加公司内部其他主机上共享的打印机。 这个原理和第一种方式中介绍的类似，只不过这种方式是通过动态IP地址共享的。","link":"/2022/11/09/printer/%E5%B8%B8%E7%94%A8%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%89%93%E5%8D%B0%E6%9C%BA%E5%85%B1%E4%BA%AB%E6%96%B9%E5%BC%8F/"},{"title":"在局域网中添加网络打印机","text":"如何添加局域网中的网络打印机因业务需要连接办公室的一台网络打印机。 获取网络打印机的ip地址和端口。获取方法有多种。首先到另外一台配置好的电脑上查询了打印机首选项(当然时商家在卖打印机时配置的，自己没有参与)，查看端口的相关设置，其中有记录网络打印机的ip地址和端口名称，有了IP地址和端口地址就好办了。 添加打印机，选择手动添加 选择创建新端口，端口类型选择标准的tcp/ip端口 输入网络打印机的ip地址和端口名称 系统通过ip地址和端口检测打印机 如果windows自带的驱动没有这个打印机的驱动，就选择从磁盘安装 设置自定义端口 操作成功后临时记录一下，错误的地方随后再补充调整。","link":"/2022/11/09/printer/%E6%B7%BB%E5%8A%A0%E7%BD%91%E7%BB%9C%E6%89%93%E5%8D%B0%E6%9C%BA/"},{"title":"Windows系统镜像的操作","text":"关于Windows dism 的操作可以在微软公司的官方文档中查询，很好很强大。好多年没用了，以前的笔记也找不到了，这里只是记录一个实用的操作，更多的细节和知识去官网查询。 查看Windows镜像信息 123456789101112131415161718192021222324252627282930313233f:\\windows101903\\sources&gt;dism /Get-Wiminfo /Wimfile:install.wim部署映像服务和管理工具版本: 10.0.18362.1映像的详细信息: install.wim索引: 1名称: Windows 10 教育版描述: Windows 10 教育版大小: 15,254,692,495 个字节索引: 2名称: Windows 10 企业版描述: Windows 10 企业版大小: 15,254,763,241 个字节索引: 3名称: Windows 10 专业版描述: Windows 10 专业版大小: 15,255,648,236 个字节索引: 4名称: Windows 10 专业教育版描述: Windows 10 专业教育版大小: 15,254,622,257 个字节索引: 5名称: Windows 10 专业工作站版描述: Windows 10 专业工作站版大小: 15,254,657,142 个字节操作成功完成。 从多合一Windows镜像中提取指定的镜像 12345//Export Image by indexf:\\windows101903\\sources&gt;dism /Export-image /sourceimagefile:install.wim /sourceindex:3 /destinationimagefile:F:\\win10pro1903.wim提取到指定的镜像之后，可以把原来的Sources\\install.wim删除，把这个提取出来的wim文件重命名为install.wim，复制到sources文件夹下面,这样就实现了指定版本的定制，在Winpe下的Dism++下，利用Dism++的还原功能实现WIndwos10的安装，可以简单实现win7系统和win10双系统共存。（Dism++的wim文件还原功能似乎没有选择指定镜像索引的界面，所以使用dism命令提取自己需要的那个版本wim） 顺便去官网看看bcdboot的文档 [bcdboot](BCDBoot Command-Line Options | Microsoft Learn)","link":"/2023/01/28/windows/Windows%E7%B3%BB%E7%BB%9F%E9%95%9C%E5%83%8F%E7%9A%84%E6%93%8D%E4%BD%9C/"},{"title":"windows10访问局域网共享打印机问题","text":"安装好的Windows10无法访问局域网中的共享打印机[有空在自己的机器上贴上真实的图片] 1234567891011win10系统，网络已经设置完成，专用网络及公用网络设置的共享也开启，无密码共享。连接打印机所在电脑可以进入，也可以看到打印机及共享文件夹。但在具体连接时，出现“windows无法连接到打印机错误码0x0000011b”方法1、网上大部分解决方案都是在打印机所在电脑中卸载相关更新，如：“更新和安全”—“查看更新历史记录”—“卸载更新”然后找到补丁代号是KB5005569/KB5005573/KB5005568/KB5005566/KB5005565补丁双击卸载。有的甚至要求在第三方连接的电脑上卸载以上更新。（亲测有效）方法2、进入注册表编辑器后，使用左侧的菜单导航到以下位置：HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Print创建新的 DWORD 值。进入正确的位置后，请确保选中“Print”键，然后移到右侧部分，右键单击空白区域并选择“新建&gt; DWORD（32 位） 值”接下来，将新创建的注册表值命名为 RpcAuthnLevelPrivacyEnabled，然后按 Enter 保存更改。双击新创建的 RpcAuthnLevelPrivacyEnabled 值。进入“编辑”菜单后，将“基数”设置为“十六进制”，将“数值数据”设置为 0，然后单击“确定”保存更改。如若不行［HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows NT\\Printers\\PointAndPrint］设置&quot;RestrictDriverInstallationToAdministrators&quot;=dword:00000000试试","link":"/2023/01/30/windows/win10%E8%AE%BF%E9%97%AE%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB%E6%89%93%E5%8D%B0%E6%9C%BA%E9%97%AE%E9%A2%98/"},{"title":"win7封装笔记","text":"Windows7封装笔记好几年前学习系统封装，把单位的旧机器驱动集成到镜像里，维护系统时省时省力。一直在QQ空间的日志里保存，现在重新发到这里。 一、安装虚拟机 1、选用小巧简洁的Vmware Player 6 或者 vmware play pro12、vmware plyaer workstation14 最为虚拟机平台。 2、在vmware play下新建win7虚拟机时，选择稍后安装操作系统，直接安装的话，默认会产生100M的启动分区，而系统分区会在另外一个分区。 3、坚持硬件系统最少的原则，移除打印机、usb设备、甚至网卡，只保留cpu、内存、硬盘、cd/dvd、显示器。 4、在虚拟机启动时，按F2键进入虚拟机的bios设置。 在BIOS的I/O device configration项目下，串口、并口和软盘都禁止掉，如下图所示： 二、在BIOS中设置光驱为第一驱动顺序，挂载天空的优启通ISO镜像，启动进入winpe，对虚拟机的硬盘进行分区。 三、在vmware player 下安装win7操作系统。 安装方法一般有两种： 1、win7旗舰版ISO镜像进行常规的安装，在需要输入用户名密码时，按下快捷键Ctrl+Shift+F3，系统会自动重新，进入桌面后进入最适合的封装用户模式 2、使用优启通的ISO镜像启动进入winpe模式，使用优启通的winpe下的恢复镜像工具，恢复单独从win7安装盘中提取的install.wim文件即可完成win7安装，在输入用户名和密码的时候输入Ctrl+Shift+F3，进入适合封装的超级用户模式。 四、win7的封装步骤 1、安装完毕适合封装的win7后，可以先安装360压缩、office2007等常用软件。 2、安装天空提供的win7补丁。 3、此时封装前的准备工作已经完成，可以启动winpe，对当前的win7进行备份，以方便合适的时候恢复镜像，不必从头安装。 4、在c:\\盘的根目录下建立sysprep目录，把天空的万能驱动包放在sysprep目录下，同时吧天空的goruntime（运行时间库）也放在sysprep目录下，在系统部署完毕后自动删除c：\\sysprep目录。同时，在c:\\盘根目录下建立tools目录，把天空的软件安装包EasyInstall放在tools目录下，吧部署中需要的图片文件目录也放在这个tools下，吧win7激活程序Oem7f7.exe也放在tools目录下。 把天空的封装主程序放置在虚拟机的d:\\盘下。 5、准备工作完成后，就可以在win7下运行EasySysprep主程序，开始第一阶段的封装。 需要注意的是，在第一阶段封装完毕后，重启系统后必须进入winpe系统进行第二阶段的封装，因此，在封装之前记得设置虚拟机的光盘挂载为优启通的ISO启动镜像。如果忘记设置，系统启动没有进入winpe的话，就开始直接的部署，导致封装失败。 6、进入winpe后，运行EasySysprep封装主程序，开始第二阶段的封装。按照天空封装软件的设置，默认即可。设置好运行时间库和万能驱动的目录即可，从部署结果来看，是在部署中先调用运行时间库，然后再调用天空的万能驱动包。最后在自定义的调用接口中，选择时机为【第一次进入桌面时】，先调用天空提供的Easyinstall,再调用小马激活程序来激活win7，注意设置程序的参数，最后是设置删除c:\\tools目录，完成最后的清理工作。因为c:\\sysprep目录是自动清理的，因此不用设置删除动作。 7、至此全部的封装工作完成，可以在winpe下备份封装的成果，文件保存为wim，也可以保存为.gho文件。最后放松一下，测试一下部署，欣赏自己的劳动成果^-^","link":"/2022/10/27/windows/win7%E5%B0%81%E8%A3%85%E7%AC%94%E8%AE%B0/"},{"title":"Windows平台的三款虚拟机","text":"简单体会一下Windows平台的三款虚拟机 vmware player 这个我个人使用的最早、时间最长的一款。当时主要用来做windows系统的封装，操作简单，功能也很全面，在虚拟机和宿主机之间传递文件很便捷 。现在发展到了vmware workstation player 16.2.4,download ,这款是免费下载的，其他专业版是商业版。 virtualbox 目前最新版为virtualbox7.0,download,目前自己用的机器配置不高，安装win10虚拟机有点卡，win11更是不符合安装条件。win7自然是很流畅，抽空再试试win10,机器慢慢被淘汰，我再干5年也可以退休了，想想时间过得真快。 hyper-V 这个是Windows10自带的虚拟机，在程序与功能模块开启hyper-v即可使用。最大的特点就是流畅，鼠标在宿主机和虚拟机之间随意切换，几乎没有卡顿现象（宿主机是win10,虚拟机也是win10）。目前使用window10，不知到什么原因，git bash 下不能识别基本的命令，把环境变量折腾了一边，没有效果，无奈，准备安装win10双系统，结果试用了hyper-v，发现没有必要安装双系统了。","link":"/2022/10/22/windows/windows%E5%B9%B3%E5%8F%B0%E7%9A%84%E4%B8%89%E6%AC%BE%E8%99%9A%E6%8B%9F%E6%9C%BA/"},{"title":"在Mcirosoft官网下载原版Windows10系统","text":"在Mcirosoft官网下载原版Windows10系统第一步，进入微软官方网站,界面里没有直接下载win10系统文件的按钮，设置一下，显示出原版Windows下载列表。 第二步，F12调出浏览器开发者工具，点击左上角的“切换设备仿真”图标。(如果F12后，浏览器没有仿真界面，可以使用360浏览器试试)。仿真设备选择iPadPro 第三步，F5刷新一下，页面出现“选择版本”界面。 第四部，关闭F12打开的开发者窗口，选择要下载的“windows 10”，确认后在”语言选择“下拉列表中选择””简体中文”,再选择合适的系统版本，可直接下载，也可以复制下载链接在迅雷中下载。如下图所示：","link":"/2023/01/29/windows/%E5%9C%A8MicroSoft%E5%AE%98%E7%BD%91%E4%B8%8B%E8%BD%BD%E5%8E%9F%E7%89%88Windows10/"},{"title":"安装共享打印机的方法","text":"安装共享打印机驱动的方法在一个局域网内可以共享其他计算机上的安装的打印机，实现打印共享。一般有以下几种安装方法： 在目标计算机上共享打印机 在win10的任务栏搜索区域输入类似\\\\10.121.x.x格式表示的目标计算机IP，直接双击共享的打印机图标，一般会直接安装好打印机驱动。如果显示安装错误信息，无法安装打印机，就在弹出的对话框中选择从磁盘安装(一般这里需要下载的是驱动程序的标准版，不是驱动的完整版),然后选择标准版驱动所在的目录完成安装。 如果无法访问目标打印机，需要设置目标计算机的组策略配置。如下图： win键+R打开运行对话框，输入gpedit.msc 在组策略窗口里选择 计算机配置 -&gt;Windows设置-&gt; 安全设置 -&gt;本地策略-&gt;安全选项 把来宾账户状态设置为启用 把网络访问的本地账户的共享和安全模型设置为仅来宾 - 对本地用户进行身份验证、其身份为来宾 把guest从拒绝网络访问列表中删除 鼠标右键点击桌面上得【网络】图标，选择属性打开网络和共享中心，选择更改高级共享设置，启用文件和打印机发现。 鼠标右键点击桌面上的【此电脑】，选择【管理】,选择本地用户和组-&gt;用户，双击右侧列表里的Guest，在打开的窗口里取消勾选帐户已禁用","link":"/2022/10/28/windows/%E5%AE%89%E8%A3%85%E5%85%B1%E4%BA%AB%E6%89%93%E5%8D%B0%E6%9C%BA%E9%A9%B1%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95/"},{"title":"双屏幕显示的两种方案","text":"双屏幕显示的两种方案 单位搬迁，在重新安装机器时发现个问题，开机直接报错，提示信息如下： 增加双接口的显卡 当时没在意双屏的安装方法，但是接连遇到两台机器出现这种问题。第一台的解决办法简单粗暴，直接把以前添加的显卡拆掉，然后直接使用下面的第二种安装方法。第二台机器刚好是我熟悉的安装方法，也就是下面的第二种方法，这里先不说。先说一下增加双接口输出显卡的连接方法。错误的方法是没有使用显卡上的两个输出接口，而是使用了其中一个针式接口(dvi)，另外一个插在了主板上的HDMI接口。而正确的方法是遇到有添加的双接口输出显卡，就直接把两个屏幕的两条线分别连接到显卡的两个接口上，不要使用主板的上的HDMI接口。有空再测试一下这个显卡，如果是好的还是可以继续使用。 直接使用主板集成的双接口 这种方案是没有新添加独立显卡，直接使用主板上的两个接口：一个是传统的梯形接口，另外一个使用主板上提供的HDMI接口，这个HDMI接口线缆有专门的HDMI线，也可以在原来的传统线缆加一个HDMI转接头。 到第三个机器时我突然领悟到了问题所在，一句话总结： 有独立的双接口输出显卡，就把双屏幕的连接线分别连接到这个独立显卡的两个不同接口；没有独立先显卡，就直接使用主板集成的HDMI接口（HDMI接口线可以是专门的，也可以是HDMI转接线加传统的VGA线缆）和传统的VGA接口。 这些老旧的机器也许还能再几年，等我退休^-^ 简单了解一下现在各种显示接口类型 VGA、DVI、HDMI 、DP 细节可以百度，不学习就要落伍了，居然不知道DP接口。","link":"/2022/11/07/%E5%8D%95%E4%BD%8D%E7%B3%BB%E7%BB%9F%E7%BB%B4%E6%8A%A4/%E5%8F%8C%E5%B1%8F%E6%98%BE%E7%A4%BA%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%A1%88/"},{"title":"在维护计算机系统时常见的几个问题","text":"系统维护中常见问题的解决思路经过一番努力，单位几十台电脑和打印机等各种网络设备重新组合分配了，新旧设备交织组成的环境复杂了点，尤其是老旧电脑的硬件、软件配置很麻烦，经过三天的努力，终于搞定了，总结一下常见的几个问题，再出现问题的时候可以轻松解决。 旧电脑的各种接口存在问题，尤其是usb接口可能不能用 要确保线缆正常可用 老旧电脑的的打印机驱动安装不上，要把不相干的打印机驱动全部卸载干净。 如果驱动是官方下载的完全适配的版本，但是仍然无法安装的话，有可能是封装的windwos系统有相关系统文件缺失，可以使用驱动精灵检测驱动，也能对缺失的系统文件进行修复。 如果是双屏电脑，要看双屏采用的是新增双屏显卡还是使用主板自带的hdmi+vga方案。如果是新增的双屏显卡，两根线都要接在新增的显卡上。如果是采用主板自带的hdmi+vga方案，那就更简单了。 网页出现404页面或者无法连接网管，也要排查ip地址是否正确或者和别的地址有冲突。 网页出现404页面，也有可能是网址的前两段没有添加在受信站点。 如果出现网页的业务界面显示不全，有可能是业务人员自己设置了字体放大150%的比例。 如果是弹出的pdf显示页面超出单屏幕，甚至充满了双屏，在ie里设置选项卡的显示方式，让新窗口始终在新的选项卡中显示即可。 受理岗办业务经常出现提交业务时出现网页退出或者错误，把windows系统更换为win32，发现很稳定，甚至有了错误也可以恢复。 如果出现模糊查询时提示升级flash player，就把现有的卸载掉，安装x32版本的。 如果出现无法导出或者下载业务表格，根据提示信息设置internet里的对应项目。","link":"/2022/11/09/%E5%8D%95%E4%BD%8D%E7%B3%BB%E7%BB%9F%E7%BB%B4%E6%8A%A4/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%B4%E6%8A%A4%E4%B8%AD%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"},{"title":"生活感悟-步入50岁","text":"在50岁之际的一点感悟 工作。年轻时，在工作中有不少问题。从最初的不喜欢又没有脱离的本领，导致好多工作不够投入，或者应付了事，尽管问题都慢慢消化了，但是成本不小。所以，如果没有办法离开这个地方，那就要喜欢上这个工作，即使不够喜欢，也要从对自己负责的角度把工作做好，让自己够理直气壮。由于不喜欢，导致好多工作不够积极，拖拉导致了不少问题，会给自己带来不好的体验，而这是应该可以改变的。所以，有问题及时处理，为了美好的体验，没了美好的情绪。 在工作中首先对自己负责，把工作做好，我要美好的体验 有问题及时处理，我要美好的体验。 生活。消费的欲望大了点，没有算过细账，花钱有点大手大脚，可能是对未来过于乐观，在疫情到了的时候发现了自己的问题。财务管理不合理，一直希望能找到自己的第一桶金。既然是自己制造的麻烦，就要勇敢面对，过了这个关卡，会改变，会好起来，未来的6年里继续努力，把生活变得简单点，运动、读书，攒钱、理财，把生活过的美好点。","link":"/2022/10/12/%E7%94%9F%E6%B4%BB%E6%84%9F%E6%82%9F/%E7%94%9F%E6%B4%BB%E6%84%9F%E6%82%9F%E4%B9%8B50%E5%B2%81/"},{"title":"精彩语录","text":"关于一个人本身的特质 如果你想成为一流的网球运动员，你很快就会发现，这是没有希望的。 但是，如果你想成为一流的水暖工，那么大部分人都可以做到。只要具有意志，坚持下去了解这个行业，精通手艺，假以时日，这是可以实现的目标。 你无法成为网球明星，但是在其他领域，你可以慢慢发展自己的竞争力。这种竞争力，一部分来自你的内在因素（兴趣、学习能力、毅力、纪律性等等），另一部分来自通过工作的缓慢积累 “快能力”更多地取决于天赋或外部条件，所以普通人不容易成功；“慢能力”则是取决于后天的努力，可以用时间来换。芒格建议，如果没有天赋，就尽量选择“慢能力”的行业，这样你才有机会通过日复一日的积累做到优秀。 我就想到了一个问题：程序员属于“快能力”，还是“慢能力”？ 别的不敢说，前端开发大概是属于“快能力”。因为这个行业要求你快速形成生产力，根本没有时间积累，而且积累的效果不明显，因为开发工具变得太快。相比之下，C / C++ 语言应该属于“慢能力”，坚持写20年，会越写越好，但是前端不是这样，几年就换一套技术栈，代码的生命周期非常短。 所以，想要进入前端的同学，要有清醒的认识。优秀的前端程序员，其实比的是“冲刺能力”，你想一直在这个行业，就要一直在冲刺。“快能力”的行业都是如此，一段时间出不了成绩，就会被淘汰。如果你不适应这种生活，可能就需要做一些准备，想想能不能换到“慢能力”的行业。","link":"/2022/09/24/%E7%B2%BE%E5%BD%A9%E8%AF%AD%E5%BD%95/%E7%B2%BE%E5%BD%A9%E8%AF%AD%E5%BD%95/"},{"title":"无损分区","text":"在Windows下对磁盘进行无损分区调整因为初始装机时磁盘分区不合理，或者其他原因导致Windows系统所在的分区空间过小，甚至出现连一个文件也保存不了、打印机不能打印文档等问题。除了卸载不用的软件之外，最好的解决办法就是使用分区工具对磁盘进行无损分区。虽然Windows操作系统自带的磁盘管理工具 Diskpart也可实现分区调整，但这个工具是纯粹的命令行操作，需要熟悉磁盘和磁盘分区的基础知识，操作比较复杂。这里以梅傲分区助手为例： 12用户的Windows系统中有一个500GB磁盘，共有3个分区，一个是100MB的保留分区“*:系统保留”，第二个是系统分区C盘40GB，第三个是数据分区D盘400多G,显然个磁盘分区空间分配不合理，使用久了C盘空间不够用，尤其是当下的软件开销很大。D盘空间足够大，可以从D盘划分一些空间给C盘。基本操作分两步： 1、压缩D盘空间 2、给c盘扩容 具体的操作就不记录了，可以在梅傲分区的官方站点查看帮助文档：梅傲分区助手 在所有的步骤完成并提交执行后，分区助手会提示你选择重启后使用Winpe模式还是梅傲自带的PreOS模式，根据实际情况选择，如果当时没有Winpe环境，就只能选择PreOS模式，会在重启后执行多次操作、重启，耐心等待，最后提示所有操作完成即可重启进入Windows。 无损分区工具最好在Winpe下运行，使用自己熟悉的Winpe工具启动系统，在winpe下运行梅傲分区，多数winpe都集成了梅傲分区助手。 最后提醒一句，在分区调整之前备份磁盘上重要的数据。如果磁盘上有重要数据，慎重进行，非必要不分区^-^。","link":"/2022/11/21/%E7%B3%BB%E7%BB%9F%E7%BB%B4%E6%8A%A4/%E6%97%A0%E6%8D%9F%E5%88%86%E5%8C%BA/"},{"title":"机油标准之SAE和API的简单认识","text":"SAE society of automotive engineers ,美国机动车工程师学会的简写。是通过在一定温度范围内标定机油粘度的方法。 sae 30 没有加w，一般代表专门的夏季用油 sae 5w30 带有w字母的标志表示夏季和冬季都可以正常使用。w前边的5代表在零下30度（5 - 35）的粘度为5，数字越小，低温流动性越好；w后边的30代表在100摄氏度时机油粘度为30，数字越大，代表机油越粘稠。 API ：American Petroleum Institue （美国石油协会） “S”开头系列代表汽油发动机油，从SA~SN来表示机油品质等级，一般有12个规格，具体为SA、SB、SC、SD、SE、SF、SG、SH、SJ、SL、SM、SN。SN级别为全合成。 “C”开头系列为柴油发动机油。 ”S“、”C”同时存在为汽油、柴油通用。 自己的车子使用5w30 SN ,这个写法实际上用了两个标准，5w30是SAE的写法，SN是API的规格。","link":"/2023/01/23/%E7%BB%B4%E7%89%B9%E6%8B%89/sae%E5%92%8Capi%E6%9C%BA%E6%B2%B9%E6%A0%87%E5%87%86%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%A4%E8%AF%86/"},{"title":"汽车发动机机油选择","text":"汽车发动机机油的选择我开的维特拉在3万公里之前一直使用的4s店购买的黄桶出光SN 5w30。后来就直接使用中国石化集团长城润滑油，线上买的的是行系列的金吉星5w30，后来到中国石化加油站购买了两桶长城润滑油5w30，当时不知道是长城的金吉星J700 5w30，和工作人员说这个价格比网上旗舰店贵很多，一桶要460多。后来才了解到对应的是线上的金吉星行系列sn 5w30全合成，而线下的金吉星j700性能更优良，最重要的是在加油站购买的长城机油，保真。一直不敢尝试在网上大量买机油，后来到长城润滑油的官网上查看，看到确实有线上的渠道：长城天猫旗舰店。多了一个选择，可以线上、线下交替使用，大不了提前更换机油，正常5000左右换机油，提前的话就4000多换机油。也可以考虑冬天使用嘉实多，说是专门适合冬天的冷启动保护，其他季节使用长城机油。可以咨询一下4s店的售后工程师。 长城润滑油的官网地址：http://www.sinolube.com/ 看论坛知道美孚、嘉实多、壳牌这三个最流行的机油品牌，因为太普及了，所以真假难辨，小县城没有直营店，省会级城市有授权直营店，所以干脆放弃，如果需要的话，可以在天猫旗舰店购买，想购买真正的全合成的话，每升机油的价格在100以上，太便宜的不会真，估计是矿物油居多。 三款机油的特点 美孚侧重动力和长效 嘉实多侧重发动机保护 壳牌侧重发动机清洁和静音 三款机油的官网地址 美孚：https://www.mobil.com.cn/zh-cn 有天猫和京东旗舰店，也有微信小程序可用 嘉实多：https://www.castrol.com.cn/zh_cn/china/home.html 有天猫和京东旗舰店 壳牌：https://www.shell.com.cn/ 有天猫和京东旗舰店 更换机油前要明白各自的特点 适合哪款机油，更换机油之前要搞清楚。 如果经常是短途行驶的话，最好提前更换机油和机滤，下面两种情况都属于短途行驶。而我对于维特拉的维护基本是经常处于撒欢状态，由于不经常跑长途，基本上是宁跑10公里、不跑5公里，就这么简单，坚持5000公里换机油和机滤。 水温还不到正常范围就到地方，停车关闭发动机了 虽然是热车状态，可是经常在堵车状态下低俗行驶，走走停停","link":"/2023/02/08/%E7%BB%B4%E7%89%B9%E6%8B%89/%E6%B1%BD%E8%BD%A6%E5%8F%91%E5%8A%A8%E6%9C%BA%E6%9C%BA%E6%B2%B9%E9%80%89%E6%8B%A9/"},{"title":"维特拉的真空泵","text":"关于维特拉正空泵的相关知识 汽车的刹车系统分为液压系统和助力系统 液压部分 踩下刹车踏板时，推动刹车总泵活塞，把刹车油推送到四个车轮部分的刹车分泵，由刹车分泵通过活塞推送刹车片来制动刹车盘而刹停汽车。但是如果没有助力的话，驾驶员凭借个人力量是无法安全刹车的，所有这个时候就需要有助力来辅助安全刹车。 助力部分 真空泵属于汽车刹车系统的一个重要部分，它为刹车助力系统提供真空源。真空源有多种形式提供 燃油车发动机加进气歧管提供 燃油车发动加机械真空泵提供。由发动机的凸轮轴带动这个机械泵产生真空。 电子真空泵提供 其他（我不知道的^-^） 而维特拉的正空泵应该属于利用发动机进气歧管提供真空源的类型（这个可以问问4s店师傅后确定），通过真空管连接到真空助力器（或者叫大力鼓、刹车助力鼓、） 真空泵是如何工作的呢？ 真空泵的作用就是把刹车助力器（大力鼓）的气体抽出，让刹车助力器保持相对真空状态。刹车助力器分为左右两个部分，中间有个通气孔，在助力器的右侧部分也有个通气孔。在不踩刹车的时候，刹车助力器的左右两侧是相对真空状态，左右两侧气压相同。通过液压助力踩下刹车踏板时，会把刹车助力器的中间小孔封闭，而右侧小孔是打开的，这样就会导致刹车助力器的左右两侧大气压不同，左侧为真空，右侧为普通的大气压，自然会轻松的将刹车踏板向前退。 平时如何检测维特拉的真空泵是否正常工作 首先看看真空泵不工作时候会出现什么情况 真空泵是在发动机启动的时候工作的，所以平时在着车之后要踩几脚刹车（因为此时的车速很慢，即使真空本有问题也可以通过手刹来制动）。所以，如果真空泵不工作的时候，发动机启动后也踩不动刹车，因为刹车助力器的左右两侧没有压力差。 在停车后发动机熄火状态下，在刹车助力器的内部还有部分真空存在的，毕竟熄火前真空泵是工作的。在停车熄火状态下连续踩几脚刹车踏板，就会把刹车助力器里的真空完全排泄掉，最后刹车变硬，此时踩下刹车的同时启动发动机，如果刹车瞬间就可以踩下去了，说明真空泵一开始正常工作了，让刹车助力器的两侧重新保持压力差。 如果在熄火停车之后，发现刹车助力器很快就踩不动了，说明是刹车助力器的问题导致真空（大力鼓）泄露，而不是真空泵的问题。 总结一下 真空泵通过真空管把刹车助力器（大力鼓、真空助力器）的空气抽出，保持刹车助力器相对真空状态。 真空泵是在发动机启动后工作的，如果有问题，行车时踩不动刹车，所以一定要在刚开始车速慢的时候检测一下真空泵是否正常。 熄火停车状态下，如果刹车助力器出现真空泄露，说明是真空助力器（大力鼓）的问题，而不是真空泵的问题。 车子到里 8、9万公里之后，记得要经常检查正空泵，或者提前就购买新的真空泵，最好通过4s店订购原装的全新真空泵（据说是有包装里个塑料件的是全新真空泵，否则可能为拆车件）。 ​","link":"/2022/10/15/%E7%BB%B4%E7%89%B9%E6%8B%89/%E6%B1%BD%E8%BD%A6%E7%9A%84%E7%9C%9F%E7%A9%BA%E6%B3%B5/"},{"title":"维特拉更换发动机冷却液","text":"2019年买的2016款长安铃木维特拉，2019年一季度生产，目前已经行驶41000公里。一直对发动机的冷却液不太懂，逛论坛，看手册，今天大概有了基本的认识。 发动机冷却液的基本功能 冷却，也就是给发动机降温、散热，保持发动机良好的工作温度。及时关注仪表盘的水温表，冬天正常行驶4公里就可以达到正常温度，如果水温表指向红色的报警区域，就代表冷却系统出问题了，要及时停车检查，检查冷却液的膨胀壶(或者叫做副水箱）液面位置是否正常，如果液面低于LOW刻度线的话，就要及时加注冷却液了。 防冻，在极寒地区，冷却液的冰点如果不够底，水箱就会结冰。 防腐蚀，冷却液里添加有防腐剂，防止腐蚀冷却系统管路。冷却系统中散热器、水泵、缸体及缸盖、分水管等部件是由多种金属组成，冷却液中都加入一定量的防腐蚀添加剂，防止冷却系统中的金属部件生锈，每种金属都有自己不同的特性，因此冷却液中最有技术含量的就是这个防锈剂。 防水垢，冷却液在循环中应尽可能少地减少水垢的产生，以免堵塞循环管道，影响冷却系的散热功能。 购买防冻液时查看的几个主要指标1、是否是乙二醇2、冰点值，根据自己所在地区的问题，选择核实的冰点值，我们这里一般-35度足够了。3、沸点值。符合国家标准的冷却液，冷却液的沸点比水的沸点100℃高，冷却液能耐受更高的温度而不沸腾（开锅），在一定程度上满足了高负荷发动机的散热冷却需要 长安铃木维特拉的原厂发动机冷却液 由于涉及到整个发动机的冷却系统，所以最好是用同品牌的冷却防冻液，如果想更换防冻液的品牌，需要彻底把旧的排除，再灌装新的冷却防冻液。可以多买点，4缸发动机的冷却液一般是5升左右。重力放空后再用新的防冻液冲洗一下，再次灌装新的。也许有更专业的做法，具体可以多询问铃木售后，到底是购买原厂的继续添加点，还是首次4万公里更换，以后每两年更换。维特拉需要五升左右的防冻液，原厂是长城的防冻液。有车友在汽车之家论坛发的关于维特拉原厂冷却液的帖子，显示长城生产的冷却液获得长安铃木的认证。 更换发动机冷却液的方法 汽车之家维特拉论坛车友一回复：首先把车水箱温度用怠速方式到达正常水温值，然后打开防冻液管道放出防冻液 ，等重力放干净后，用气泵把水管里水箱里的残留用充气方式放出残留。加入新的防冻液加满后，在加补水罐到达最下面的标线就好，点火怠速等水温到达正常值后，在空档恨踩 油门油门这时候你的转速达到4000+，一直踩着等高温电子扇启动，松油门，等待高温电子扇熄灭后，在等水温下降后添加补足防冻液，这样才是一次完整的更换防冻液的方法。这个是汽车之家论坛车友以安索冷却液为例的方法介绍 汽车之家维特拉论坛车友二回复：把防冻液加满水箱后启动发动机，让发动机水温上升，直到水箱冷却风扇运转（水箱风扇运转是判断节温器开启最简单办法）节温器开启后，冷却系统进入到大循环状态，水箱口会有气泡冒出，防冻液会减少，这时候继续缓慢的向水箱加入防冻液进行补充，如此反复数次直到水箱没有气泡冒出（没有气泡冒出证明冷却系统的空气已经完全排出了）盖上水箱盖，向冷却液补水壶里面加入冷却液到规定液面刻度。 更换防冻液最关键的问题是让冷却系统的节温器开启，进入大循环工作状态，彻底排除冷却系统里面的空气，如果空气没有完全排出，造成冷却液返喷，严重会出现水温开锅，损坏发动机，千万不要认为换防冻液很简单。 看上边的回复，冷却液的更换比机油保养过程要复杂。所以，想完全放空并更换另外一款防冻液，需要设专业的设备技术，自己就不考虑这个了，直接到铃木的售后店里搞。下次售后店里，咨询一下哪个型号可以购买，看是否可以在店里买到原厂的，保质期是多久，是一直同型号添加呢？还是要彻底更换别的品牌，毕竟铃木4s店已经不存在了，总有一天会买不到原厂的，据说铃木使用的原厂冷却防冻液时长城的。这里先收藏京东长城自营的冷却液链接。 平时要定期查看冷却液使用情况 冷车状态，如果引擎盖打开后，那个小水箱能看到防冻液，哪怕低于下线，也不影响使用，因为那个小水箱叫做膨胀壶或副水箱，是由于液体热胀冷缩，是为了安全预留的，只要这个小水箱里能看到冷却液，那么说明散热系统有足够的防冻液，及时添加就可以。 普通防冻液建议两年或四万公里左右更换。如果你现在里程四万公里左右，那么可以考虑全换了。如果不足更换里程，你车上是红色的，或者明确知道厂牌型号，可以添加相同的，红加红，绿加绿，或者加那种通用的，比如百适通可混合加的荧光绿-37度的，如果你车上是红的，去的修理厂只有绿的，没有混合家的，那么只能全换了。 答疑解惑 全部更换发动机冷却液需要多少升？4缸的发动机一般需要4.5-5.5升左右，可以购买两桶以备充足。 是否能用谁替代防冻液？不可以，因为金属和水接触会生锈 为什么要更换冷却液？ 原厂的、普通的冷却液中的防锈剂会在使用过程中不断消耗减少，2年/4万公里左右基本消耗殆尽，如果不及时更换会加速冷却系统的腐蚀。维特拉的保养手册中，新车历程到了4万公里或者两年要彻底更换防冻冷却液，可是为何以后是每年都要更换呢？到时候咨询4s店师傅。 总结一下 冷却液的主要成分是水、乙二醇、添加剂。添加剂的主要功能是防锈。 冷却液的主要功能是冷却、防冻、防锈、防水垢。 如果2年/4万公里的保养时间到了之后，以哪个先达到的指标为依据，及时彻底更换冷却液。如果在保质期内发现防冻液减少可以添加同类型的防冻液，最好不要混加，虽然有可混加防冻液。 防冻冷却液的颜色有什么作用？ 可以看清楚水箱中防冻液的液面位置，如果少的话要及时补充 可以查看是否有防冻液泄露，彩色液体泄露在地上的话很容易发现，及时查找原因。","link":"/2023/02/05/%E7%BB%B4%E7%89%B9%E6%8B%89/%E7%BB%B4%E7%89%B9%E6%8B%89%E6%9B%B4%E6%8D%A2%E5%8F%91%E5%8A%A8%E6%9C%BA%E5%86%B7%E5%8D%B4%E6%B6%B2/"},{"title":"2分钟原则","text":"2分钟原则每当你发现很难开始执行某项任务时，可以试试将其缩减成2分钟的版本。 看一本书 → 看一页书 写一篇文章 → 写一句话 跑10公里 → 穿上跑鞋 做100次俯卧撑 → 做1次俯卧撑 多吃蔬菜水果 → 吃一个水果 编写一个程序 → 编写一个函数 → 编写一行代码 这样做的目的是使上手变得超级容易，让你先上手再说。一旦开始做了（这可能是最艰难的一步），你就会开始有动力，可能会继续做下去。 阅读一页 → 阅读10页 → 读完第一章 写一个句子 → 写文章的开头 → 写出正文 穿上跑鞋 → 步行5分钟 → 跑步5分钟 一旦开始，继续做下去就会容易得多。有时，你甚至会发现，自己在不知不觉间已经完成了任务。","link":"/2022/09/24/%E7%B2%BE%E5%BD%A9%E8%AF%AD%E5%BD%95/2%E5%88%86%E9%92%9F%E5%8E%9F%E5%88%99/2%E5%88%86%E9%92%9F%E5%8E%9F%E5%88%99/"},{"title":"CSS basics","text":"CSS basics - Learn web development | MDN (mozilla.org) by MDN contributors is licensed under CC-BY-SA 2.5 CSS (Cascading Style Sheets) is the code that styles web content. CSS basics walks through what you need to get started. We’ll answer questions like: How do I make text red? How do I make content display at a certain location in the (webpage) layout? How do I decorate my webpage with background images and colors? What is CSS?Like HTML, CSS is not a programming language. It’s not a markup language either. CSS is a style sheet language. CSS is what you use to selectively style HTML elements. For example, this CSS selects paragraph text, setting the color to red: 123p { color: red;} Copy to Clipboard Let’s try it out! Using a text editor, paste the three lines of CSS (above) into a new file. Save the file as style.css in a directory named styles. To make the code work, we still need to apply this CSS (above) to your HTML document. Otherwise, the styling won’t change the appearance of the HTML. (If you haven’t been following our project, pause here to read Dealing with files and HTML basics.) Open your 1index.html file. Paste the following line in the head (between the &lt;head&gt; and 1&lt;/head&gt; tags): 1&lt;link href=&quot;styles/style.css&quot; rel=&quot;stylesheet&quot;&gt; Copy to Clipboard Save index.html and load it in your browser. You should see something like this: If your paragraph text is red, congratulations! Your CSS is working. Anatomy of a CSS rulesetLet’s dissect the CSS code for red paragraph text to understand how it works : The whole structure is called a ruleset. (The term ruleset is often referred to as just rule.) Note the names of the individual parts: Selector This is the HTML element name at the start of the ruleset. It defines the element(s) to be styled (in this example, `` elements). To style a different element, change the selector. Declaration This is a single rule like color: red;. It specifies which of the element’s properties you want to style. Properties These are ways in which you can style an HTML element. (In this example, color is a property of the `` elements.) In CSS, you choose which properties you want to affect in the rule. Property value To the right of the property—after the colon—there is the property value. This chooses one out of many possible appearances for a given property. (For example, there are many color values in addition to red.) Note the other important parts of the syntax: Apart from the selector, each ruleset must be wrapped in curly braces. ({}) Within each declaration, you must use a colon (:) to separate the property from its value or values. Within each ruleset, you must use a semicolon (;) to separate each declaration from the next one. To modify multiple property values in one ruleset, write them separated by semicolons, like this: 12345p { color: red; width: 500px; border: 1px solid black;} Copy to Clipboard Selecting multiple elementsYou can also select multiple elements and apply a single ruleset to all of them. Separate multiple selectors by commas. For example: 123p, li, h1 { color: red;} Copy to Clipboard Different types of selectorsThere are many different types of selectors. The examples above use element selectors, which select all elements of a given type. But we can make more specific selections as well. Here are some of the more common types of selectors: Selector name What does it select Example Element selector (sometimes called a tag or type selector) All HTML elements of the specified type. p selects &lt;p&gt; ID selector The element on the page with the specified ID. On a given HTML page, each id value should be unique. #my-id selects &lt;p id=&quot;my-id&quot;&gt; or &lt;a id=&quot;my-id&quot;&gt; Class selector The element(s) on the page with the specified class. Multiple instances of the same class can appear on a page. .my-class selects &lt;p class=&quot;my-class&quot;&gt; and &lt;a class=&quot;my-class&quot;&gt; Attribute selector The element(s) on the page with the specified attribute. img[src] selects &lt;img src=&quot;myimage.png&quot;&gt; but not &lt;img&gt; Pseudo-class selector The specified element(s), but only when in the specified state. (For example, when a cursor hovers over a link.) a:hover selects &lt;a&gt;, but only when the mouse pointer is hovering over the link. There are many more selectors to discover. To learn more, see the MDN Selectors guide. Fonts and textNow that we’ve explored some CSS fundamentals, let’s improve the appearance of the example by adding more rules and information to the style.css file. First, find the output from Google Fonts that you previously saved from What will your website look like? . Add the &lt;link&gt; element somewhere inside your 1index.html ‘s head (anywhere between the &lt;head&gt; and 1&lt;/head&gt; tags). It looks something like this: 1&lt;link href=&quot;https://fonts.googleapis.com/css?family=Open+Sans&quot; rel=&quot;stylesheet&quot;&gt; Copy to Clipboard This code links your page to a style sheet that loads the Open Sans font family with your webpage. Next, delete the existing rule you have in your style.css file. It was a good test, but let’s not continue with lots of red text. Add the following lines (shown below), replacing the 1font-family assignment with your 1font-family selection from What will your website look like? . The property 1font-family refers to the font(s) you want to use for text. This rule defines a global base font and font size for the whole page. Since &lt;html&gt; is the parent element of the whole page, all elements inside it inherit the same 1font-size and 1font-family . 1234html { font-size: 10px; /* px means &quot;pixels&quot;: the base font size is now 10 pixels high */ font-family: &quot;Open Sans&quot;, sans-serif; /* this should be the rest of the output you got from Google fonts */} Copy to Clipboard Note: Anything in CSS between /* and */ is a CSS comment. The browser ignores comments as it renders the code. CSS comments are a way for you to write helpful notes about your code or logic. Now let’s set font sizes for elements that will have text inside the HTML body ( &lt;h1&gt; , &lt;li&gt; , and &lt;p&gt; ). We’ll also center the heading. Finally, let’s expand the second ruleset (below) with settings for line height and letter spacing to make body content more readable. 12345678910h1 { font-size: 60px; text-align: center;}p, li { font-size: 16px; line-height: 2; letter-spacing: 1px;} Copy to Clipboard Adjust the px values as you like. Your work-in-progress should look similar to this: CSS: all about boxesCSS: all about boxesSomething you’ll notice about writing CSS: a lot of it is about boxes. This includes setting size, color, and position. Most HTML elements on your page can be thought of as boxes sitting on top of other boxes. Photo from https://www.geograph.org.uk/photo/3418115 Copyright © Jim Barton cc-by-sa/2.0 CSS layout is mostly based on the box model. Each box taking up space on your page has properties like: padding, the space around the content. In the example below, it is the space around the paragraph text. border, the solid line that is just outside the padding. margin, the space around the outside of the border. In this section we also use: width (of an element). background-color, the color behind an element’s content and padding. color, the color of an element’s content (usually text). text-shadow sets a drop shadow on the text inside an element. display sets the display mode of an element. (keep reading to learn more) To continue, let’s add more CSS. Keep adding these new rules at the bottom of style.css. Experiment with changing values to see what happens. Changing the page color123html { background-color: #00539F;} Copy to Clipboard This rule sets a background color for the entire page. Change the color code to the color you chose in What will my website look like?. Styling the body1234567body { width: 600px; margin: 0 auto; background-color: #FF9500; padding: 0 20px 20px 20px; border: 5px solid black;} Copy to Clipboard There are several declarations for the `` element. Let’s go through these line-by-line: width: 600px; This forces the body to always be 600 pixels wide. margin: 0 auto; When you set two values on a property like margin or padding, the first value affects the element’s top and bottom side (setting it to 0 in this case); the second value affects the left and right side. (Here, auto is a special value that divides the available horizontal space evenly between left and right). You can also use one, two, three, or four values, as documented in Margin Syntax. background-color: #FF9500; This sets the element’s background color. This project uses a reddish orange for the body background color, as opposed to dark blue for the `` element. (Feel free to experiment.) padding: 0 20px 20px 20px; This sets four values for padding. The goal is to put some space around the content. In this example, there is no padding on the top of the body, and 20 pixels on the right, bottom and left. The values set top, right, bottom, left, in that order. As with margin, you can use one, two, three, or four values, as documented in Padding Syntax. border: 5px solid black; This sets values for the width, style and color of the border. In this case, it’s a five-pixel–wide, solid black border, on all sides of the body. Positioning and styling the main page title123456h1 { margin: 0; padding: 20px 0; color: #00539F; text-shadow: 3px 3px 1px black;} Copy to Clipboard You may have noticed there’s a horrible gap at the top of the body. That happens because browsers apply default styling to the `` element (among others). That might seem like a bad idea, but the intent is to provide basic readability for unstyled pages. To eliminate the gap, we overwrite the browser’s default styling with the setting margin: 0;. Next, we set the heading’s top and bottom padding to 20 pixels. Following that, we set the heading text to be the same color as the HTML background color. Finally, text-shadow applies a shadow to the text content of the element. Its four values are: The first pixel value sets the horizontal offset of the shadow from the text: how far it moves across. The second pixel value sets the vertical offset of the shadow from the text: how far it moves down. The third pixel value sets the blur radius of the shadow. A larger value produces a more fuzzy-looking shadow. The fourth value sets the base color of the shadow. Try experimenting with different values to see how it changes the appearance. Centering the image1234img { display: block; margin: 0 auto;} Copy to Clipboard Next, we center the image to make it look better. We could use the margin: 0 auto trick again as we did for the body. But there are differences that require an additional setting to make the CSS work. The `` is a block element, meaning it takes up space on the page. The margin applied to a block element will be respected by other elements on the page. In contrast, images are inline elements, for the auto margin trick to work on this image, we must give it block-level behavior using display: block;. Note: The instructions above assume that you’re using an image smaller than the width set on the body. (600 pixels) If your image is larger, it will overflow the body, spilling into the rest of the page. To fix this, you can either: 1) reduce the image width using a graphics editor, or 2) use CSS to size the image by setting the width property on the &lt;img&gt; element with a smaller value. Note: Don’t be too concerned if you don’t completely understand display: block; or the differences between a block element and an inline element. It will make more sense as you continue your study of CSS. You can find more information about different display values on MDN’s display reference page. ConclusionIf you followed all the instructions in this article, you should have a page that looks similar to this one: (You can view our version here.) If you get stuck, you can always compare your work with our finished example code on GitHub. In this exercise, we have just scratched the surface of CSS. To go further, see Learning to style HTML using CSS.","link":"/2022/08/23/CSS-basics/"},{"title":"The BIOS&#x2F;MBR Boot Process","text":"NeoSmart KnowledgebaseThe BIOS/MBR Boot Process From : https://neosmart.net/wiki/mbr-boot-process/ In the diagram below, the boot sequence for all standard computers and operating systems is shown: [ As you can see, the boot process is broken down into several major components, each of which is a completely-separate subsystem with many different options and variations. The implementations of each component can differ greatly depending on your hardware and operating system, but the rules they follow and the process by which they work are always the same. Components of the Boot ProcessThe BIOSThe BIOS is where hardware meets software for the first time, and where all the boot magic begins. The BIOS code is baked into the motherboard of your PC, usually stored on what is called an EEPROM 1 and is considerably hardware-specific. The BIOS is the lowest level of software that interfaces with the hardware as a whole,2 and is the interface by means of which the bootloader and operating system kernel can communicate with and control the hardware. Through standardized calls to the BIOS (“interrupts” in computer parlance), the operating system can trigger the BIOS to read and write to the disk and interface with other hardware components. When your PC is first powered up, a lot happens. Electrical components of the PC are initially responsible for bringing your computer to life, as debouncing circuits take your push of the power button and trigger a switch that activates the power supply and directs current from the PSU to the motherboard and, mainly through it, to all the various components of your PC. As each individual component receives life-giving electricity, it is powered up and brought online to its initial state. The startup routines and overall functionality of the simpler components like the RAM and PSU is hardwired into them as a series of logic circuits (AND/NAND and OR/NOR gates), while more complicated parts such as the video card have their own microcontrollers that act as mini-CPUs, controlling the hardware and interfacing with the rest of your PC to delegate and oversee the work. The POST ProcessOnce your PC has been powered on, the BIOS begins its work as part of the POST (Power-On Self Test) process. It bridges all the various parts of your PC together, and interfaces between them as required, setting up your video display to accept basic VGA and show it on the screen, initializing the memory banks and giving your CPU access to all the hardware. It scans the IO buses for attached hardware, and identifies and maps access to the hard disks you have connected to your PC. The BIOS on newer motherboards is smart enough to even recognize and identify USB devices, such as external drives and USB mice, letting you boot from USB sticks and use your mouse in legacy software. During the POST procedure, quick tests are conducted where possible, and errors caused by incompatible hardware, disconnected devices, or failing components are often caught. It’s the BIOS that’s responsible for a variety of error messages such as “keyboard error or no keyboard present” or warnings about mismatched/unrecognized memory. At this point, the majority of the BIOS’ work has completed and it’s almost ready to move on to the next stage of the boot process. The only thing left is to run what are called “Add-On ROMs”: some hardware attached to the motherboard might require user intervention to complete its initialization and the BIOS actually hands off control of the entire PC to software routines coded into hardware like the video card or RAID controllers. They assume control of the computer and its display, and let you do things like set up RAID arrays or configure display settings before the PC has even truly finished powering up. When they’re done executing, they pass control of the computer back to the BIOS and and the PC enters a basic, usable state and is ready to begin. BIOS Boot HandoffAfter having configured the basic input and output devices of your PC, the BIOS now enters the final stages where it’s still in control of your computer. At this point, you’ll normally be presented with an option to quickly hit a key to enter the BIOS setup from where you can configure hardware settings and control how your PC boots. If you choose nothing, the BIOS will begin the first step in actually “booting” your PC using the default settings. Earlier we mentioned that an important part of the BIOS’ work is to detect and map connected hard disks. This list now comes in handy, as the BIOS will load a very small program from the first hard disk to the memory and tell the CPU to execute its contents, handing off control of the computer to whatever is on the hard drive and ending its active role in loading your PC. This hard drive is known as “the boot device,” “startup disk,” or “drive 0” and can usually be picked or set in the BIOS setup. The Boot DeviceRegardless of whether the BIOS was configured to boot from a local hard disk or from a removable USB stick, the handoff sequence is the same. Once the BIOS POST and AddOn ROM procedures have completed, the BIOS loads the first 512 bytes from the hard drive of the selected boot device – these 512 bytes are what is commonly known as the MBR, or the Master Boot Record. The Master Boot Record (MBR)The MBR is the first and most important component on the software side of things in the boot procedure on BIOS-based machines. Every hard disk has an MBR, and it contains several important pieces of information. The Partition TableFirst and foremost, the MBR contains something called the partition table, which is an index of up to four partitions that exist on the same disk, a table of contents, if you will. Without it (such as on floppy disks), the entire disk could only contain one partition, which means that you can’t have things like different filesystems on the same drive, which in turn would mean you could never install Linux and Windows on the same disk, for example. Bootstrap CodeSecondly, the MBR also contains a very important bit of code known as the “bootstrap code.” The first 4403 of these 512 bytes can contain literally anything – the BIOS will load it and execute its contents as-is, kicking off the bootloader procedure. 440 bytes is incredibly small. How small? Well, to put things in context, 440 bytes is only 0.3% of the capacity of an ancient 1.44 MiB floppy disk – barely enough to fit any form of useful code – and way, way too small to do something as complicated as call up the operating system kernel from the disk. Given how tiny the bootstrap code section of the MBR is, the only useful purpose it can really serve is to look up another file from the disk and load it to perform the actual boot process. As such, this bootstrap code is often termed a “stage one bootloader.” Depending on the operating system, the exact place the bootstrap code searches for the “stage 2 bootloader” can change, but on Windows the stage 1 bootloader will search the partition table of the MBR for a partition marked as “active” which is MBR-speak for “bootable,” indicating that the start of the partition contains the next portion of the boot code in its starting sectors (also known as its “bootsector”). On a correctly-created MBR disk, only one partition can be marked as active at a time.4 So the job of the bootstrap code segment in the MBR is pretty simple: look up the active partition from the partition table, and load that code into the memory for execution by the CPU as the next link in the boot chain. Depending on the OS you’re loading, it might actually look up a hard-coded partition instead of the active partition (e.g. always load the bootsector of the 3rd partition) and the offset of the boot code within the partition bootsector might change (e.g. instead of being the first 2 KiB of the partition, it might be the second KiB or 6 KiB starting from the 2nd multiple of the current phase of the moon) – but the basic concept remains the same. However, for legacy compatibility reasons, the MBR almost always loads the first sector of the active partition, meaning another only-512 bytes. Boot SignatureOn IBM-compatible PCs (basically, everything) the final two bytes of the 512-byte MBR are called the boot signature and are used by the BIOS to determine if the selected boot drive is actually bootable or not. On a disk that contains valid bootstrap code, the last two bytes of the MBR should always be 0x55 0xAA.5If the last two bytes of the MBR do not equal 0x55 and 0xAA respectively, the BIOS will assume that the disk is not bootable and is not a valid boot option – in this case, it will fall back to the next device in the boot order list (as configured in the BIOS setup). For example, if the first boot device in the BIOS is set as the USB stick and the second is the local hard disk, if a USB stick without the correct boot signature is plugged in, the BIOS will skip it and move on to attempt to load from the local disk. If no disk in the boot device list has the correct 0x55 0xAA boot signature, the BIOS will then display an error such as the infamous “No boot device is available” or “Reboot and select proper boot device.” The Partition Boot SectorAs covered above, the bootstrap code in the MBR will usually load a sequence of bytes from the start of the active partition. The exact layout of a partition depends what filesystem the partition has been created or formatted with, but generally looks something like this: Again, depending on the OS and filesystem, the exact layout of the partition will certainly differ. But this represents a close approximation to what you’ll normally see: A single JMP (jump) instruction, which is the assembly6 equivalent of a goto command. The filesystem header, which will contain information specific to and important for the filesystem itself. Another bootstrap code segment, containing the next stage of the bootloader process. An end-of-sector marker, very similar to the 0x55 0xAA boot signature we saw earlier in the MBR. This is all usually packed into the first sector of the partition, which is normally again only 512 bytes long, and again, can’t fit too much data or instructions. On modern filesystems for newer operating systems, the bootstrap code can take advantage of enhanced BIOS functionality to read and execute more than just 512 bytes, but in all cases, the basic steps remain the same: The MBR loads the first 512 bytes of the active partition into the memory and instructs the CPU to execute them. The very first (three) bytes of the partition bootsector contain a single JMP instruction, telling the CPU to skip xx bytes ahead and execute the next stage of the bootloader from there. The CPU follows the JMP instruction and seeks to the beginning of the bootstrap code contained within the partition bootsector, and starts to execute. The bootstrap code in the partition is not the end of the road, it’s only another step along the way. Because of how little space is allocated for the bootstrap code in the partition bootsector, the code it contains normally ends with another JMP command instructing the CPU to jump to the next sector in the partition, which is often set aside for the remainder of the partition code. Depending on the filesystem, this can be several sectors in length, or however long it needs to be to fit this stage of the bootloader. The second-stage bootloaderThe second stage of the bootloader, stored in the partition bootsector in the bootstrap section and, optionally, continuing beyond it, carries out the next step in the bootloader process: it looks up a file stored on the partition itself (as a regular file), and tells the CPU to execute its contents to begin the final part of the boot process. Unlike the previous bootstrap segments of the MBR and the partition bootsector, the next step in the boot process is not stored at a dedicated offset within the partition (i.e. the bootstrap code can’t just tell the CPU to JMP to location 0xABC and execute the boot file from there) – it’s a normal file stored amongst other normal files in the filesystem on the disk. This significantly more-complicated bootstrap code must actually read the table-of-contents for the filesystem on the partition,7 The second-stage bootloader from older versions of file systems oftentimes placed complicated restrictions on the bootloader files they needed to load, such as requiring them to appear in the first several kilobytes of the partition or being unable to load non-contiguously allocated files on the partition. This file is the last piece of the bootloader puzzle, and there are usually no restrictions as to its size or contents, meaning it can be as large and as complicated as it needs to be to load the operating system kernel from the disk and pass on control of the PC to the OS. The BootloaderThe actual bootloader files on the disk form the final parts of the boot loading process. When people talk about bootloaders and boot files, they are often referring to this final, critical step of the boot process. Once control of the PC has been handed-off from the BIOS to the bootstrap code in the MBR and from the MBR to the bootstrap code in the partition bootsector, and from there there to the executable boot files on the active partition, the actual logic involved in determining which operating system to load, where to load it from, which parameters/options to pass on to it, and completing any interactions with the user that might be available, the actual process of starting the operating system begins. Boot Configuration FilesWhile the executable bootloader files could theoretically contain hard-coded information pertaining to the operating systems to be loaded from the disk, that wouldn’t be very useful at all. As such, almost all bootloaders separate the actual, executable bootloader from the configuration file or database that contains information about the operating system(s) to load. All of the major bootloaders mentioned below have support for loading multiple operating systems, a process known as “dual-booting” or “multi-booting.” Popular BootloadersAs discussed previously, there are many different bootloaders out there. Each operating system has its own bootloader, specifically designed to read its filesystem and locate the kernel that needs to be loaded for the OS to run. Here are some of the more-popular bootloaders – and their essential configuration files – for some of the common operating systems: Each of the popular operating systems has its own default bootloader. Windows NT, 2000, and XP as well as Windows Server 2000 and Windows Server 2003 use the NTLDR bootloader. Windows Vista introduced the BOOTMGR bootloader, currently used by Windows Vista, 7, 8, and 10, as well as Windows Server 2008 and 2012. While a number of different bootloaders have existed for Linux over the years, the two predominant bootloaders were Lilo and GRUB, but now most Linux distributions have coalesced around the all-powerful GRUB2 bootloader. NTLDRNTLDR is the old Windows bootloader, first used in Windows NT (hence the “NT” in “NTLDR,” short for “NT Loader”), and currently used in Windows NT, Windows 2000, Windows XP, and Windows Server 2003. NTLDR stores its boot configuration in a simple, text-based file called BOOT.INI, stored in the root directory of the active partition (often C:\\Boot.ini). Once NTLDR is loaded and executed by the second-stage bootloader, it executes a helper program called NTDETECT.COM that identifies hardware and generates an index of information about the system. More information about NTLDR, BOOT.INI, and NTDETECT.COM can be found in the linked articles in our knowledgebase. BOOTMGRBOOTMGR is the newer version of the bootloader used by Microsoft Windows, and it was first introduced in the beta versions of Windows Vista (then Windows Codename Longhorn). It’s currently used in Windows Vista, Windows 7, Windows 8, Windows 8.1, and Windows 10, as well as Windows Server 2008 and Windows Server 2012. BOOTMGR marked a significant departure from NTLDR. It is a self-contained bootloader with many more options, especially designed to be compatible with newer functionality in modern operating systems and designed with EFI and GPT in mind (though only certain versions of BOOTMGR support loading Windows from a GPT disk or in a UEFI/EFI configuration). Unlike NTLDR, BOOTMGR stores its configuration in a file called the BCD – short for Boot Configuration Database. Unlike BOOT.INI, the BCD file is a binary database that cannot be opened and edited by hand.8 Instead, specifically designed command-line tools like bcdedit.exe and more user-friendly GUI utilities such as EasyBCD must be used to read and modify the list of operating systems. GRUBGRUB was the predominantly-used bootloader for Linux in the 1990s and early 2000s, designed to load not just Linux, but any operating system implementing the open multiboot specification for its kernel. GRUB’s configuration file containing a whitespace-formatted list of operating systems was often called menu.lst or grub.lst, and found under the /boot/ or /boot/grub/ directory. As these values could be changed by recompiling GRUB with different options, different Linux distributions had this file located under different names in different directories. GRUB 2While GRUB eventually won out over Lilo and eLilo, it was replaced with GRUB 2 around 2002, and the old GRUB was officially renamed “Legacy GRUB.” Confusingly, GRUB 2 is now officially called GRUB, while the old GRUB has officially been relegated to the name of “Legacy GRUB,” but you’ll thankfully find most resources online referring to the newer incarnation of the GRUB bootloader as GRUB 2. GRUB 2 is a powerful, modular bootloader more akin to an operating system than a bootloader. It can load dozens of different operating systems, and supports custom plugins (“modules”) to introduce more functionality and support complex boot procedures. The actual bootloader file for GRUB 2 is not a file called GRUB2, but rather a file usually called core.img. Unlike Legacy GRUB, the GRUB 2 configuration file is more of a script and less of traditional configuration file. The grub.cfg file, normally located at /boot/grub/grub.cfg on the boot partition, bears resemblance to shell scripts and supports advanced concepts like functions. The core functionality of GRUB 2 is supplemented with modules, normally found in a subdirectory of the /boot/grub/ directory. The Boot ProcessAs previously mentioned, the stage of the boot process is a little more involved than the previous steps, primarily due to the additional complexity of reading the filesystem. The bootloader must also obtain information about the underlying machine hardware (either via the BIOS or on its own) in order to correctly load the desired operating system from the correct partition and provide any additional files or data that might be needed. It must also read its own configuration file from a regular file stored on the boot partition’s filesystem, so it needs to at the very least have full read support for whatever filesystem it resides on. **Initiate filesystem access**Before anything else can happen, when the bootloader is first run it must load and run the primitive filesystem “drivers” that give it the ability to read, at the very least, the filesystem it is located on. Since it’s unable to read the filesystem before this, by necessity the code that provides this functionality must be compiled into the core bootloader file itself. **Load and read configuration file(s)**With support for the filesystem loaded, the bootloader can now read the list of operating systems from the disk and the the event that there are multiple operating systems specified, prepare it for display. **Load and run supporting modules**For bootloaders that are not wholly self-contained (such as NTLDR and GRUB 2), the bootloader now loads any supporting modules or helper programs (such as NTDETECT.COM) from the disk. The list of modules to load can be specified in the configuration file that was just read or hard-coded/compiled into the bootloader itself. Normally, each module will be executed as it is located and loaded from the disk. **Display the boot menu**At this point, with all the relevant configuration in hand, the bootloader can display what is commonly known as the boot menu on the screen. If multiple operating systems are installed, it is via the boot menu that the user of the computer can navigate a list of operating systems and choose which to load. From here, certain bootloaders also make it possible to specify run-time options, such as whether to load the selected operating system in safe mode. **Load the OS kernel**Once the user’s selection has been recorded, the bootloader moves on to the last and final stage of the boot process. Depending on the OS and the type of kernel, the bootloader will load the kernel image from the path specified in the configuration file (with the help of any submodules, if needed) into the memory. It then instructs the CPU to JMP to a certain location within the newly-loaded kernel and begin executing from there. ConclusionThus ends the lengthy journey that begins with the push of a button and ends with an operating system’s kernel loaded into the memory and executed. The bootloader process is certainly a lot more nuanced and complicated than most realize, and it has both been designed and evolved to work in a fairly-standardized fashion across different platforms and under a variety of operating systems. The individual components of the bootloader are, by and large, self-sufficient and self-contained. They can be swapped out individually without affecting the whole, meaning you can add disks and boot from different devices without worrying about upsetting existing configurations and operating systems. It also means that instead of having one, single bit of hardware/software to configure, setup, maintain, and debug, you instead are left with a intricate and oftentimes very fragile chain with multiple points susceptible to breakage and failure. When working properly, the boot process is a well-oiled machine, but when disaster strikes, it can be a very difficult process to understand and debug. Troubleshooting the BootloaderThe complicated nature of the boot process means that there’s a lot that needs to be set up and configured, and a lot that could potentially go wrong. Some resources that can come handy when troubleshooting the bootloader are listed below: Easy Recovery Essentials for Windows: a point-and-click bootable recovery CD that will recreate the entire above-described boot chain to get you back into Windows pretty much no matter what went wrong. EasyBCD: An easy-to-use utility that allows you to set up and configure a dual-boot or multi-boot between Windows, Linux, Mac, FreeBSD, and more. Super GRUB2 Disk: A bootable GRUB2 disk that can be used to boot into Linux when your GRUB or GRUB2 is misconfigured or malfunctioning. See AlsoThese additional articles and resources in our wiki and from other websites online contain additional information relevant to this topic: The EFI/GPT boot process: this document covered the basics of the BIOS/MBR boot process, now read and learn about how newer PCs with UEFI and GPT boot. The differences between EFI/GPT and BIOS/MBR Propose an edit Originally, the BIOS was stored on what was termed a ROM (“read-only memory”) chip: the BIOS code was hard-coded into the chip and could never be changed. Updates to the BIOS were rare and far in between, and could only be done by physically replacing the BIOS chip on the motherboard. Over time and with better technology, erasable ROM chips were developed that could be cleared by placing them in a box and blasting them with a dosage of UV (ultraviolet) radiation, then reprogramming their contents with ROM chip programming hardware. When that got old and tiring, electrically-erasable programmable ROM (EEPROM for short) was developed – with it, an electronic signal on specially-selected pins of the EEPROM chip would trigger an erase, and the chip could be programmed directly from where it was located on the motherboard. Easy-peasy-lemon-squeezy, as my wife would say!! ↩ Almost every major hardware component now has firmware controlling it baked into its logic hardware, but we’re ignoring microcontroller firmware here. ↩ Depending on the operating system and platform, the bootstrap code might actually only be anywhere from 434 to 446 bytes as parts of that region might be set aside for other purposes, such as the disk signature and disk timestamp. On most modern operating systems, 440 is the upper limit as the last 6 bytes are set aside for the 4-byte disk signature at offset 0x01B8 and a 2-byte field indicating the read-write state of the drive at offset 0x01BC (with 0x00 indicating read-write and 0x5A5A indicating a read-only drive). ↩ There is a huge caveat emptor here: the bootable/active flag is actually a property of the individual (one of four) partition record, and not the partition table (list of partition records) or the MBR itself. What that means is that technically the actual bit indicating that a partition is bootable can actually be present (set to a value of 0x80) one more than one (or all!) partition(s) simultaneously! This is an invalid configuration and can cause many different boot problems though! ↩ On a little-endian machine like all x86 CPUs, that would be a single word 0xAA55 while on a big-endian architecture like PowerPC, it would be read and written as 0x55AA. ↩ Assembly is the most primitive programming language, and consists of individual instructions directly read and executed by the CPU. ↩ On NTFS, this is called the master file table, or MFT for short. On FAT32, this is called the FAT (file allocation table). ↩ In fact, the BCD file is a standard Windows registry hive, and it can be mounted for editing with tools like regedit.exe","link":"/2013/07/16/Overview%20of%20the%20BIOSMBR%20Boot%20Process/"},{"title":"creating hyperlink","text":"Creating hyperlinks by MDN contributors is is licensed under CC-BY-SA 2.5 Creating hyperlinks Previous Overview: Introduction to HTML Next Hyperlinks are really important — they are what makes the Web a web. This article shows the syntax required to make a link, and discusses link best practices. Prerequisites: Basic HTML familiarity, as covered in Getting started with HTML. HTML text formatting, as covered in HTML text fundamentals. Objective: To learn how to implement a hyperlink effectively, and link multiple files together. What is a hyperlink?Hyperlinks are one of the most exciting innovations the Web has to offer. They’ve been a feature of the Web since the beginning, and are what makes the Web a web. Hyperlinks allow us to link documents to other documents or resources, link to specific parts of documents, or make apps available at a web address. Almost any web content can be converted to a link so that when clicked or otherwise activated the web browser goes to another web address (URL). Note: A URL can point to HTML files, text files, images, text documents, video and audio files, or anything else that lives on the Web. If the web browser doesn’t know how to display or handle the file, it will ask you if you want to open the file (in which case the duty of opening or handling the file is passed to a suitable native app on the device) or download the file (in which case you can try to deal with it later on). For example, the BBC homepage contains many links that point not only to multiple news stories, but also different areas of the site (navigation functionality), login/registration pages (user tools), and more. Anatomy of a linkA basic link is created by wrapping the text or other content, see Block level links, inside an `` element and using the href attribute, also known as a Hypertext Reference, or target, that contains the web address. 123&lt;p&gt;I'm creating a link to&lt;a href=&quot;https://www.mozilla.org/en-US/&quot;&gt;the Mozilla homepage&lt;/a&gt;.&lt;/p&gt; Copy to Clipboard This gives us the following result: I’m creating a link to the Mozilla homepage. Adding supporting information with the title attributeAnother attribute you may want to add to your links is title. The title contains additional information about the link, such as which kind of information the page contains, or things to be aware of on the website. 12345&lt;p&gt;I'm creating a link to&lt;a href=&quot;https://www.mozilla.org/en-US/&quot; title=&quot;The best place to find more information about Mozilla's mission and how to contribute&quot;&gt;the Mozilla homepage&lt;/a&gt;.&lt;/p&gt; Copy to Clipboard This gives us the following result and hovering over the link displays the title as a tooltip: I’m creating a link to the Mozilla homepage. Note: A link title is only revealed on mouse hover, which means that people relying on keyboard controls or touchscreens to navigate web pages will have difficulty accessing title information. If a title’s information is truly important to the usability of the page, then you should present it in a manner that will be accessible to all users, for example by putting it in the regular text. Active learning: creating your own example linkCreate an HTML document using your local code editor and our getting started template. Inside the HTML body, add one or more paragraphs or other types of content you already know about. Change some of the content into links. Include title attributes. Block level linksAs mentioned before, almost any content can be made into a link, even block-level elements. If you have an image you want to make into a link, use the `` element and reference the image file with the `` element. 123&lt;a href=&quot;https://www.mozilla.org/en-US/&quot;&gt; &lt;img src=&quot;mozilla-image.png&quot; alt=&quot;mozilla logo that links to the Mozilla homepage&quot;&gt;&lt;/a&gt; Copy to Clipboard Note: You’ll find out more about using images on the Web in a future article. A quick primer on URLs and pathsTo fully understand link targets, you need to understand URLs and file paths. This section gives you the information you need to achieve this. A URL, or Uniform Resource Locator is a string of text that defines where something is located on the Web. For example, Mozilla’s English homepage is located at https://www.mozilla.org/en-US/. URLs use paths to find files. Paths specify where the file you’re interested in is located in the filesystem. Let’s look at an example of a directory structure, see the creating-hyperlinks directory. The root of this directory structure is called creating-hyperlinks. When working locally with a website, you’ll have one directory that contains the entire site. Inside the root, we have an index.html file and a contacts.html. In a real website, index.html would be our home page or landing page (a web page that serves as the entry point for a website or a particular section of a website.). There are also two directories inside our root — pdfs and projects. These each have a single file inside them — a PDF (project-brief.pdf) and an index.html file, respectively. Note that you can have two index.html files in one project, as long as they’re in different filesystem locations. The second index.html would perhaps be the main landing page for project-related information. Same directory : If you wanted to include a hyperlink inside 1index.html (the top level 1index.html ) pointing to 1contacts.html , you would specify the filename that you want to link to, because it’s in the same directory as the current file. The URL you would use is 1contacts.html : 12&lt;p&gt;Want to contact a specific staff member?Find details on our &lt;a href=&quot;contacts.html&quot;&gt;contacts page&lt;/a&gt;.&lt;/p&gt; Copy to Clipboard Moving down into subdirectories : If you wanted to include a hyperlink inside 1index.html (the top level 1index.html ) pointing to 1projects/index.html , you would need to go down into the 1projects directory before indicating the file you want to link to. This is done by specifying the directory’s name, then a forward slash, then the name of the file. The URL you would use is 1projects/index.html : 1&lt;p&gt;Visit my &lt;a href=&quot;projects/index.html&quot;&gt;project homepage&lt;/a&gt;.&lt;/p&gt; Copy to Clipboard Moving back up into parent directories : If you wanted to include a hyperlink inside 1projects/index.html pointing to 1pdfs/project-brief.pdf , you’d have to go up a directory level, then back down into the 1pdf directory. To go up a directory, use two dots — 1.. — so the URL you would use is 1../pdfs/project-brief.pdf : 1&lt;p&gt;A link to my &lt;a href=&quot;../pdfs/project-brief.pdf&quot;&gt;project brief&lt;/a&gt;.&lt;/p&gt; Copy to Clipboard Note: You can combine multiple instances of these features into complex URLs, if needed, for example: ../../../complex/path/to/my/file.html. Document fragmentsIt’s possible to link to a specific part of an HTML document, known as a document fragment, rather than just to the top of the document. To do this you first have to assign an id attribute to the element you want to link to. It normally makes sense to link to a specific heading, so this would look something like the following: 1&lt;h2 id=&quot;Mailing_address&quot;&gt;Mailing address&lt;/h2&gt; Copy to Clipboard Then to link to that specific id, you’d include it at the end of the URL, preceded by a hash/pound symbol (#), for example: 1&lt;p&gt;Want to write us a letter? Use our &lt;a href=&quot;contacts.html#Mailing_address&quot;&gt;mailing address&lt;/a&gt;.&lt;/p&gt; Copy to Clipboard You can even use the document fragment reference on its own to link to another part of the current document: 1&lt;p&gt;The &lt;a href=&quot;#Mailing_address&quot;&gt;company mailing address&lt;/a&gt; can be found at the bottom of this page.&lt;/p&gt; Copy to Clipboard Absolute versus relative URLsTwo terms you’ll come across on the Web are absolute URL and relative URL: absolute URL: Points to a location defined by its absolute location on the web, including protocol and domain name. For example, if an index.html page is uploaded to a directory called projects that sits inside the root of a web server, and the website’s domain is https://www.example.com, the page would be available at https://www.example.com/projects/index.html (or even just https://www.example.com/projects/, as most web servers just look for a landing page such as index.html to load if it isn’t specified in the URL.) An absolute URL will always point to the same location, no matter where it’s used. relative URL: Points to a location that is relative to the file you are linking from, more like what we looked at in the previous section. For example, if we wanted to link from our example file at https://www.example.com/projects/index.html to a PDF file in the same directory, the URL would just be the filename — project-brief.pdf — no extra information needed. If the PDF was available in a subdirectory inside projects called pdfs, the relative link would be pdfs/project-brief.pdf (the equivalent absolute URL would be https://www.example.com/projects/pdfs/project-brief.pdf.) A relative URL will point to different places depending on the actual location of the file you refer from — for example if we moved our index.html file out of the projects directory and into the root of the website (the top level, not in any directories), the pdfs/project-brief.pdf relative URL link inside it would now point to a file located at https://www.example.com/pdfs/project-brief.pdf, not a file located at https://www.example.com/projects/pdfs/project-brief.pdf. Of course, the location of the project-brief.pdf file and pdfs folder won’t suddenly change because you moved the index.html file — this would make your link point to the wrong place, so it wouldn’t work if clicked on. You need to be careful! Link best practicesThere are some best practices to follow when writing links. Let’s look at these now. Use clear link wordingIt’s easy to throw links up on your page. That’s not enough. We need to make our links accessible to all readers, regardless of their current context and which tools they prefer. For example: Screen reader users like jumping around from link to link on the page, and reading links out of context. Search engines use link text to index target files, so it is a good idea to include keywords in your link text to effectively describe what is being linked to. Visual readers skim over the page rather than reading every word, and their eyes will be drawn to page features that stand out, like links. They will find descriptive link text useful. Let’s look at a specific example: Good link text: Download Firefox 123&lt;p&gt;&lt;a href=&quot;https://www.mozilla.org/firefox/&quot;&gt; Download Firefox&lt;/a&gt;&lt;/p&gt; Bad link text: Click here to download Firefox 1234&lt;p&gt;&lt;a href=&quot;https://www.mozilla.org/firefox/&quot;&gt; Click here&lt;/a&gt;to download Firefox&lt;/p&gt; Other tips: Don’t repeat the URL as part of the link text — URLs look ugly, and sound even uglier when a screen reader reads them out letter by letter. Don’t say “link” or “links to” in the link text — it’s just noise. Screen readers tell people there’s a link. Visual users will also know there’s a link, because links are generally styled in a different color and underlined (this convention generally shouldn’t be broken, as users are used to it). Keep your link text as short as possible — this is helpful because screen readers need to interpret the entire link text. Minimize instances where multiple copies of the same text are linked to different places. This can cause problems for screen reader users, if there’s a list of links out of context that are labeled “click here”, “click here”, “click here”. Linking to non-HTML resources — leave clear signpostsWhen linking to a resource that will be downloaded (like a PDF or Word document), streamed (like video or audio), or has another potentially unexpected effect (opens a popup window, or loads a Flash movie), you should add clear wording to reduce any confusion. For example: If you’re on a low bandwidth connection, click a link, and then a multiple megabyte download starts unexpectedly. If you don’t have the Flash player installed, click a link, and then suddenly get taken to a page that requires Flash. Let’s look at some examples, to see what kind of text can be used here: 1234567891011&lt;p&gt;&lt;a href=&quot;https://www.example.com/large-report.pdf&quot;&gt; Download the sales report (PDF, 10MB)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.example.com/video-stream/&quot; target=&quot;_blank&quot;&gt; Watch the video (stream opens in separate tab, HD quality)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.example.com/car-game&quot;&gt; Play the car game (requires Flash)&lt;/a&gt;&lt;/p&gt; Copy to Clipboard Use the download attribute when linking to a downloadWhen you are linking to a resource that’s to be downloaded rather than opened in the browser, you can use the download attribute to provide a default save filename. Here’s an example with a download link to the latest Windows version of Firefox: 1234&lt;a href=&quot;https://download.mozilla.org/?product=firefox-latest-ssl&amp;os=win64&amp;lang=en-US&quot; download=&quot;firefox-latest-64bit-installer.exe&quot;&gt; Download Latest Firefox for Windows (64-bit) (English, US)&lt;/a&gt; Copy to Clipboard Active learning: creating a navigation menuFor this exercise, we’d like you to link some pages together with a navigation menu to create a multipage website. This is one common way in which a website is created — the same page structure is used on every page, including the same navigation menu, so when links are clicked it gives the impression that you are staying in the same place, and different content is being brought up. You’ll need to make local copies of the following four pages, all in the same directory. For a complete file list, see the navigation-menu-start directory: index.html projects.html pictures.html social.html You should: Add an unordered list in the indicated place on one page that includes the names of the pages to link to. A navigation menu is usually just a list of links, so this is semantically OK. Change each page name into a link to that page. Copy the navigation menu across to each page. On each page, remove just the link to that same page — it’s confusing and unnecessary for a page to include a link to itself. And, the lack of a link acts a good visual reminder of which page you are currently on. The finished example should look similar to the following page: Note: If you get stuck, or aren’t sure if you have got it right, you can check the navigation-menu-marked-up directory to see the correct answer. E-mail linksIt’s possible to create links or buttons that, when clicked, open a new outgoing email message rather than linking to a resource or page. This is done using the `` element and the mailto: URL scheme. In its most basic and commonly used form, a mailto: link indicates the email address of the intended recipient. For example: 1&lt;a href=&quot;mailto:nowhere@mozilla.org&quot;&gt;Send email to nowhere&lt;/a&gt; Copy to Clipboard This results in a link that looks like this: Send email to nowhere. In fact, the email address is optional. If you omit it and your href is “mailto:”, a new outgoing email window will be opened by the user’s email client with no destination address. This is often useful as “Share” links that users can click to send an email to an address of their choosing. Specifying detailsIn addition to the email address, you can provide other information. In fact, any standard mail header fields can be added to the mailto URL you provide. The most commonly used of these are “subject”, “cc”, and “body” (which is not a true header field, but allows you to specify a short content message for the new email). Each field and its value is specified as a query term. Here’s an example that includes a cc, bcc, subject and body: 123&lt;a href=&quot;mailto:nowhere@mozilla.org?cc=name2@rapidtables.com&amp;bcc=name3@rapidtables.com&amp;subject=The%20subject%20of%20the%20email&amp;body=The%20body%20of%20the%20email&quot;&gt; Send mail with cc, bcc, subject and body&lt;/a&gt; Copy to Clipboard Note: The values of each field must be URL-encoded with non-printing characters (invisible characters like tabs, carriage returns, and page breaks) and spaces percent-escaped. Also, note the use of the question mark (?) to separate the main URL from the field values, and ampersands (&amp;) to separate each field in the mailto: URL. This is standard URL query notation. Read The GET method to understand what URL query notation is more commonly used for. Here are a few other sample mailto URLs: mailto: mailto:nowhere@mozilla.org mailto:nowhere@mozilla.org,nobody@mozilla.org mailto:nowhere@mozilla.org?cc=nobody@mozilla.org [mailto:nowhere@mozilla.org?cc=nobody@mozilla.org&amp;subject=This%20is%20the%20subject](mailto:nowhere@mozilla.org?cc=nobody@mozilla.org&amp;subject=This is the subject) Test your skills!You’ve reached the end of this article, but can you remember the most important information? You can find some further tests to verify that you’ve retained this information before you move on — see Test your skills: Links. SummaryThat’s it for links, for now anyway! You’ll return to links later on in the course when you start to look at styling them. Next up for HTML, we’ll return to text semantics and look at some more advanced/unusual features that you’ll find useful — Advanced text formatting is your next stop","link":"/2022/07/28/creating-hyperlink/"},{"title":"document and website structure","text":"[document and website structure](Document and website structure - Learn web development | MDN (mozilla.org)) by MDN contributors is licensed under CC-BY-SA 2.5 document and website structureIn addition to defining individual parts of your page (such as “a paragraph” or “an image”), HTML also boasts a number of block level elements used to define areas of your website (such as “the header”, “the navigation menu”, “the main content column”). This article looks into how to plan a basic website structure, and write the HTML to represent this structure. Prerequisites: Basic HTML familiarity, as covered in Getting started with HTML. HTML text formatting, as covered in HTML text fundamentals. How hyperlinks work, as covered in Creating hyperlinks. Objective: Learn how to structure your document using semantic tags, and how to work out the structure of a simple website. Basic sections of a documentWebpages can and will look pretty different from one another, but they all tend to share similar standard components, unless the page is displaying a fullscreen video or game, is part of some kind of art project, or is just badly structured: header: Usually a big strip across the top with a big heading, logo, and perhaps a tagline. This usually stays the same from one webpage to another. navigation bar: Links to the site’s main sections; usually represented by menu buttons, links, or tabs. Like the header, this content usually remains consistent from one webpage to another — having inconsistent navigation on your website will just lead to confused, frustrated users. Many web designers consider the navigation bar to be part of the header rather than an individual component, but that’s not a requirement; in fact, some also argue that having the two separate is better for accessibility, as screen readers can read the two features better if they are separate. main content: A big area in the center that contains most of the unique content of a given webpage, for example, the video you want to watch, or the main story you’re reading, or the map you want to view, or the news headlines, etc. This is the one part of the website that definitely will vary from page to page! sidebar: Some peripheral info, links, quotes, ads, etc. Usually, this is contextual to what is contained in the main content (for example on a news article page, the sidebar might contain the author’s bio, or links to related articles) but there are also cases where you’ll find some recurring elements like a secondary navigation system. footer: A strip across the bottom of the page that generally contains fine print, copyright notices, or contact info. It’s a place to put common information (like the header) but usually, that information is not critical or secondary to the website itself. The footer is also sometimes used for SEO purposes, by providing links for quick access to popular content. A “typical website” could be structured something like this: HTML for structuring contentThe simple example shown above isn’t pretty, but it is perfectly fine for illustrating a typical website layout example. Some websites have more columns, some are a lot more complex, but you get the idea. With the right CSS, you could use pretty much any elements to wrap around the different sections and get it looking how you wanted, but as discussed before, we need to respect semantics and use the right element for the right job. This is because visuals don’t tell the whole story. We use color and font size to draw sighted users’ attention to the most useful parts of the content, like the navigation menu and related links, but what about visually impaired people for example, who might not find concepts like “pink” and “large font” very useful? Note: Roughly 8% of men and 0.5% of women are colorblind; or, to put it another way, approximately 1 in every 12 men and 1 in every 200 women. Blind and visually impaired people represent roughly 4-5% of the world population (in 2012 there were 285 million such people in the world, while the total population was around 7 billion). In your HTML code, you can mark up sections of content based on their functionality — you can use elements that represent the sections of content described above unambiguously, and assistive technologies like screen readers can recognize those elements and help with tasks like “find the main navigation”, or “find the main content.” As we mentioned earlier in the course, there are a number of consequences of not using the right element structure and semantics for the right job. To implement such semantic mark up, HTML provides dedicated tags that you can use to represent such sections, for example: header: ``. navigation bar: ``. main content: ``, with various content subsections represented by ``, ``, and `` elements. sidebar: ``; often placed inside ``. footer: ``. Active learning: exploring the code for our exampleOur example seen above is represented by the following code (you can also find the example in our GitHub repository). We’d like you to look at the example above, and then look over the listing below to see what parts make up what section of the visual. 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en-US&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt; &lt;title&gt;My page title&lt;/title&gt; &lt;link href=&quot;https://fonts.googleapis.com/css?family=Open+Sans+Condensed:300|Sonsie+One&quot; rel=&quot;stylesheet&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- Here is our main header that is used across all the pages of our website --&gt; &lt;header&gt; &lt;h1&gt;Header&lt;/h1&gt; &lt;/header&gt; &lt;nav&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Home&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Our team&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Projects&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;!-- A Search form is another common non-linear way to navigate through a website. --&gt; &lt;form&gt; &lt;input type=&quot;search&quot; name=&quot;q&quot; placeholder=&quot;Search query&quot;&gt; &lt;input type=&quot;submit&quot; value=&quot;Go!&quot;&gt; &lt;/form&gt; &lt;/nav&gt; &lt;!-- Here is our page's main content --&gt; &lt;main&gt; &lt;!-- It contains an article --&gt; &lt;article&gt; &lt;h2&gt;Article heading&lt;/h2&gt; &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Donec a diam lectus. Set sit amet ipsum mauris. Maecenas congue ligula as quam viverra nec consectetur ant hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur.&lt;/p&gt; &lt;h3&gt;Subsection&lt;/h3&gt; &lt;p&gt;Donec ut librero sed accu vehicula ultricies a non tortor. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aenean ut gravida lorem. Ut turpis felis, pulvinar a semper sed, adipiscing id dolor.&lt;/p&gt; &lt;p&gt;Pelientesque auctor nisi id magna consequat sagittis. Curabitur dapibus, enim sit amet elit pharetra tincidunt feugiat nist imperdiet. Ut convallis libero in urna ultrices accumsan. Donec sed odio eros.&lt;/p&gt; &lt;h3&gt;Another subsection&lt;/h3&gt; &lt;p&gt;Donec viverra mi quis quam pulvinar at malesuada arcu rhoncus. Cum soclis natoque penatibus et manis dis parturient montes, nascetur ridiculus mus. In rutrum accumsan ultricies. Mauris vitae nisi at sem facilisis semper ac in est.&lt;/p&gt; &lt;p&gt;Vivamus fermentum semper porta. Nunc diam velit, adipscing ut tristique vitae sagittis vel odio. Maecenas convallis ullamcorper ultricied. Curabitur ornare, ligula semper consectetur sagittis, nisi diam iaculis velit, is fringille sem nunc vet mi.&lt;/p&gt; &lt;/article&gt; &lt;!-- the aside content can also be nested within the main content --&gt; &lt;aside&gt; &lt;h2&gt;Related&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Oh I do like to be beside the seaside&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Oh I do like to be beside the sea&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Although in the North of England&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;It never stops raining&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Oh well…&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/aside&gt; &lt;/main&gt; &lt;!-- And here is our main footer that is used across all the pages of our website --&gt; &lt;footer&gt; &lt;p&gt;©Copyright 2050 by nobody. All rights reversed.&lt;/p&gt; &lt;/footer&gt; &lt;/body&gt;&lt;/html&gt; Copy to Clipboard Take some time to look over the code and understand it — the comments inside the code should also help you to understand it. We aren’t asking you to do much else in this article, because the key to understanding document layout is writing a sound HTML structure, and then laying it out with CSS. We’ll wait for this until you start to study CSS layout as part of the CSS topic. HTML layout elements in more detailIt’s good to understand the overall meaning of all the HTML sectioning elements in detail — this is something you’ll work on gradually as you start to get more experience with web development. You can find a lot of detail by reading our HTML element reference. For now, these are the main definitions that you should try to understand: `` is for content unique to this page. Use &lt;main&gt; only once per page, and put it directly inside ``. Ideally this shouldn’t be nested within other elements. `` encloses a block of related content that makes sense on its own without the rest of the page (e.g., a single blog post). `` is similar to &lt;article&gt;, but it is more for grouping together a single part of the page that constitutes one single piece of functionality (e.g., a mini map, or a set of article headlines and summaries), or a theme. It’s considered best practice to begin each section with a heading; also note that you can break &lt;article&gt;s up into different &lt;section&gt;s, or &lt;section&gt;s up into different &lt;article&gt;s, depending on the context. `` contains content that is not directly related to the main content but can provide additional information indirectly related to it (glossary entries, author biography, related links, etc.). `` represents a group of introductory content. If it is a child of `` it defines the global header of a webpage, but if it’s a child of an `` or `` it defines a specific header for that section (try not to confuse this with titles and headings). `` contains the main navigation functionality for the page. Secondary links, etc., would not go in the navigation. `` represents a group of end content for a page. Each of the aforementioned elements can be clicked on to read the corresponding article in the “HTML element reference” section, providing more detail about each one. Non-semantic wrappersSometimes you’ll come across a situation where you can’t find an ideal semantic element to group some items together or wrap some content. Sometimes you might want to just group a set of elements together to affect them all as a single entity with some CSS or JavaScript. For cases like these, HTML provides the `` and `` elements. You should use these preferably with a suitable class attribute, to provide some kind of label for them so they can be easily targeted. `` is an inline non-semantic element, which you should only use if you can’t think of a better semantic text element to wrap your content, or don’t want to add any specific meaning. For example: 123&lt;p&gt;The King walked drunkenly back to his room at 01:00, the beer doing nothing to aidhim as he staggered through the door &lt;span class=&quot;editor-note&quot;&gt;[Editor's note: At this point in theplay, the lights should be down low]&lt;/span&gt;.&lt;/p&gt; Copy to Clipboard In this case, the editor’s note is supposed to merely provide extra direction for the director of the play; it is not supposed to have extra semantic meaning. For sighted users, CSS would perhaps be used to distance the note slightly from the main text. is a block level non-semantic element, which you should only use if you can't think of a better semantic block element to use, or don't want to add any specific meaning. For example, imagine a shopping cart widget that you could choose to pull up at any point during your time on an e-commerce site: 12345678910111213&lt;div class=&quot;shopping-cart&quot;&gt; &lt;h2&gt;Shopping cart&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;&quot;&gt;&lt;strong&gt;Silver earrings&lt;/strong&gt;&lt;/a&gt;: $99.95.&lt;/p&gt; &lt;img src=&quot;../products/3333-0985/thumb.png&quot; alt=&quot;Silver earrings&quot;&gt; &lt;/li&gt; &lt;li&gt; … &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Total cost: $237.89&lt;/p&gt;&lt;/div&gt; Copy to Clipboard This isn’t really an &lt;aside&gt;, as it doesn’t necessarily relate to the main content of the page (you want it viewable from anywhere). It doesn’t even particularly warrant using a &lt;section&gt;, as it isn’t part of the main content of the page. So a &lt;div&gt; is fine in this case. We’ve included a heading as a signpost to aid screen reader users in finding it. Warning: Divs are so convenient to use that it’s easy to use them too much. As they carry no semantic value, they just clutter your HTML code. Take care to use them only when there is no better semantic solution and try to reduce their usage to the minimum otherwise you’ll have a hard time updating and maintaining your documents. Line breaks and horizontal rulesTwo elements that you’ll use occasionally and will want to know about are `` and ``. : the line break element&lt;br&gt; creates a line break in a paragraph; it is the only way to force a rigid structure in a situation where you want a series of fixed short lines, such as in a postal address or a poem. For example: 1234&lt;p&gt;There once was a man named O'Dell&lt;br&gt;Who loved to write HTML&lt;br&gt;But his structure was bad, his semantics were sad&lt;br&gt;and his markup didn't read very well.&lt;/p&gt; Copy to Clipboard Without the &lt;br&gt; elements, the paragraph would just be rendered in one long line (as we said earlier in the course, HTML ignores most whitespace); with &lt;br&gt; elements in the code, the markup renders like this: : the thematic break element&lt;hr&gt; elements create a horizontal rule in the document that denotes a thematic change in the text (such as a change in topic or scene). Visually it just looks like a horizontal line. As an example: 12345678&lt;p&gt;Ron was backed into a corner by the marauding netherbeasts. Scared, but determined to protect his friends, he raised his wand and prepared to do battle, hoping that his distress call had made it through.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Meanwhile, Harry was sitting at home, staring at his royalty statement and pondering when the next spin off series would come out, when an enchanted distress letter flew through his window and landed in his lap. He read it hazily and sighed; &quot;better get back to work then&quot;, he mused.&lt;/p&gt; Copy to Clipboard Would render like this: Planning a simple websiteOnce you’ve planned out the structure of a simple webpage, the next logical step is to try to work out what content you want to put on a whole website, what pages you need, and how they should be arranged and link to one another for the best possible user experience. This is called Information architecture. In a large, complex website, a lot of planning can go into this process, but for a simple website of a few pages, this can be fairly simple, and fun! Bear in mind that you’ll have a few elements common to most (if not all) pages — such as the navigation menu, and the footer content. If your site is for a business, for example, it’s a good idea to have your contact information available in the footer on each page. Note down what you want to have common to every page. Next, draw a rough sketch of what you might want the structure of each page to look like (it might look like our simple website above). Note what each block is going to be. Now, brainstorm all the other (not common to every page) content you want to have on your website — write a big list down. Next, try to sort all these content items into groups, to give you an idea of what parts might live together on different pages. This is very similar to a technique called Card sorting. Now try to sketch a rough sitemap — have a bubble for each page on your site, and draw lines to show the typical workflow between pages. The homepage will probably be in the center, and link to most if not all of the others; most of the pages in a small site should be available from the main navigation, although there are exceptions. You might also want to include notes about how things might be presented. Active learning: create your own sitemapTry carrying out the above exercise for a website of your own creation. What would you like to make a site about? Note: Save your work somewhere; you might need it later on. SummaryAt this point, you should have a better idea about how to structure a web page/site. In the last article of this module, we’ll learn how to debug HTML.","link":"/2022/08/23/document-and-website-structure/"},{"title":"如何成功","text":"How To Be Successfulfrom：How To Be Successful - Sam Altman I’ve observed thousands of founders and thought a lot about what it takes to make a huge amount of money or to create something important. Usually, people start off wanting the former and end up wanting the latter. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190I’ve observed thousands of founders and thought a lot about what it takes to make a huge amount of money or to create something important. Usually, people start off wanting the former and end up wanting the latter.Here are 13 thoughts about how to achieve such outlier success. Everything here is easier to do once you’ve already reached a baseline degree of success (through privilege or effort) and want to put in the work to turn that into outlier success. [1] But much of it applies to anyone.1. Compound yourselfCompounding is magic. Look for it everywhere. Exponential curves are the key to wealth generation.A medium-sized business that grows 50% in value every year becomes huge in a very short amount of time. Few businesses in the world have true network effects and extreme scalability. But with technology, more and more will. It’s worth a lot of effort to find them and create them.You also want to be an exponential curve yourself—you should aim for your life to follow an ever-increasing up-and-to-the-right trajectory. It’s important to move towards a career that has a compounding effect—most careers progress fairly linearly.You don't want to be in a career where people who have been doing it for two years can be as effective as people who have been doing it for twenty—your rate of learning should always be high. As your career progresses, each unit of work you do should generate more and more results. There are many ways to get this leverage, such as capital, technology, brand, network effects, and managing people.It’s useful to focus on adding another zero to whatever you define as your success metric—money, status, impact on the world, or whatever. I am willing to take as much time as needed between projects to find my next thing. But I always want it to be a project that, if successful, will make the rest of my career look like a footnote.Most people get bogged down in linear opportunities. Be willing to let small opportunities go to focus on potential step changes.I think the biggest competitive advantage in business—either for a company or for an individual’s career—is long-term thinking with a broad view of how different systems in the world are going to come together. One of the notable aspects of compound growth is that the furthest out years are the most important. In a world where almost no one takes a truly long-term view, the market richly rewards those who do.Trust the exponential, be patient, and be pleasantly surprised.2. Have almost too much self-beliefSelf-belief is immensely powerful. The most successful people I know believe in themselves almost to the point of delusion.Cultivate this early. As you get more data points that your judgment is good and you can consistently deliver results, trust yourself more.If you don’t believe in yourself, it’s hard to let yourself have contrarian ideas about the future. But this is where most value gets created.I remember when Elon Musk took me on a tour of the SpaceX factory many years ago. He talked in detail about manufacturing every part of the rocket, but the thing that sticks in memory was the look of absolute certainty on his face when he talked about sending large rockets to Mars. I left thinking “huh, so that’s the benchmark for what conviction looks like.”Managing your own morale—and your team’s morale—is one of the greatest challenges of most endeavors. It’s almost impossible without a lot of self-belief. And unfortunately, the more ambitious you are, the more the world will try to tear you down. Most highly successful people have been really right about the future at least once at a time when people thought they were wrong. If not, they would have faced much more competition.Self-belief must be balanced with self-awareness. I used to hate criticism of any sort and actively avoided it. Now I try to always listen to it with the assumption that it’s true, and then decide if I want to act on it or not. Truth-seeking is hard and often painful, but it is what separates self-belief from self-delusion.This balance also helps you avoid coming across as entitled and out of touch.3. Learn to think independentlyEntrepreneurship is very difficult to teach because original thinking is very difficult to teach. School is not set up to teach this—in fact, it generally rewards the opposite. So you have to cultivate it on your own.Thinking from first principles and trying to generate new ideas is fun, and finding people to exchange them with is a great way to get better at this. The next step is to find easy, fast ways to test these ideas in the real world.“I will fail many times, and I will be really right once” is the entrepreneurs’ way. You have to give yourself a lot of chances to get lucky.One of the most powerful lessons to learn is that you can figure out what to do in situations that seem to have no solution. The more times you do this, the more you will believe it. Grit comes from learning you can get back up after you get knocked down.4. Get good at “sales”Self-belief alone is not sufficient—you also have to be able to convince other people of what you believe.All great careers, to some degree, become sales jobs. You have to evangelize your plans to customers, prospective employees, the press, investors, etc. This requires an inspiring vision, strong communication skills, some degree of charisma, and evidence of execution ability.Getting good at communication—particularly written communication—is an investment worth making. My best advice for communicating clearly is to first make sure your thinking is clear and then use plain, concise language.The best way to be good at sales is to genuinely believe in what you’re selling. Selling what you truly believe in feels great, and trying to sell snake oil feels awful.Getting good at sales is like improving at any other skill—anyone can get better at it with deliberate practice. But for some reason, perhaps because it feels distasteful, many people treat it as something unlearnable.My other big sales tip is to show up in person whenever it’s important. When I was first starting out, I was always willing to get on a plane. It was frequently unnecessary, but three times it led to career-making turning points for me that otherwise would have gone the other way.5. Make it easy to take risksMost people overestimate risk and underestimate reward. Taking risks is important because it’s impossible to be right all the time—you have to try many things and adapt quickly as you learn more.It’s often easier to take risks early in your career; you don’t have much to lose, and you potentially have a lot to gain. Once you’ve gotten yourself to a point where you have your basic obligations covered you should try to make it easy to take risks. Look for small bets you can make where you lose 1x if you’re wrong but make 100x if it works. Then make a bigger bet in that direction.Don’t save up for too long, though. At YC, we’ve often noticed a problem with founders that have spent a lot of time working at Google or Facebook. When people get used to a comfortable life, a predictable job, and a reputation of succeeding at whatever they do, it gets very hard to leave that behind (and people have an incredible ability to always match their lifestyle to next year’s salary). Even if they do leave, the temptation to return is great. It’s easy—and human nature—to prioritize short-term gain and convenience over long-term fulfillment. But when you aren’t on the treadmill, you can follow your hunches and spend time on things that might turn out to be really interesting. Keeping your life cheap and flexible for as long as you can is a powerful way to do this, but obviously comes with tradeoffs.6. FocusFocus is a force multiplier on work.Almost everyone I’ve ever met would be well-served by spending more time thinking about what to focus on. It is much more important to work on the right thing than it is to work many hours. Most people waste most of their time on stuff that doesn’t matter.Once you have figured out what to do, be unstoppable about getting your small handful of priorities accomplished quickly. I have yet to meet a slow-moving person who is very successful.7. Work hardYou can get to about the 90th percentile in your field by working either smart or hard, which is still a great accomplishment. But getting to the 99th percentile requires both—you will be competing with other very talented people who will have great ideas and be willing to work a lot.Extreme people get extreme results. Working a lot comes with huge life trade-offs, and it’s perfectly rational to decide not to do it. But it has a lot of advantages. As in most cases, momentum compounds, and success begets success.And it’s often really fun. One of the great joys in life is finding your purpose, excelling at it, and discovering that your impact matters to something larger than yourself. A YC founder recently expressed great surprise about how much happier and more fulfilled he was after leaving his job at a big company and working towards his maximum possible impact. Working hard at that should be celebrated. It’s not entirely clear to me why working hard has become a Bad Thing in certain parts of the US, but this is certainly not the case in other parts of the world—the amount of energy and drive exhibited by entrepreneurs outside of the US is quickly becoming the new benchmark.You have to figure out how to work hard without burning out. People find their own strategies for this, but one that almost always works is to find work you like doing with people you enjoy spending a lot of time with.I think people who pretend you can be super successful professionally without working most of the time (for some period of your life) are doing a disservice. In fact, work stamina seems to be one of the biggest predictors of long-term success.One more thought about working hard: do it at the beginning of your career. Hard work compounds like interest, and the earlier you do it, the more time you have for the benefits to pay off. It’s also easier to work hard when you have fewer other responsibilities, which is frequently but not always the case when you’re young.8. Be boldI believe that it’s easier to do a hard startup than an easy startup. People want to be part of something exciting and feel that their work matters.If you are making progress on an important problem, you will have a constant tailwind of people wanting to help you. Let yourself grow more ambitious, and don’t be afraid to work on what you really want to work on.If everyone else is starting meme companies, and you want to start a gene-editing company, then do that and don’t second guess it.Follow your curiosity. Things that seem exciting to you will often seem exciting to other people too.9. Be willfulA big secret is that you can bend the world to your will a surprising percentage of the time—most people don’t even try, and just accept that things are the way that they are.People have an enormous capacity to make things happen. A combination of self-doubt, giving up too early, and not pushing hard enough prevents most people from ever reaching anywhere near their potential.Ask for what you want. You usually won’t get it, and often the rejection will be painful. But when this works, it works surprisingly well.Almost always, the people who say “I am going to keep going until this works, and no matter what the challenges are I’m going to figure them out”, and mean it, go on to succeed. They are persistent long enough to give themselves a chance for luck to go their way.Airbnb is my benchmark for this. There are so many stories they tell that I wouldn’t recommend trying to reproduce (keeping maxed-out credit cards in those nine-slot three-ring binder pages kids use for baseball cards, eating dollar store cereal for every meal, battle after battle with powerful entrenched interest, and on and on) but they managed to survive long enough for luck to go their way.To be willful, you have to be optimistic—hopefully this is a personality trait that can be improved with practice. I have never met a very successful pessimistic person.10. Be hard to compete withMost people understand that companies are more valuable if they are difficult to compete with. This is important, and obviously true.But this holds true for you as an individual as well. If what you do can be done by someone else, it eventually will be, and for less money.The best way to become difficult to compete with is to build up leverage. For example, you can do it with personal relationships, by building a strong personal brand, or by getting good at the intersection of multiple different fields. There are many other strategies, but you have to figure out some way to do it.Most people do whatever most people they hang out with do. This mimetic behavior is usually a mistake—if you’re doing the same thing everyone else is doing, you will not be hard to compete with.11. Build a networkGreat work requires teams. Developing a network of talented people to work with—sometimes closely, sometimes loosely—is an essential part of a great career. The size of the network of really talented people you know often becomes the limiter for what you can accomplish.An effective way to build a network is to help people as much as you can. Doing this, over a long period of time, is what lead to most of my best career opportunities and three of my four best investments. I’m continually surprised how often something good happens to me because of something I did to help a founder ten years ago.One of the best ways to build a network is to develop a reputation for really taking care of the people who work with you. Be overly generous with sharing the upside; it will come back to you 10x. Also, learn how to evaluate what people are great at, and put them in those roles. (This is the most important thing I have learned about management, and I haven’t read much about it.) You want to have a reputation for pushing people hard enough that they accomplish more than they thought they could, but not so hard they burn out.Everyone is better at some things than others. Define yourself by your strengths, not your weaknesses. Acknowledge your weaknesses and figure out how to work around them, but don’t let them stop you from doing what you want to do. “I can’t do X because I’m not good at Y” is something I hear from entrepreneurs surprisingly often, and almost always reflects a lack of creativity. The best way to make up for your weaknesses is to hire complementary team members instead of just hiring people who are good at the same things you are.A particularly valuable part of building a network is to get good at discovering undiscovered talent. Quickly spotting intelligence, drive, and creativity gets much easier with practice. The easiest way to learn is just to meet a lot of people, and keep track of who goes on to impress you and who doesn’t. Remember that you are mostly looking for rate of improvement, and don’t overvalue experience or current accomplishment.I try to always ask myself when I meet someone new “is this person a force of nature?” It’s a pretty good heuristic for finding people who are likely to accomplish great things.A special case of developing a network is finding someone eminent to take a bet on you, ideally early in your career. The best way to do this, no surprise, is to go out of your way to be helpful. (And remember that you have to pay this forward at some point later!)Finally, remember to spend your time with positive people who support your ambitions.12. You get rich by owning thingsThe biggest economic misunderstanding of my childhood was that people got rich from high salaries. Though there are some exceptions—entertainers for example —almost no one in the history of the Forbes list has gotten there with a salary.You get truly rich by owning things that increase rapidly in value.This can be a piece of a business, real estate, natural resource, intellectual property, or other similar things. But somehow or other, you need to own equity in something, instead of just selling your time. Time only scales linearly.The best way to make things that increase rapidly in value is by making things people want at scale.13. Be internally drivenMost people are primarily externally driven; they do what they do because they want to impress other people. This is bad for many reasons, but here are two important ones.First, you will work on consensus ideas and on consensus career tracks. You will care a lot—much more than you realize—if other people think you’re doing the right thing. This will probably prevent you from doing truly interesting work, and even if you do, someone else would have done it anyway.Second, you will usually get risk calculations wrong. You’ll be very focused on keeping up with other people and not falling behind in competitive games, even in the short term.Smart people seem to be especially at risk of such externally-driven behavior. Being aware of it helps, but only a little—you will likely have to work super-hard to not fall in the mimetic trap.The most successful people I know are primarily internally driven; they do what they do to impress themselves and because they feel compelled to make something happen in the world. After you’ve made enough money to buy whatever you want and gotten enough social status that it stops being fun to get more, this is the only force I know of that will continue to drive you to higher levels of performance.This is why the question of a person’s motivation is so important. It’s the first thing I try to understand about someone. The right motivations are hard to define a set of rules for, but you know it when you see it.Jessica Livingston and Paul Graham are my benchmarks for this. YC was widely mocked for the first few years, and almost no one thought it would be a big success when they first started. But they thought it would be great for the world if it worked, and they love helping people, and they were convinced their new model was better than the existing model.Eventually, you will define your success by performing excellent work in areas that are important to you. The sooner you can start off in that direction, the further you will be able to go. It is hard to be wildly successful at anything you aren’t obsessed with.[1] A comment response I wrote on HN:One of the biggest reasons I'm excited about basic income is the amount of human potential it will unleash by freeing more people to take risks.Until then, if you aren't born lucky, you have to claw your way up for awhile before you can take big swings. If you are born in extreme poverty, then this is super difficult :(It is obviously an incredible shame and waste that opportunity is so unevenly distributed. But I've witnessed enough people be born with the deck stacked badly against them and go on to incredible success to know it's possible.I am deeply aware of the fact that I personally would not be where I am if I weren't born incredibly lucky.Thanks to Brian Armstrong, Greg Brockman, Dalton Caldwell, Diane von Furstenberg, Maddie Hall, Drew Houston, Vinod Khosla, Jessica Livingston, Jon Levy, Luke Miles (6 drafts!), Michael Moritz, Ali Rowghani, Michael Seibel, Peter Thiel, Tracy Young and Shivon Zilis for reviewing drafts of this, and thanks especially to Lachy Groom for help writing it.","link":"/2022/09/24/%E7%B2%BE%E5%BD%A9%E8%AF%AD%E5%BD%95/%E5%A6%82%E4%BD%95%E6%88%90%E5%8A%9F/"},{"title":"win7&#x2F;win10打印机共享汇总","text":"Windows 7/10系统局域网打印机共享汇总[本文引用自知乎pienashuicha：https://zhuanlan.zhihu.com/p/44853967] 写在前面：本例使用的操作系统为Windows 7 64位 SP1旗舰版 和 Windows 10 64位专业版 1803的系统。 一. 计算机/此电脑设置 \\1. 工作组设置（设置成同一个工作组，比如：WorkGroup或Mshome） 右击计算机(Win7)/此电脑(Win10) – 属性 – 高级系统设置 – 计算机名 – 更改 – 修改 工作组名称，使得需要连接打印机的电脑处于同一个工作组 – 确定 – 设置完后，需要重启生效。 Windows 7系统工作组设置 Windows 10系统工作组设置 二. 启用网络发现功能 控制面板\\所有控制面板项\\网络和共享中心\\高级共享设置，对家庭网络/工作网络/公用网络进行如下设置： Windows 7启用网络发现-1 Windows 7启用网络发现-2 Windows 7启用网络发现-3 Windows 10启用网络发现-1 Windows 10启用网络发现-2 Windows 10启用网络发现-3 三. IP地址设置 控制面板\\所有控制面板项\\网络连接 – 本地连接/以太网 – 属性 – Internet 协议版本4（TCP/IPv4）– 属性 – 使用下面的IP地址，依据下图格式填写（以自己网络IP地址为准，这里只是作为一个参考）– 使用下面的DNS服务器地址（以当地网络运营商为准，这里只是作为一个参考） Windows 7设置固定IP地址 Windows 10 设置固定IP地址 四. 本地连接(Win7)/以太网(Win10)属性下的此连接使用下列项目（勾选7项） 控制面板\\所有控制面板项\\网络连接 – 本地连接/以太网 – 属性 – 勾选如下7项，若有的没有，可以点击安装进行客户端/协议/服务的安装操作： Microsoft 网络客户端 Microsoft 网络的文件和打印机共享 QoS 数据包计划程序 Internet 协议版本4（TCP/IPv4） Internet 协议版本4（TCP/IPv6） 链路层拓扑发现响应程序 链路层拓扑发现映射器I/O 驱动程序 Windows 7系统本地连接 属性 Windows 10系统以太网 属性 五. 开启来宾账户GUEST 在cmd命令行窗口下输入如下代码并回车： net user guest /active:yes 激活来宾GUEST账户 计算机 – 管理 – 用户下查看GUEST的状态 六. Windows防火墙设置 开启Windows (Defender) 防火墙的设置 控制面板\\所有控制面板项\\Windows (Defender) 防火墙\\允许的应用 – 文件和打印机共享 的两个勾都勾选 – 网络发现 的两个勾都勾选 – 确定 Windows Defender防火墙例外设置（Windows 10） \\2. 关闭Windows 防火墙 控制面板\\所有控制面板项\\Windows Defender 防火墙 – 高级设置 – 属性 – 分别将 域配置文件、专用配置文件和公用配置文件 的防火墙状态设为关闭 – 确定 关闭Windows 防火墙（Windows 10） 关闭后的防火墙（Windows 10） 七. 服务设置 Windows 7系统开启如下服务（自动 – 运行状态）： Computer Browser DHCP Client Function Discovery Provider Host Function Discovery Resource Publication Internet Connection Sharing (ICS) Network Connections Network Location Awareness Network List Service Print Spooler Server TCP/IP NetBIOS Helper SSDP Discovery UPnP Device Host Workstation Windows Firewall \\2. Windows 10系统开启如下服务（自动 – 运行状态）： Computer Browser DHCP Client Function Discovery Provider Host Function Discovery Resource Publication Internet Connection Sharing (ICS) LPD Service Network Connections Network Location Awareness Network List Service Print Spooler Printer Extensions and Notifications Server TCP/IP NetBIOS Helper SSDP Discovery UPnP Device Host Workstation Windows Firewall 八. 组策略设置 开始 – 运行里输入 gpedit.msc 并回车，打开本地组策略编辑器。 计算机配置 – Windows设置 – 安全设置 – 本地策略 – 用户权限分配 – 拒绝本地登录 里添加guest（可以避免Windows 7开机出现guest登录账户）； 计算机配置 – Windows设置 – 安全设置 – 本地策略 – 用户权限分配 – 拒绝从网络访问这台计算机 – 删除其下的所有账户； 计算机配置 – Windows设置 – 安全设置 – 本地策略 – 安全选项 – 网络访问:本地账户的共享和安全模型，设置为仅来宾 - 对本地用户进行身份验证，其身份为来宾； 计算机配置 – Windows设置 – 安全设置 – 本地策略 – 安全选项 – 账户:使用空白密码的本地账户只允许进行控制台登录，设置为已禁用。 九. 注册表设置 开始 – 运行里输入 regedit 并回车，定位到HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa，将restrictanonymous的REG_DWORD值设为0 Windows注册表设置 发布于 2018-09-18 22:20","link":"/2023/01/30/windows/win7-win10%E6%89%93%E5%8D%B0%E6%9C%BA%E5%85%B1%E4%BA%AB%E6%B1%87%E6%80%BB/"}],"tags":[{"name":"stock","slug":"stock","link":"/tags/stock/"},{"name":"cmd","slug":"cmd","link":"/tags/cmd/"},{"name":"coding","slug":"coding","link":"/tags/coding/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"javascript","slug":"javascript","link":"/tags/javascript/"},{"name":"javascript对象","slug":"javascript对象","link":"/tags/javascript%E5%AF%B9%E8%B1%A1/"},{"name":"MDN","slug":"MDN","link":"/tags/MDN/"},{"name":"web","slug":"web","link":"/tags/web/"},{"name":"系统维护","slug":"系统维护","link":"/tags/%E7%B3%BB%E7%BB%9F%E7%BB%B4%E6%8A%A4/"},{"name":"html","slug":"html","link":"/tags/html/"},{"name":"URL","slug":"URL","link":"/tags/URL/"},{"name":"path","slug":"path","link":"/tags/path/"},{"name":"SoftTools","slug":"SoftTools","link":"/tags/SoftTools/"},{"name":"asset folder","slug":"asset-folder","link":"/tags/asset-folder/"},{"name":"markdown","slug":"markdown","link":"/tags/markdown/"},{"name":"css","slug":"css","link":"/tags/css/"},{"name":"github","slug":"github","link":"/tags/github/"},{"name":"-github -git","slug":"github-git","link":"/tags/github-git/"},{"name":"-SSH -Https","slug":"SSH-Https","link":"/tags/SSH-Https/"},{"name":"git","slug":"git","link":"/tags/git/"},{"name":"actions","slug":"actions","link":"/tags/actions/"},{"name":"how-to-use-hexo","slug":"how-to-use-hexo","link":"/tags/how-to-use-hexo/"},{"name":"前端","slug":"前端","link":"/tags/%E5%89%8D%E7%AB%AF/"},{"name":"url","slug":"url","link":"/tags/url/"},{"name":"宽带上网","slug":"宽带上网","link":"/tags/%E5%AE%BD%E5%B8%A6%E4%B8%8A%E7%BD%91/"},{"name":"publish website","slug":"publish-website","link":"/tags/publish-website/"},{"name":"图像","slug":"图像","link":"/tags/%E5%9B%BE%E5%83%8F/"},{"name":"http","slug":"http","link":"/tags/http/"},{"name":"localhost","slug":"localhost","link":"/tags/localhost/"},{"name":"science&amp;technology","slug":"science-technology","link":"/tags/science-technology/"},{"name":"去广告","slug":"去广告","link":"/tags/%E5%8E%BB%E5%B9%BF%E5%91%8A/"},{"name":"todolist","slug":"todolist","link":"/tags/todolist/"},{"name":"hugo","slug":"hugo","link":"/tags/hugo/"},{"name":"deployment","slug":"deployment","link":"/tags/deployment/"},{"name":"Netlify","slug":"Netlify","link":"/tags/Netlify/"},{"name":"windows操作技巧","slug":"windows操作技巧","link":"/tags/windows%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/"},{"name":"git命令","slug":"git命令","link":"/tags/git%E5%91%BD%E4%BB%A4/"},{"name":"tools ,搜索","slug":"tools-搜索","link":"/tags/tools-%E6%90%9C%E7%B4%A2/"},{"name":"中医","slug":"中医","link":"/tags/%E4%B8%AD%E5%8C%BB/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"倒车","slug":"倒车","link":"/tags/%E5%80%92%E8%BD%A6/"},{"name":"倒车入库","slug":"倒车入库","link":"/tags/%E5%80%92%E8%BD%A6%E5%85%A5%E5%BA%93/"},{"name":"倒车出库","slug":"倒车出库","link":"/tags/%E5%80%92%E8%BD%A6%E5%87%BA%E5%BA%93/"},{"name":"汽车","slug":"汽车","link":"/tags/%E6%B1%BD%E8%BD%A6/"},{"name":"科目二","slug":"科目二","link":"/tags/%E7%A7%91%E7%9B%AE%E4%BA%8C/"},{"name":"tiddlywiki","slug":"tiddlywiki","link":"/tags/tiddlywiki/"},{"name":"书法","slug":"书法","link":"/tags/%E4%B9%A6%E6%B3%95/"},{"name":"经济学","slug":"经济学","link":"/tags/%E7%BB%8F%E6%B5%8E%E5%AD%A6/"},{"name":"选好股买好时机","slug":"选好股买好时机","link":"/tags/%E9%80%89%E5%A5%BD%E8%82%A1%E4%B9%B0%E5%A5%BD%E6%97%B6%E6%9C%BA/"},{"name":"维特拉保养","slug":"维特拉保养","link":"/tags/%E7%BB%B4%E7%89%B9%E6%8B%89%E4%BF%9D%E5%85%BB/"},{"name":"机油保养","slug":"机油保养","link":"/tags/%E6%9C%BA%E6%B2%B9%E4%BF%9D%E5%85%BB/"},{"name":"古典艺术","slug":"古典艺术","link":"/tags/%E5%8F%A4%E5%85%B8%E8%89%BA%E6%9C%AF/"},{"name":"照片","slug":"照片","link":"/tags/%E7%85%A7%E7%89%87/"},{"name":"和田玉","slug":"和田玉","link":"/tags/%E5%92%8C%E7%94%B0%E7%8E%89/"},{"name":"咖啡","slug":"咖啡","link":"/tags/%E5%92%96%E5%95%A1/"},{"name":"资产负债表","slug":"资产负债表","link":"/tags/%E8%B5%84%E4%BA%A7%E8%B4%9F%E5%80%BA%E8%A1%A8/"},{"name":"经济增长","slug":"经济增长","link":"/tags/%E7%BB%8F%E6%B5%8E%E5%A2%9E%E9%95%BF/"},{"name":"资产配置","slug":"资产配置","link":"/tags/%E8%B5%84%E4%BA%A7%E9%85%8D%E7%BD%AE/"},{"name":"google","slug":"google","link":"/tags/google/"},{"name":"浏览器","slug":"浏览器","link":"/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"},{"name":"批处理","slug":"批处理","link":"/tags/%E6%89%B9%E5%A4%84%E7%90%86/"},{"name":"tiddlywiki token","slug":"tiddlywiki-token","link":"/tags/tiddlywiki-token/"},{"name":"删除仓库","slug":"删除仓库","link":"/tags/%E5%88%A0%E9%99%A4%E4%BB%93%E5%BA%93/"},{"name":"空的仓库","slug":"空的仓库","link":"/tags/%E7%A9%BA%E7%9A%84%E4%BB%93%E5%BA%93/"},{"name":"仓库","slug":"仓库","link":"/tags/%E4%BB%93%E5%BA%93/"},{"name":"git push","slug":"git-push","link":"/tags/git-push/"},{"name":"pdf","slug":"pdf","link":"/tags/pdf/"},{"name":"tiddlywiki tagged sub-tiddler","slug":"tiddlywiki-tagged-sub-tiddler","link":"/tags/tiddlywiki-tagged-sub-tiddler/"},{"name":"git github ssh","slug":"git-github-ssh","link":"/tags/git-github-ssh/"},{"name":"汽车，二手汽车","slug":"汽车，二手汽车","link":"/tags/%E6%B1%BD%E8%BD%A6%EF%BC%8C%E4%BA%8C%E6%89%8B%E6%B1%BD%E8%BD%A6/"},{"name":"DOM","slug":"DOM","link":"/tags/DOM/"},{"name":"hexo github action","slug":"hexo-github-action","link":"/tags/hexo-github-action/"},{"name":"财务自由","slug":"财务自由","link":"/tags/%E8%B4%A2%E5%8A%A1%E8%87%AA%E7%94%B1/"},{"name":"财富自由","slug":"财富自由","link":"/tags/%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1/"},{"name":"tools","slug":"tools","link":"/tags/tools/"},{"name":"目标清单","slug":"目标清单","link":"/tags/%E7%9B%AE%E6%A0%87%E6%B8%85%E5%8D%95/"},{"name":"生活感悟","slug":"生活感悟","link":"/tags/%E7%94%9F%E6%B4%BB%E6%84%9F%E6%82%9F/"},{"name":"智慧树","slug":"智慧树","link":"/tags/%E6%99%BA%E6%85%A7%E6%A0%91/"},{"name":"快乐","slug":"快乐","link":"/tags/%E5%BF%AB%E4%B9%90/"},{"name":"手机投屏","slug":"手机投屏","link":"/tags/%E6%89%8B%E6%9C%BA%E6%8A%95%E5%B1%8F/"},{"name":"图像处理","slug":"图像处理","link":"/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"},{"name":"打印机","slug":"打印机","link":"/tags/%E6%89%93%E5%8D%B0%E6%9C%BA/"},{"name":"打印机驱动","slug":"打印机驱动","link":"/tags/%E6%89%93%E5%8D%B0%E6%9C%BA%E9%A9%B1%E5%8A%A8/"},{"name":"驱动卸载","slug":"驱动卸载","link":"/tags/%E9%A9%B1%E5%8A%A8%E5%8D%B8%E8%BD%BD/"},{"name":"单位系统维护","slug":"单位系统维护","link":"/tags/%E5%8D%95%E4%BD%8D%E7%B3%BB%E7%BB%9F%E7%BB%B4%E6%8A%A4/"},{"name":"读书笔记","slug":"读书笔记","link":"/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"},{"name":"音频","slug":"音频","link":"/tags/%E9%9F%B3%E9%A2%91/"},{"name":"rps","slug":"rps","link":"/tags/rps/"},{"name":"月线反转","slug":"月线反转","link":"/tags/%E6%9C%88%E7%BA%BF%E5%8F%8D%E8%BD%AC/"},{"name":"关联远程仓库","slug":"关联远程仓库","link":"/tags/%E5%85%B3%E8%81%94%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/"},{"name":"office技巧","slug":"office技巧","link":"/tags/office%E6%8A%80%E5%B7%A7/"},{"name":"windows","slug":"windows","link":"/tags/windows/"},{"name":"net framework3.5","slug":"net-framework3-5","link":"/tags/net-framework3-5/"},{"name":"下载工具","slug":"下载工具","link":"/tags/%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7/"},{"name":"维特拉维护保养","slug":"维特拉维护保养","link":"/tags/%E7%BB%B4%E7%89%B9%E6%8B%89%E7%BB%B4%E6%8A%A4%E4%BF%9D%E5%85%BB/"},{"name":"曲轴箱废气","slug":"曲轴箱废气","link":"/tags/%E6%9B%B2%E8%BD%B4%E7%AE%B1%E5%BA%9F%E6%B0%94/"},{"name":"维特拉火花塞","slug":"维特拉火花塞","link":"/tags/%E7%BB%B4%E7%89%B9%E6%8B%89%E7%81%AB%E8%8A%B1%E5%A1%9E/"},{"name":"维特拉","slug":"维特拉","link":"/tags/%E7%BB%B4%E7%89%B9%E6%8B%89/"},{"name":"维特拉车友经验","slug":"维特拉车友经验","link":"/tags/%E7%BB%B4%E7%89%B9%E6%8B%89%E8%BD%A6%E5%8F%8B%E7%BB%8F%E9%AA%8C/"},{"name":"宏观经济","slug":"宏观经济","link":"/tags/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E/"},{"name":"股市","slug":"股市","link":"/tags/%E8%82%A1%E5%B8%82/"},{"name":"美食","slug":"美食","link":"/tags/%E7%BE%8E%E9%A3%9F/"},{"name":"english","slug":"english","link":"/tags/english/"},{"name":"windows文件夹权限","slug":"windows文件夹权限","link":"/tags/windows%E6%96%87%E4%BB%B6%E5%A4%B9%E6%9D%83%E9%99%90/"},{"name":"维特拉问题收集","slug":"维特拉问题收集","link":"/tags/%E7%BB%B4%E7%89%B9%E6%8B%89%E9%97%AE%E9%A2%98%E6%94%B6%E9%9B%86/"},{"name":"win7","slug":"win7","link":"/tags/win7/"},{"name":"win10","slug":"win10","link":"/tags/win10/"},{"name":"双系统","slug":"双系统","link":"/tags/%E5%8F%8C%E7%B3%BB%E7%BB%9F/"},{"name":"windows安装","slug":"windows安装","link":"/tags/windows%E5%AE%89%E8%A3%85/"},{"name":"angular","slug":"angular","link":"/tags/angular/"},{"name":"框架","slug":"框架","link":"/tags/%E6%A1%86%E6%9E%B6/"},{"name":"front framwork","slug":"front-framwork","link":"/tags/front-framwork/"},{"name":"github pages","slug":"github-pages","link":"/tags/github-pages/"},{"name":"自动发布","slug":"自动发布","link":"/tags/%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83/"},{"name":"hexo 新建文档","slug":"hexo-新建文档","link":"/tags/hexo-%E6%96%B0%E5%BB%BA%E6%96%87%E6%A1%A3/"},{"name":"print","slug":"print","link":"/tags/print/"},{"name":"打印机共享","slug":"打印机共享","link":"/tags/%E6%89%93%E5%8D%B0%E6%9C%BA%E5%85%B1%E4%BA%AB/"},{"name":"printer","slug":"printer","link":"/tags/printer/"},{"name":"网络打印机","slug":"网络打印机","link":"/tags/%E7%BD%91%E7%BB%9C%E6%89%93%E5%8D%B0%E6%9C%BA/"},{"name":"windwos","slug":"windwos","link":"/tags/windwos/"},{"name":"系统封装","slug":"系统封装","link":"/tags/%E7%B3%BB%E7%BB%9F%E5%B0%81%E8%A3%85/"},{"name":"虚拟机","slug":"虚拟机","link":"/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"},{"name":"Windows","slug":"Windows","link":"/tags/Windows/"},{"name":"共享打印机","slug":"共享打印机","link":"/tags/%E5%85%B1%E4%BA%AB%E6%89%93%E5%8D%B0%E6%9C%BA/"},{"name":"双屏显示","slug":"双屏显示","link":"/tags/%E5%8F%8C%E5%B1%8F%E6%98%BE%E7%A4%BA/"},{"name":"常见问题","slug":"常见问题","link":"/tags/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"},{"name":"精彩语录","slug":"精彩语录","link":"/tags/%E7%B2%BE%E5%BD%A9%E8%AF%AD%E5%BD%95/"},{"name":"无损分区","slug":"无损分区","link":"/tags/%E6%97%A0%E6%8D%9F%E5%88%86%E5%8C%BA/"},{"name":"梅傲分区","slug":"梅傲分区","link":"/tags/%E6%A2%85%E5%82%B2%E5%88%86%E5%8C%BA/"},{"name":"机油","slug":"机油","link":"/tags/%E6%9C%BA%E6%B2%B9/"},{"name":"真空泵","slug":"真空泵","link":"/tags/%E7%9C%9F%E7%A9%BA%E6%B3%B5/"},{"name":"发动机冷却液","slug":"发动机冷却液","link":"/tags/%E5%8F%91%E5%8A%A8%E6%9C%BA%E5%86%B7%E5%8D%B4%E6%B6%B2/"},{"name":"2分钟原则","slug":"2分钟原则","link":"/tags/2%E5%88%86%E9%92%9F%E5%8E%9F%E5%88%99/"},{"name":"行动","slug":"行动","link":"/tags/%E8%A1%8C%E5%8A%A8/"},{"name":"bios","slug":"bios","link":"/tags/bios/"},{"name":"hyperlinks","slug":"hyperlinks","link":"/tags/hyperlinks/"},{"name":"如何成功","slug":"如何成功","link":"/tags/%E5%A6%82%E4%BD%95%E6%88%90%E5%8A%9F/"}],"categories":[{"name":"Windows","slug":"Windows","link":"/categories/Windows/"},{"name":"web","slug":"web","link":"/categories/web/"},{"name":"mdn","slug":"mdn","link":"/categories/mdn/"},{"name":"系统维护","slug":"系统维护","link":"/categories/%E7%B3%BB%E7%BB%9F%E7%BB%B4%E6%8A%A4/"},{"name":"html","slug":"html","link":"/categories/html/"},{"name":"SoftTools","slug":"SoftTools","link":"/categories/SoftTools/"},{"name":"git","slug":"git","link":"/categories/git/"},{"name":"hexo","slug":"hexo","link":"/categories/hexo/"},{"name":"-markdown","slug":"markdown","link":"/categories/markdown/"},{"name":"github","slug":"github","link":"/categories/github/"},{"name":"图像","slug":"图像","link":"/categories/%E5%9B%BE%E5%83%8F/"},{"name":"rps","slug":"rps","link":"/categories/rps/"},{"name":"stock","slug":"stock","link":"/categories/stock/"},{"name":"science&amp;technology","slug":"science-technology","link":"/categories/science-technology/"},{"name":"todolist","slug":"todolist","link":"/categories/todolist/"},{"name":"hugo","slug":"hugo","link":"/categories/hugo/"},{"name":"windows","slug":"windows","link":"/categories/windows/"},{"name":"tools","slug":"tools","link":"/categories/tools/"},{"name":"中医","slug":"中医","link":"/categories/%E4%B8%AD%E5%8C%BB/"},{"name":"汽车驾驶","slug":"汽车驾驶","link":"/categories/%E6%B1%BD%E8%BD%A6%E9%A9%BE%E9%A9%B6/"},{"name":"汽车","slug":"汽车","link":"/categories/%E6%B1%BD%E8%BD%A6/"},{"name":"tiddlywiki","slug":"tiddlywiki","link":"/categories/tiddlywiki/"},{"name":"经济学","slug":"经济学","link":"/categories/%E7%BB%8F%E6%B5%8E%E5%AD%A6/"},{"name":"维特拉维护保养","slug":"维特拉维护保养","link":"/categories/%E7%BB%B4%E7%89%B9%E6%8B%89%E7%BB%B4%E6%8A%A4%E4%BF%9D%E5%85%BB/"},{"name":"艺术","slug":"艺术","link":"/categories/%E8%89%BA%E6%9C%AF/"},{"name":"和田玉","slug":"和田玉","link":"/categories/%E5%92%8C%E7%94%B0%E7%8E%89/"},{"name":"咖啡","slug":"咖啡","link":"/categories/%E5%92%96%E5%95%A1/"},{"name":"资产配置","slug":"资产配置","link":"/categories/%E8%B5%84%E4%BA%A7%E9%85%8D%E7%BD%AE/"},{"name":"理财","slug":"理财","link":"/categories/%E7%90%86%E8%B4%A2/"},{"name":"目标清单","slug":"目标清单","link":"/categories/%E7%9B%AE%E6%A0%87%E6%B8%85%E5%8D%95/"},{"name":"生活感悟","slug":"生活感悟","link":"/categories/%E7%94%9F%E6%B4%BB%E6%84%9F%E6%82%9F/"},{"name":"智慧树","slug":"智慧树","link":"/categories/%E6%99%BA%E6%85%A7%E6%A0%91/"},{"name":"手机投屏","slug":"手机投屏","link":"/categories/%E6%89%8B%E6%9C%BA%E6%8A%95%E5%B1%8F/"},{"name":"打印","slug":"打印","link":"/categories/%E6%89%93%E5%8D%B0/"},{"name":"读书笔记","slug":"读书笔记","link":"/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"},{"name":"音频","slug":"音频","link":"/categories/%E9%9F%B3%E9%A2%91/"},{"name":"office技巧","slug":"office技巧","link":"/categories/office%E6%8A%80%E5%B7%A7/"},{"name":"下载工具","slug":"下载工具","link":"/categories/%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7/"},{"name":"美食","slug":"美食","link":"/categories/%E7%BE%8E%E9%A3%9F/"},{"name":"english","slug":"english","link":"/categories/english/"},{"name":"音频","slug":"english/音频","link":"/categories/english/%E9%9F%B3%E9%A2%91/"},{"name":"angular","slug":"angular","link":"/categories/angular/"},{"name":"打印机","slug":"打印机","link":"/categories/%E6%89%93%E5%8D%B0%E6%9C%BA/"},{"name":"虚拟机","slug":"虚拟机","link":"/categories/%E8%99%9A%E6%8B%9F%E6%9C%BA/"},{"name":"精彩语录","slug":"精彩语录","link":"/categories/%E7%B2%BE%E5%BD%A9%E8%AF%AD%E5%BD%95/"},{"name":"维特拉","slug":"维特拉","link":"/categories/%E7%BB%B4%E7%89%B9%E6%8B%89/"}]}